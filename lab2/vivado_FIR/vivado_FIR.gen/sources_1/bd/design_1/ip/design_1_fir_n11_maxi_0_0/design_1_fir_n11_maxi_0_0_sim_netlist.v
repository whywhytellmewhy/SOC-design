// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.1 (lin64) Build 3526262 Mon Apr 18 15:47:01 MDT 2022
// Date        : Tue Oct  3 05:41:38 2023
// Host        : ubuntu2004 running 64-bit Ubuntu 20.04.4 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/ubuntu/course-lab_2/vivado_FIR/vivado_FIR.gen/sources_1/bd/design_1/ip/design_1_fir_n11_maxi_0_0/design_1_fir_n11_maxi_0_0_sim_netlist.v
// Design      : design_1_fir_n11_maxi_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z020clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_fir_n11_maxi_0_0,fir_n11_maxi,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "HLS" *) 
(* X_CORE_INFO = "fir_n11_maxi,Vivado 2022.1" *) (* hls_module = "yes" *) 
(* NotValidForBitStream *)
module design_1_fir_n11_maxi_0_0
   (s_axi_control_AWADDR,
    s_axi_control_AWVALID,
    s_axi_control_AWREADY,
    s_axi_control_WDATA,
    s_axi_control_WSTRB,
    s_axi_control_WVALID,
    s_axi_control_WREADY,
    s_axi_control_BRESP,
    s_axi_control_BVALID,
    s_axi_control_BREADY,
    s_axi_control_ARADDR,
    s_axi_control_ARVALID,
    s_axi_control_ARREADY,
    s_axi_control_RDATA,
    s_axi_control_RRESP,
    s_axi_control_RVALID,
    s_axi_control_RREADY,
    ap_clk,
    ap_rst_n,
    interrupt,
    m_axi_gmem_AWADDR,
    m_axi_gmem_AWLEN,
    m_axi_gmem_AWSIZE,
    m_axi_gmem_AWBURST,
    m_axi_gmem_AWLOCK,
    m_axi_gmem_AWREGION,
    m_axi_gmem_AWCACHE,
    m_axi_gmem_AWPROT,
    m_axi_gmem_AWQOS,
    m_axi_gmem_AWVALID,
    m_axi_gmem_AWREADY,
    m_axi_gmem_WDATA,
    m_axi_gmem_WSTRB,
    m_axi_gmem_WLAST,
    m_axi_gmem_WVALID,
    m_axi_gmem_WREADY,
    m_axi_gmem_BRESP,
    m_axi_gmem_BVALID,
    m_axi_gmem_BREADY,
    m_axi_gmem_ARADDR,
    m_axi_gmem_ARLEN,
    m_axi_gmem_ARSIZE,
    m_axi_gmem_ARBURST,
    m_axi_gmem_ARLOCK,
    m_axi_gmem_ARREGION,
    m_axi_gmem_ARCACHE,
    m_axi_gmem_ARPROT,
    m_axi_gmem_ARQOS,
    m_axi_gmem_ARVALID,
    m_axi_gmem_ARREADY,
    m_axi_gmem_RDATA,
    m_axi_gmem_RRESP,
    m_axi_gmem_RLAST,
    m_axi_gmem_RVALID,
    m_axi_gmem_RREADY);
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWADDR" *) input [6:0]s_axi_control_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWVALID" *) input s_axi_control_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWREADY" *) output s_axi_control_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WDATA" *) input [31:0]s_axi_control_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WSTRB" *) input [3:0]s_axi_control_WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WVALID" *) input s_axi_control_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WREADY" *) output s_axi_control_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BRESP" *) output [1:0]s_axi_control_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BVALID" *) output s_axi_control_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BREADY" *) input s_axi_control_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARADDR" *) input [6:0]s_axi_control_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARVALID" *) input s_axi_control_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARREADY" *) output s_axi_control_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RDATA" *) output [31:0]s_axi_control_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RRESP" *) output [1:0]s_axi_control_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RVALID" *) output s_axi_control_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_control, ADDR_WIDTH 7, DATA_WIDTH 32, PROTOCOL AXI4LITE, READ_WRITE_MODE READ_WRITE, FREQ_HZ 100000000, ID_WIDTH 0, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 4, NUM_WRITE_THREADS 4, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_control_RREADY;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 ap_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ap_clk, ASSOCIATED_BUSIF s_axi_control:m_axi_gmem, ASSOCIATED_RESET ap_rst_n, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0" *) input ap_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 ap_rst_n RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ap_rst_n, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input ap_rst_n;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 interrupt INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME interrupt, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWADDR" *) output [63:0]m_axi_gmem_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWLEN" *) output [7:0]m_axi_gmem_AWLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWSIZE" *) output [2:0]m_axi_gmem_AWSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWBURST" *) output [1:0]m_axi_gmem_AWBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWLOCK" *) output [1:0]m_axi_gmem_AWLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWREGION" *) output [3:0]m_axi_gmem_AWREGION;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWCACHE" *) output [3:0]m_axi_gmem_AWCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWPROT" *) output [2:0]m_axi_gmem_AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWQOS" *) output [3:0]m_axi_gmem_AWQOS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWVALID" *) output m_axi_gmem_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem AWREADY" *) input m_axi_gmem_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem WDATA" *) output [31:0]m_axi_gmem_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem WSTRB" *) output [3:0]m_axi_gmem_WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem WLAST" *) output m_axi_gmem_WLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem WVALID" *) output m_axi_gmem_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem WREADY" *) input m_axi_gmem_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem BRESP" *) input [1:0]m_axi_gmem_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem BVALID" *) input m_axi_gmem_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem BREADY" *) output m_axi_gmem_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARADDR" *) output [63:0]m_axi_gmem_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARLEN" *) output [7:0]m_axi_gmem_ARLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARSIZE" *) output [2:0]m_axi_gmem_ARSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARBURST" *) output [1:0]m_axi_gmem_ARBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARLOCK" *) output [1:0]m_axi_gmem_ARLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARREGION" *) output [3:0]m_axi_gmem_ARREGION;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARCACHE" *) output [3:0]m_axi_gmem_ARCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARPROT" *) output [2:0]m_axi_gmem_ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARQOS" *) output [3:0]m_axi_gmem_ARQOS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARVALID" *) output m_axi_gmem_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem ARREADY" *) input m_axi_gmem_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem RDATA" *) input [31:0]m_axi_gmem_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem RRESP" *) input [1:0]m_axi_gmem_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem RLAST" *) input m_axi_gmem_RLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem RVALID" *) input m_axi_gmem_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_gmem RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_gmem, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, MAX_READ_BURST_LENGTH 16, MAX_WRITE_BURST_LENGTH 16, MAX_BURST_LENGTH 256, PROTOCOL AXI4, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, SUPPORTS_NARROW_BURST 0, DATA_WIDTH 32, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 64, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.0, CLK_DOMAIN design_1_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_gmem_RREADY;

  wire \<const0> ;
  wire \<const1> ;
  wire ap_clk;
  wire ap_rst_n;
  wire interrupt;
  wire [63:2]\^m_axi_gmem_ARADDR ;
  wire [3:0]\^m_axi_gmem_ARLEN ;
  wire m_axi_gmem_ARREADY;
  wire m_axi_gmem_ARVALID;
  wire [63:2]\^m_axi_gmem_AWADDR ;
  wire [3:0]\^m_axi_gmem_AWLEN ;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire m_axi_gmem_BREADY;
  wire m_axi_gmem_BVALID;
  wire [31:0]m_axi_gmem_RDATA;
  wire m_axi_gmem_RLAST;
  wire m_axi_gmem_RREADY;
  wire m_axi_gmem_RVALID;
  wire [31:0]m_axi_gmem_WDATA;
  wire m_axi_gmem_WLAST;
  wire m_axi_gmem_WREADY;
  wire [3:0]m_axi_gmem_WSTRB;
  wire m_axi_gmem_WVALID;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire [3:0]s_axi_control_WSTRB;
  wire s_axi_control_WVALID;
  wire [1:0]NLW_inst_m_axi_gmem_ARADDR_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_gmem_ARBURST_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_ARID_UNCONNECTED;
  wire [7:4]NLW_inst_m_axi_gmem_ARLEN_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_gmem_ARLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_gmem_ARPROT_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_ARQOS_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_ARREGION_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_gmem_ARSIZE_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_ARUSER_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_gmem_AWADDR_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_gmem_AWBURST_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_AWID_UNCONNECTED;
  wire [7:4]NLW_inst_m_axi_gmem_AWLEN_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_gmem_AWLOCK_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_gmem_AWPROT_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_AWQOS_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_gmem_AWREGION_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_gmem_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_AWUSER_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_WID_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_gmem_WUSER_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_control_BRESP_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_control_RRESP_UNCONNECTED;

  assign m_axi_gmem_ARADDR[63:2] = \^m_axi_gmem_ARADDR [63:2];
  assign m_axi_gmem_ARADDR[1] = \<const0> ;
  assign m_axi_gmem_ARADDR[0] = \<const0> ;
  assign m_axi_gmem_ARBURST[1] = \<const0> ;
  assign m_axi_gmem_ARBURST[0] = \<const1> ;
  assign m_axi_gmem_ARCACHE[3] = \<const0> ;
  assign m_axi_gmem_ARCACHE[2] = \<const0> ;
  assign m_axi_gmem_ARCACHE[1] = \<const1> ;
  assign m_axi_gmem_ARCACHE[0] = \<const1> ;
  assign m_axi_gmem_ARLEN[7] = \<const0> ;
  assign m_axi_gmem_ARLEN[6] = \<const0> ;
  assign m_axi_gmem_ARLEN[5] = \<const0> ;
  assign m_axi_gmem_ARLEN[4] = \<const0> ;
  assign m_axi_gmem_ARLEN[3:0] = \^m_axi_gmem_ARLEN [3:0];
  assign m_axi_gmem_ARLOCK[1] = \<const0> ;
  assign m_axi_gmem_ARLOCK[0] = \<const0> ;
  assign m_axi_gmem_ARPROT[2] = \<const0> ;
  assign m_axi_gmem_ARPROT[1] = \<const0> ;
  assign m_axi_gmem_ARPROT[0] = \<const0> ;
  assign m_axi_gmem_ARQOS[3] = \<const0> ;
  assign m_axi_gmem_ARQOS[2] = \<const0> ;
  assign m_axi_gmem_ARQOS[1] = \<const0> ;
  assign m_axi_gmem_ARQOS[0] = \<const0> ;
  assign m_axi_gmem_ARREGION[3] = \<const0> ;
  assign m_axi_gmem_ARREGION[2] = \<const0> ;
  assign m_axi_gmem_ARREGION[1] = \<const0> ;
  assign m_axi_gmem_ARREGION[0] = \<const0> ;
  assign m_axi_gmem_ARSIZE[2] = \<const0> ;
  assign m_axi_gmem_ARSIZE[1] = \<const1> ;
  assign m_axi_gmem_ARSIZE[0] = \<const0> ;
  assign m_axi_gmem_AWADDR[63:2] = \^m_axi_gmem_AWADDR [63:2];
  assign m_axi_gmem_AWADDR[1] = \<const0> ;
  assign m_axi_gmem_AWADDR[0] = \<const0> ;
  assign m_axi_gmem_AWBURST[1] = \<const0> ;
  assign m_axi_gmem_AWBURST[0] = \<const1> ;
  assign m_axi_gmem_AWCACHE[3] = \<const0> ;
  assign m_axi_gmem_AWCACHE[2] = \<const0> ;
  assign m_axi_gmem_AWCACHE[1] = \<const1> ;
  assign m_axi_gmem_AWCACHE[0] = \<const1> ;
  assign m_axi_gmem_AWLEN[7] = \<const0> ;
  assign m_axi_gmem_AWLEN[6] = \<const0> ;
  assign m_axi_gmem_AWLEN[5] = \<const0> ;
  assign m_axi_gmem_AWLEN[4] = \<const0> ;
  assign m_axi_gmem_AWLEN[3:0] = \^m_axi_gmem_AWLEN [3:0];
  assign m_axi_gmem_AWLOCK[1] = \<const0> ;
  assign m_axi_gmem_AWLOCK[0] = \<const0> ;
  assign m_axi_gmem_AWPROT[2] = \<const0> ;
  assign m_axi_gmem_AWPROT[1] = \<const0> ;
  assign m_axi_gmem_AWPROT[0] = \<const0> ;
  assign m_axi_gmem_AWQOS[3] = \<const0> ;
  assign m_axi_gmem_AWQOS[2] = \<const0> ;
  assign m_axi_gmem_AWQOS[1] = \<const0> ;
  assign m_axi_gmem_AWQOS[0] = \<const0> ;
  assign m_axi_gmem_AWREGION[3] = \<const0> ;
  assign m_axi_gmem_AWREGION[2] = \<const0> ;
  assign m_axi_gmem_AWREGION[1] = \<const0> ;
  assign m_axi_gmem_AWREGION[0] = \<const0> ;
  assign m_axi_gmem_AWSIZE[2] = \<const0> ;
  assign m_axi_gmem_AWSIZE[1] = \<const1> ;
  assign m_axi_gmem_AWSIZE[0] = \<const0> ;
  assign s_axi_control_BRESP[1] = \<const0> ;
  assign s_axi_control_BRESP[0] = \<const0> ;
  assign s_axi_control_RRESP[1] = \<const0> ;
  assign s_axi_control_RRESP[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  (* C_M_AXI_DATA_WIDTH = "32" *) 
  (* C_M_AXI_GMEM_ADDR_WIDTH = "64" *) 
  (* C_M_AXI_GMEM_ARUSER_WIDTH = "1" *) 
  (* C_M_AXI_GMEM_AWUSER_WIDTH = "1" *) 
  (* C_M_AXI_GMEM_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_GMEM_CACHE_VALUE = "4'b0011" *) 
  (* C_M_AXI_GMEM_DATA_WIDTH = "32" *) 
  (* C_M_AXI_GMEM_ID_WIDTH = "1" *) 
  (* C_M_AXI_GMEM_PROT_VALUE = "3'b000" *) 
  (* C_M_AXI_GMEM_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_GMEM_USER_VALUE = "0" *) 
  (* C_M_AXI_GMEM_WSTRB_WIDTH = "4" *) 
  (* C_M_AXI_GMEM_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_WSTRB_WIDTH = "4" *) 
  (* C_S_AXI_CONTROL_ADDR_WIDTH = "7" *) 
  (* C_S_AXI_CONTROL_DATA_WIDTH = "32" *) 
  (* C_S_AXI_CONTROL_WSTRB_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_S_AXI_WSTRB_WIDTH = "4" *) 
  (* SDX_KERNEL = "true" *) 
  (* SDX_KERNEL_SYNTH_INST = "inst" *) 
  (* SDX_KERNEL_TYPE = "hls" *) 
  (* ap_ST_fsm_state1 = "14'b00000000000001" *) 
  (* ap_ST_fsm_state10 = "14'b00001000000000" *) 
  (* ap_ST_fsm_state11 = "14'b00010000000000" *) 
  (* ap_ST_fsm_state12 = "14'b00100000000000" *) 
  (* ap_ST_fsm_state13 = "14'b01000000000000" *) 
  (* ap_ST_fsm_state14 = "14'b10000000000000" *) 
  (* ap_ST_fsm_state2 = "14'b00000000000010" *) 
  (* ap_ST_fsm_state3 = "14'b00000000000100" *) 
  (* ap_ST_fsm_state4 = "14'b00000000001000" *) 
  (* ap_ST_fsm_state5 = "14'b00000000010000" *) 
  (* ap_ST_fsm_state6 = "14'b00000000100000" *) 
  (* ap_ST_fsm_state7 = "14'b00000001000000" *) 
  (* ap_ST_fsm_state8 = "14'b00000010000000" *) 
  (* ap_ST_fsm_state9 = "14'b00000100000000" *) 
  design_1_fir_n11_maxi_0_0_fir_n11_maxi inst
       (.ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .interrupt(interrupt),
        .m_axi_gmem_ARADDR({\^m_axi_gmem_ARADDR ,NLW_inst_m_axi_gmem_ARADDR_UNCONNECTED[1:0]}),
        .m_axi_gmem_ARBURST(NLW_inst_m_axi_gmem_ARBURST_UNCONNECTED[1:0]),
        .m_axi_gmem_ARCACHE(NLW_inst_m_axi_gmem_ARCACHE_UNCONNECTED[3:0]),
        .m_axi_gmem_ARID(NLW_inst_m_axi_gmem_ARID_UNCONNECTED[0]),
        .m_axi_gmem_ARLEN({NLW_inst_m_axi_gmem_ARLEN_UNCONNECTED[7:4],\^m_axi_gmem_ARLEN }),
        .m_axi_gmem_ARLOCK(NLW_inst_m_axi_gmem_ARLOCK_UNCONNECTED[1:0]),
        .m_axi_gmem_ARPROT(NLW_inst_m_axi_gmem_ARPROT_UNCONNECTED[2:0]),
        .m_axi_gmem_ARQOS(NLW_inst_m_axi_gmem_ARQOS_UNCONNECTED[3:0]),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .m_axi_gmem_ARREGION(NLW_inst_m_axi_gmem_ARREGION_UNCONNECTED[3:0]),
        .m_axi_gmem_ARSIZE(NLW_inst_m_axi_gmem_ARSIZE_UNCONNECTED[2:0]),
        .m_axi_gmem_ARUSER(NLW_inst_m_axi_gmem_ARUSER_UNCONNECTED[0]),
        .m_axi_gmem_ARVALID(m_axi_gmem_ARVALID),
        .m_axi_gmem_AWADDR({\^m_axi_gmem_AWADDR ,NLW_inst_m_axi_gmem_AWADDR_UNCONNECTED[1:0]}),
        .m_axi_gmem_AWBURST(NLW_inst_m_axi_gmem_AWBURST_UNCONNECTED[1:0]),
        .m_axi_gmem_AWCACHE(NLW_inst_m_axi_gmem_AWCACHE_UNCONNECTED[3:0]),
        .m_axi_gmem_AWID(NLW_inst_m_axi_gmem_AWID_UNCONNECTED[0]),
        .m_axi_gmem_AWLEN({NLW_inst_m_axi_gmem_AWLEN_UNCONNECTED[7:4],\^m_axi_gmem_AWLEN }),
        .m_axi_gmem_AWLOCK(NLW_inst_m_axi_gmem_AWLOCK_UNCONNECTED[1:0]),
        .m_axi_gmem_AWPROT(NLW_inst_m_axi_gmem_AWPROT_UNCONNECTED[2:0]),
        .m_axi_gmem_AWQOS(NLW_inst_m_axi_gmem_AWQOS_UNCONNECTED[3:0]),
        .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
        .m_axi_gmem_AWREGION(NLW_inst_m_axi_gmem_AWREGION_UNCONNECTED[3:0]),
        .m_axi_gmem_AWSIZE(NLW_inst_m_axi_gmem_AWSIZE_UNCONNECTED[2:0]),
        .m_axi_gmem_AWUSER(NLW_inst_m_axi_gmem_AWUSER_UNCONNECTED[0]),
        .m_axi_gmem_AWVALID(m_axi_gmem_AWVALID),
        .m_axi_gmem_BID(1'b0),
        .m_axi_gmem_BREADY(m_axi_gmem_BREADY),
        .m_axi_gmem_BRESP({1'b0,1'b0}),
        .m_axi_gmem_BUSER(1'b0),
        .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
        .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
        .m_axi_gmem_RID(1'b0),
        .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
        .m_axi_gmem_RREADY(m_axi_gmem_RREADY),
        .m_axi_gmem_RRESP({1'b0,1'b0}),
        .m_axi_gmem_RUSER(1'b0),
        .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
        .m_axi_gmem_WDATA(m_axi_gmem_WDATA),
        .m_axi_gmem_WID(NLW_inst_m_axi_gmem_WID_UNCONNECTED[0]),
        .m_axi_gmem_WLAST(m_axi_gmem_WLAST),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .m_axi_gmem_WSTRB(m_axi_gmem_WSTRB),
        .m_axi_gmem_WUSER(NLW_inst_m_axi_gmem_WUSER_UNCONNECTED[0]),
        .m_axi_gmem_WVALID(m_axi_gmem_WVALID),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARREADY(s_axi_control_ARREADY),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_AWADDR(s_axi_control_AWADDR),
        .s_axi_control_AWREADY(s_axi_control_AWREADY),
        .s_axi_control_AWVALID(s_axi_control_AWVALID),
        .s_axi_control_BREADY(s_axi_control_BREADY),
        .s_axi_control_BRESP(NLW_inst_s_axi_control_BRESP_UNCONNECTED[1:0]),
        .s_axi_control_BVALID(s_axi_control_BVALID),
        .s_axi_control_RDATA(s_axi_control_RDATA),
        .s_axi_control_RREADY(s_axi_control_RREADY),
        .s_axi_control_RRESP(NLW_inst_s_axi_control_RRESP_UNCONNECTED[1:0]),
        .s_axi_control_RVALID(s_axi_control_RVALID),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WREADY(s_axi_control_WREADY),
        .s_axi_control_WSTRB(s_axi_control_WSTRB),
        .s_axi_control_WVALID(s_axi_control_WVALID));
endmodule

(* C_M_AXI_DATA_WIDTH = "32" *) (* C_M_AXI_GMEM_ADDR_WIDTH = "64" *) (* C_M_AXI_GMEM_ARUSER_WIDTH = "1" *) 
(* C_M_AXI_GMEM_AWUSER_WIDTH = "1" *) (* C_M_AXI_GMEM_BUSER_WIDTH = "1" *) (* C_M_AXI_GMEM_CACHE_VALUE = "4'b0011" *) 
(* C_M_AXI_GMEM_DATA_WIDTH = "32" *) (* C_M_AXI_GMEM_ID_WIDTH = "1" *) (* C_M_AXI_GMEM_PROT_VALUE = "3'b000" *) 
(* C_M_AXI_GMEM_RUSER_WIDTH = "1" *) (* C_M_AXI_GMEM_USER_VALUE = "0" *) (* C_M_AXI_GMEM_WSTRB_WIDTH = "4" *) 
(* C_M_AXI_GMEM_WUSER_WIDTH = "1" *) (* C_M_AXI_WSTRB_WIDTH = "4" *) (* C_S_AXI_CONTROL_ADDR_WIDTH = "7" *) 
(* C_S_AXI_CONTROL_DATA_WIDTH = "32" *) (* C_S_AXI_CONTROL_WSTRB_WIDTH = "4" *) (* C_S_AXI_DATA_WIDTH = "32" *) 
(* C_S_AXI_WSTRB_WIDTH = "4" *) (* ORIG_REF_NAME = "fir_n11_maxi" *) (* ap_ST_fsm_state1 = "14'b00000000000001" *) 
(* ap_ST_fsm_state10 = "14'b00001000000000" *) (* ap_ST_fsm_state11 = "14'b00010000000000" *) (* ap_ST_fsm_state12 = "14'b00100000000000" *) 
(* ap_ST_fsm_state13 = "14'b01000000000000" *) (* ap_ST_fsm_state14 = "14'b10000000000000" *) (* ap_ST_fsm_state2 = "14'b00000000000010" *) 
(* ap_ST_fsm_state3 = "14'b00000000000100" *) (* ap_ST_fsm_state4 = "14'b00000000001000" *) (* ap_ST_fsm_state5 = "14'b00000000010000" *) 
(* ap_ST_fsm_state6 = "14'b00000000100000" *) (* ap_ST_fsm_state7 = "14'b00000001000000" *) (* ap_ST_fsm_state8 = "14'b00000010000000" *) 
(* ap_ST_fsm_state9 = "14'b00000100000000" *) (* hls_module = "yes" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi
   (ap_clk,
    ap_rst_n,
    m_axi_gmem_AWVALID,
    m_axi_gmem_AWREADY,
    m_axi_gmem_AWADDR,
    m_axi_gmem_AWID,
    m_axi_gmem_AWLEN,
    m_axi_gmem_AWSIZE,
    m_axi_gmem_AWBURST,
    m_axi_gmem_AWLOCK,
    m_axi_gmem_AWCACHE,
    m_axi_gmem_AWPROT,
    m_axi_gmem_AWQOS,
    m_axi_gmem_AWREGION,
    m_axi_gmem_AWUSER,
    m_axi_gmem_WVALID,
    m_axi_gmem_WREADY,
    m_axi_gmem_WDATA,
    m_axi_gmem_WSTRB,
    m_axi_gmem_WLAST,
    m_axi_gmem_WID,
    m_axi_gmem_WUSER,
    m_axi_gmem_ARVALID,
    m_axi_gmem_ARREADY,
    m_axi_gmem_ARADDR,
    m_axi_gmem_ARID,
    m_axi_gmem_ARLEN,
    m_axi_gmem_ARSIZE,
    m_axi_gmem_ARBURST,
    m_axi_gmem_ARLOCK,
    m_axi_gmem_ARCACHE,
    m_axi_gmem_ARPROT,
    m_axi_gmem_ARQOS,
    m_axi_gmem_ARREGION,
    m_axi_gmem_ARUSER,
    m_axi_gmem_RVALID,
    m_axi_gmem_RREADY,
    m_axi_gmem_RDATA,
    m_axi_gmem_RLAST,
    m_axi_gmem_RID,
    m_axi_gmem_RUSER,
    m_axi_gmem_RRESP,
    m_axi_gmem_BVALID,
    m_axi_gmem_BREADY,
    m_axi_gmem_BRESP,
    m_axi_gmem_BID,
    m_axi_gmem_BUSER,
    s_axi_control_AWVALID,
    s_axi_control_AWREADY,
    s_axi_control_AWADDR,
    s_axi_control_WVALID,
    s_axi_control_WREADY,
    s_axi_control_WDATA,
    s_axi_control_WSTRB,
    s_axi_control_ARVALID,
    s_axi_control_ARREADY,
    s_axi_control_ARADDR,
    s_axi_control_RVALID,
    s_axi_control_RREADY,
    s_axi_control_RDATA,
    s_axi_control_RRESP,
    s_axi_control_BVALID,
    s_axi_control_BREADY,
    s_axi_control_BRESP,
    interrupt);
  input ap_clk;
  input ap_rst_n;
  output m_axi_gmem_AWVALID;
  input m_axi_gmem_AWREADY;
  output [63:0]m_axi_gmem_AWADDR;
  output [0:0]m_axi_gmem_AWID;
  output [7:0]m_axi_gmem_AWLEN;
  output [2:0]m_axi_gmem_AWSIZE;
  output [1:0]m_axi_gmem_AWBURST;
  output [1:0]m_axi_gmem_AWLOCK;
  output [3:0]m_axi_gmem_AWCACHE;
  output [2:0]m_axi_gmem_AWPROT;
  output [3:0]m_axi_gmem_AWQOS;
  output [3:0]m_axi_gmem_AWREGION;
  output [0:0]m_axi_gmem_AWUSER;
  output m_axi_gmem_WVALID;
  input m_axi_gmem_WREADY;
  output [31:0]m_axi_gmem_WDATA;
  output [3:0]m_axi_gmem_WSTRB;
  output m_axi_gmem_WLAST;
  output [0:0]m_axi_gmem_WID;
  output [0:0]m_axi_gmem_WUSER;
  output m_axi_gmem_ARVALID;
  input m_axi_gmem_ARREADY;
  output [63:0]m_axi_gmem_ARADDR;
  output [0:0]m_axi_gmem_ARID;
  output [7:0]m_axi_gmem_ARLEN;
  output [2:0]m_axi_gmem_ARSIZE;
  output [1:0]m_axi_gmem_ARBURST;
  output [1:0]m_axi_gmem_ARLOCK;
  output [3:0]m_axi_gmem_ARCACHE;
  output [2:0]m_axi_gmem_ARPROT;
  output [3:0]m_axi_gmem_ARQOS;
  output [3:0]m_axi_gmem_ARREGION;
  output [0:0]m_axi_gmem_ARUSER;
  input m_axi_gmem_RVALID;
  output m_axi_gmem_RREADY;
  input [31:0]m_axi_gmem_RDATA;
  input m_axi_gmem_RLAST;
  input [0:0]m_axi_gmem_RID;
  input [0:0]m_axi_gmem_RUSER;
  input [1:0]m_axi_gmem_RRESP;
  input m_axi_gmem_BVALID;
  output m_axi_gmem_BREADY;
  input [1:0]m_axi_gmem_BRESP;
  input [0:0]m_axi_gmem_BID;
  input [0:0]m_axi_gmem_BUSER;
  input s_axi_control_AWVALID;
  output s_axi_control_AWREADY;
  input [6:0]s_axi_control_AWADDR;
  input s_axi_control_WVALID;
  output s_axi_control_WREADY;
  input [31:0]s_axi_control_WDATA;
  input [3:0]s_axi_control_WSTRB;
  input s_axi_control_ARVALID;
  output s_axi_control_ARREADY;
  input [6:0]s_axi_control_ARADDR;
  output s_axi_control_RVALID;
  input s_axi_control_RREADY;
  output [31:0]s_axi_control_RDATA;
  output [1:0]s_axi_control_RRESP;
  output s_axi_control_BVALID;
  input s_axi_control_BREADY;
  output [1:0]s_axi_control_BRESP;
  output interrupt;

  wire \<const0> ;
  wire [32:2]add_ln16_fu_289_p2;
  wire an32Coef_ce0;
  wire \ap_CS_fsm[1]_i_2_n_0 ;
  wire \ap_CS_fsm[1]_i_3__0_n_0 ;
  wire \ap_CS_fsm_reg_n_0_[0] ;
  wire ap_CS_fsm_state1;
  wire ap_CS_fsm_state10;
  wire ap_CS_fsm_state11;
  wire ap_CS_fsm_state12;
  wire ap_CS_fsm_state13;
  wire ap_CS_fsm_state14;
  wire ap_CS_fsm_state2;
  wire ap_CS_fsm_state20;
  wire ap_CS_fsm_state3;
  wire ap_CS_fsm_state4;
  wire ap_CS_fsm_state5;
  wire ap_CS_fsm_state6;
  wire ap_CS_fsm_state7;
  wire ap_CS_fsm_state7_0;
  wire ap_CS_fsm_state8;
  wire ap_CS_fsm_state9;
  wire [13:0]ap_NS_fsm;
  wire ap_clk;
  wire ap_done;
  wire ap_rst_n;
  wire ap_rst_n_inv;
  wire gmem_ARREADY;
  wire gmem_AWREADY;
  wire gmem_BVALID;
  wire [31:0]gmem_RDATA;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire gmem_m_axi_U_n_109;
  wire gmem_m_axi_U_n_110;
  wire gmem_m_axi_U_n_111;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire [30:0]grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_AWLEN;
  wire [31:0]grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_WDATA;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_0;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_11;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_12;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_2;
  wire interrupt;
  wire \load_unit/buff_rdata/pop ;
  wire \load_unit/burst_ready ;
  wire \load_unit/ready_for_outstanding ;
  wire [30:0]lshr_ln16_cast_reg_440;
  wire [63:2]\^m_axi_gmem_ARADDR ;
  wire [3:0]\^m_axi_gmem_ARLEN ;
  wire m_axi_gmem_ARREADY;
  wire m_axi_gmem_ARVALID;
  wire [63:2]\^m_axi_gmem_AWADDR ;
  wire [3:0]\^m_axi_gmem_AWLEN ;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire m_axi_gmem_BREADY;
  wire m_axi_gmem_BVALID;
  wire [31:0]m_axi_gmem_RDATA;
  wire m_axi_gmem_RLAST;
  wire m_axi_gmem_RREADY;
  wire m_axi_gmem_RVALID;
  wire [31:0]m_axi_gmem_WDATA;
  wire m_axi_gmem_WLAST;
  wire m_axi_gmem_WREADY;
  wire [3:0]m_axi_gmem_WSTRB;
  wire m_axi_gmem_WVALID;
  wire [7:7]p_5_in;
  wire p_5_in_1;
  wire [63:2]pn32HPInput;
  wire [63:2]pn32HPOutput;
  wire [31:0]q00;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire [3:0]s_axi_control_WSTRB;
  wire s_axi_control_WVALID;
  wire task_ap_ready;
  wire [61:0]trunc_ln18_1_reg_451;
  wire [61:0]trunc_ln30_1_reg_456;

  assign m_axi_gmem_ARADDR[63:2] = \^m_axi_gmem_ARADDR [63:2];
  assign m_axi_gmem_ARADDR[1] = \<const0> ;
  assign m_axi_gmem_ARADDR[0] = \<const0> ;
  assign m_axi_gmem_ARBURST[1] = \<const0> ;
  assign m_axi_gmem_ARBURST[0] = \<const0> ;
  assign m_axi_gmem_ARCACHE[3] = \<const0> ;
  assign m_axi_gmem_ARCACHE[2] = \<const0> ;
  assign m_axi_gmem_ARCACHE[1] = \<const0> ;
  assign m_axi_gmem_ARCACHE[0] = \<const0> ;
  assign m_axi_gmem_ARID[0] = \<const0> ;
  assign m_axi_gmem_ARLEN[7] = \<const0> ;
  assign m_axi_gmem_ARLEN[6] = \<const0> ;
  assign m_axi_gmem_ARLEN[5] = \<const0> ;
  assign m_axi_gmem_ARLEN[4] = \<const0> ;
  assign m_axi_gmem_ARLEN[3:0] = \^m_axi_gmem_ARLEN [3:0];
  assign m_axi_gmem_ARLOCK[1] = \<const0> ;
  assign m_axi_gmem_ARLOCK[0] = \<const0> ;
  assign m_axi_gmem_ARPROT[2] = \<const0> ;
  assign m_axi_gmem_ARPROT[1] = \<const0> ;
  assign m_axi_gmem_ARPROT[0] = \<const0> ;
  assign m_axi_gmem_ARQOS[3] = \<const0> ;
  assign m_axi_gmem_ARQOS[2] = \<const0> ;
  assign m_axi_gmem_ARQOS[1] = \<const0> ;
  assign m_axi_gmem_ARQOS[0] = \<const0> ;
  assign m_axi_gmem_ARREGION[3] = \<const0> ;
  assign m_axi_gmem_ARREGION[2] = \<const0> ;
  assign m_axi_gmem_ARREGION[1] = \<const0> ;
  assign m_axi_gmem_ARREGION[0] = \<const0> ;
  assign m_axi_gmem_ARSIZE[2] = \<const0> ;
  assign m_axi_gmem_ARSIZE[1] = \<const0> ;
  assign m_axi_gmem_ARSIZE[0] = \<const0> ;
  assign m_axi_gmem_ARUSER[0] = \<const0> ;
  assign m_axi_gmem_AWADDR[63:2] = \^m_axi_gmem_AWADDR [63:2];
  assign m_axi_gmem_AWADDR[1] = \<const0> ;
  assign m_axi_gmem_AWADDR[0] = \<const0> ;
  assign m_axi_gmem_AWBURST[1] = \<const0> ;
  assign m_axi_gmem_AWBURST[0] = \<const0> ;
  assign m_axi_gmem_AWCACHE[3] = \<const0> ;
  assign m_axi_gmem_AWCACHE[2] = \<const0> ;
  assign m_axi_gmem_AWCACHE[1] = \<const0> ;
  assign m_axi_gmem_AWCACHE[0] = \<const0> ;
  assign m_axi_gmem_AWID[0] = \<const0> ;
  assign m_axi_gmem_AWLEN[7] = \<const0> ;
  assign m_axi_gmem_AWLEN[6] = \<const0> ;
  assign m_axi_gmem_AWLEN[5] = \<const0> ;
  assign m_axi_gmem_AWLEN[4] = \<const0> ;
  assign m_axi_gmem_AWLEN[3:0] = \^m_axi_gmem_AWLEN [3:0];
  assign m_axi_gmem_AWLOCK[1] = \<const0> ;
  assign m_axi_gmem_AWLOCK[0] = \<const0> ;
  assign m_axi_gmem_AWPROT[2] = \<const0> ;
  assign m_axi_gmem_AWPROT[1] = \<const0> ;
  assign m_axi_gmem_AWPROT[0] = \<const0> ;
  assign m_axi_gmem_AWQOS[3] = \<const0> ;
  assign m_axi_gmem_AWQOS[2] = \<const0> ;
  assign m_axi_gmem_AWQOS[1] = \<const0> ;
  assign m_axi_gmem_AWQOS[0] = \<const0> ;
  assign m_axi_gmem_AWREGION[3] = \<const0> ;
  assign m_axi_gmem_AWREGION[2] = \<const0> ;
  assign m_axi_gmem_AWREGION[1] = \<const0> ;
  assign m_axi_gmem_AWREGION[0] = \<const0> ;
  assign m_axi_gmem_AWSIZE[2] = \<const0> ;
  assign m_axi_gmem_AWSIZE[1] = \<const0> ;
  assign m_axi_gmem_AWSIZE[0] = \<const0> ;
  assign m_axi_gmem_AWUSER[0] = \<const0> ;
  assign m_axi_gmem_WID[0] = \<const0> ;
  assign m_axi_gmem_WUSER[0] = \<const0> ;
  assign s_axi_control_BRESP[1] = \<const0> ;
  assign s_axi_control_BRESP[0] = \<const0> ;
  assign s_axi_control_RRESP[1] = \<const0> ;
  assign s_axi_control_RRESP[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT2 #(
    .INIT(4'hE)) 
    \ap_CS_fsm[1]_i_2 
       (.I0(ap_CS_fsm_state14),
        .I1(ap_CS_fsm_state13),
        .O(\ap_CS_fsm[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \ap_CS_fsm[1]_i_3__0 
       (.I0(ap_CS_fsm_state3),
        .I1(ap_CS_fsm_state2),
        .O(\ap_CS_fsm[1]_i_3__0_n_0 ));
  (* FSM_ENCODING = "none" *) 
  FDSE #(
    .INIT(1'b1)) 
    \ap_CS_fsm_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[0]),
        .Q(\ap_CS_fsm_reg_n_0_[0] ),
        .S(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[10] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state10),
        .Q(ap_CS_fsm_state11),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[11] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state11),
        .Q(ap_CS_fsm_state12),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[12] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state12),
        .Q(ap_CS_fsm_state13),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[13] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[13]),
        .Q(ap_CS_fsm_state14),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[1]),
        .Q(ap_CS_fsm_state2),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state2),
        .Q(ap_CS_fsm_state3),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state3),
        .Q(ap_CS_fsm_state4),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[4] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state4),
        .Q(ap_CS_fsm_state5),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[5] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state5),
        .Q(ap_CS_fsm_state6),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[6] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state6),
        .Q(ap_CS_fsm_state7),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[7] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state7),
        .Q(ap_CS_fsm_state8),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[8] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state8),
        .Q(ap_CS_fsm_state9),
        .R(ap_rst_n_inv));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[9] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_CS_fsm_state9),
        .Q(ap_CS_fsm_state10),
        .R(ap_rst_n_inv));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_control_s_axi control_s_axi_U
       (.D(ap_NS_fsm[1:0]),
        .\FSM_onehot_rstate_reg[1]_0 (s_axi_control_ARREADY),
        .\FSM_onehot_wstate_reg[1]_0 (s_axi_control_AWREADY),
        .Q({ap_CS_fsm_state12,ap_CS_fsm_state11,ap_CS_fsm_state10,ap_CS_fsm_state9,ap_CS_fsm_state8,ap_CS_fsm_state7,ap_CS_fsm_state6,ap_CS_fsm_state5,ap_CS_fsm_state4,ap_CS_fsm_state3,ap_CS_fsm_state2,\ap_CS_fsm_reg_n_0_[0] }),
        .SR(ap_rst_n_inv),
        .an32Coef_ce0(an32Coef_ce0),
        .\ap_CS_fsm_reg[1] (\ap_CS_fsm[1]_i_2_n_0 ),
        .\ap_CS_fsm_reg[1]_0 (\ap_CS_fsm[1]_i_3__0_n_0 ),
        .ap_clk(ap_clk),
        .ap_done(ap_done),
        .int_auto_restart_reg_0(p_5_in),
        .\int_pn32HPInput_reg[63]_0 (pn32HPInput),
        .\int_pn32HPOutput_reg[63]_0 (pn32HPOutput),
        .\int_regXferLeng_reg[31]_0 (add_ln16_fu_289_p2),
        .interrupt(interrupt),
        .q00(q00),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_AWADDR(s_axi_control_AWADDR),
        .s_axi_control_AWVALID(s_axi_control_AWVALID),
        .s_axi_control_BREADY(s_axi_control_BREADY),
        .s_axi_control_BVALID(s_axi_control_BVALID),
        .s_axi_control_RDATA(s_axi_control_RDATA),
        .s_axi_control_RREADY(s_axi_control_RREADY),
        .s_axi_control_RVALID(s_axi_control_RVALID),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WREADY(s_axi_control_WREADY),
        .s_axi_control_WSTRB(s_axi_control_WSTRB),
        .s_axi_control_WVALID(s_axi_control_WVALID),
        .task_ap_ready(task_ap_ready));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi gmem_m_axi_U
       (.D({m_axi_gmem_RLAST,m_axi_gmem_RDATA}),
        .Q({ap_CS_fsm_state14,ap_CS_fsm_state13}),
        .SR(ap_rst_n_inv),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\could_multi_bursts.ARVALID_Dummy_reg (m_axi_gmem_ARVALID),
        .\could_multi_bursts.arlen_buf_reg[3] (\^m_axi_gmem_ARLEN ),
        .\data_p1_reg[67] ({\^m_axi_gmem_AWLEN ,\^m_axi_gmem_AWADDR }),
        .dout({\load_unit/burst_ready ,gmem_RDATA}),
        .\dout_reg[36] ({m_axi_gmem_WLAST,m_axi_gmem_WSTRB,m_axi_gmem_WDATA}),
        .\dout_reg[94] ({lshr_ln16_cast_reg_440,trunc_ln18_1_reg_451}),
        .dout_vld_reg(gmem_m_axi_U_n_111),
        .dout_vld_reg_0({ap_CS_fsm_state20,ap_CS_fsm_state7_0,ap_CS_fsm_state1}),
        .empty_n_reg(gmem_m_axi_U_n_109),
        .full_n_reg(gmem_m_axi_U_n_110),
        .gmem_ARREADY(gmem_ARREADY),
        .gmem_AWREADY(gmem_AWREADY),
        .gmem_BVALID(gmem_BVALID),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .in({grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_AWLEN,trunc_ln30_1_reg_456}),
        .m_axi_gmem_ARADDR(\^m_axi_gmem_ARADDR ),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
        .m_axi_gmem_AWVALID(m_axi_gmem_AWVALID),
        .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
        .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .m_axi_gmem_WVALID(m_axi_gmem_WVALID),
        .mem_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_0),
        .mem_reg_0(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_2),
        .mem_reg_1(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_WDATA),
        .mem_reg_2(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_11),
        .p_5_in(p_5_in_1),
        .pop(\load_unit/buff_rdata/pop ),
        .ready_for_outstanding(\load_unit/ready_for_outstanding ),
        .s_ready_t_reg(m_axi_gmem_BREADY),
        .s_ready_t_reg_0(m_axi_gmem_RREADY));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_fir_n11_maxi_Pipeline_XFER_LOOP grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242
       (.D(ap_NS_fsm[13]),
        .Q({ap_CS_fsm_state14,ap_CS_fsm_state13,ap_CS_fsm_state12,ap_CS_fsm_state11,ap_CS_fsm_state10,ap_CS_fsm_state9,ap_CS_fsm_state8,ap_CS_fsm_state7,ap_CS_fsm_state6,ap_CS_fsm_state5,ap_CS_fsm_state4,ap_CS_fsm_state3,ap_CS_fsm_state2}),
        .SR(ap_rst_n_inv),
        .\add_ln28_9_reg_709_reg[31]_0 (grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_WDATA),
        .an32Coef_ce0(an32Coef_ce0),
        .\ap_CS_fsm_reg[12]_0 ({ap_CS_fsm_state20,ap_CS_fsm_state7_0,ap_CS_fsm_state1}),
        .\ap_CS_fsm_reg[12]_1 (grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_12),
        .\ap_CS_fsm_reg[1]_0 (gmem_m_axi_U_n_110),
        .ap_clk(ap_clk),
        .ap_done(ap_done),
        .ap_enable_reg_pp0_iter1_reg_0(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_0),
        .ap_enable_reg_pp0_iter1_reg_1(gmem_m_axi_U_n_111),
        .ap_enable_reg_pp0_iter7_reg_0(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_2),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_11),
        .dout({\load_unit/burst_ready ,gmem_RDATA}),
        .gmem_ARREADY(gmem_ARREADY),
        .gmem_AWREADY(gmem_AWREADY),
        .gmem_BVALID(gmem_BVALID),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .int_ap_ready_reg(p_5_in),
        .mem_reg(gmem_m_axi_U_n_109),
        .p_5_in(p_5_in_1),
        .\p_cast_reg_496_reg[30]_0 (grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_AWLEN),
        .\p_cast_reg_496_reg[30]_1 (lshr_ln16_cast_reg_440),
        .pop(\load_unit/buff_rdata/pop ),
        .q00(q00),
        .ready_for_outstanding(\load_unit/ready_for_outstanding ),
        .task_ap_ready(task_ap_ready));
  FDRE #(
    .INIT(1'b0)) 
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_n_12),
        .Q(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .R(ap_rst_n_inv));
  FDRE \lshr_ln16_cast_reg_440_reg[0] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[2]),
        .Q(lshr_ln16_cast_reg_440[0]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[10] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[12]),
        .Q(lshr_ln16_cast_reg_440[10]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[11] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[13]),
        .Q(lshr_ln16_cast_reg_440[11]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[12] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[14]),
        .Q(lshr_ln16_cast_reg_440[12]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[13] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[15]),
        .Q(lshr_ln16_cast_reg_440[13]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[14] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[16]),
        .Q(lshr_ln16_cast_reg_440[14]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[15] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[17]),
        .Q(lshr_ln16_cast_reg_440[15]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[16] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[18]),
        .Q(lshr_ln16_cast_reg_440[16]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[17] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[19]),
        .Q(lshr_ln16_cast_reg_440[17]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[18] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[20]),
        .Q(lshr_ln16_cast_reg_440[18]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[19] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[21]),
        .Q(lshr_ln16_cast_reg_440[19]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[1] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[3]),
        .Q(lshr_ln16_cast_reg_440[1]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[20] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[22]),
        .Q(lshr_ln16_cast_reg_440[20]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[21] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[23]),
        .Q(lshr_ln16_cast_reg_440[21]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[22] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[24]),
        .Q(lshr_ln16_cast_reg_440[22]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[23] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[25]),
        .Q(lshr_ln16_cast_reg_440[23]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[24] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[26]),
        .Q(lshr_ln16_cast_reg_440[24]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[25] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[27]),
        .Q(lshr_ln16_cast_reg_440[25]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[26] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[28]),
        .Q(lshr_ln16_cast_reg_440[26]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[27] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[29]),
        .Q(lshr_ln16_cast_reg_440[27]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[28] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[30]),
        .Q(lshr_ln16_cast_reg_440[28]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[29] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[31]),
        .Q(lshr_ln16_cast_reg_440[29]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[2] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[4]),
        .Q(lshr_ln16_cast_reg_440[2]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[30] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[32]),
        .Q(lshr_ln16_cast_reg_440[30]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[3] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[5]),
        .Q(lshr_ln16_cast_reg_440[3]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[4] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[6]),
        .Q(lshr_ln16_cast_reg_440[4]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[5] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[7]),
        .Q(lshr_ln16_cast_reg_440[5]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[6] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[8]),
        .Q(lshr_ln16_cast_reg_440[6]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[7] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[9]),
        .Q(lshr_ln16_cast_reg_440[7]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[8] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[10]),
        .Q(lshr_ln16_cast_reg_440[8]),
        .R(1'b0));
  FDRE \lshr_ln16_cast_reg_440_reg[9] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(add_ln16_fu_289_p2[11]),
        .Q(lshr_ln16_cast_reg_440[9]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[0] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[2]),
        .Q(trunc_ln18_1_reg_451[0]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[10] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[12]),
        .Q(trunc_ln18_1_reg_451[10]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[11] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[13]),
        .Q(trunc_ln18_1_reg_451[11]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[12] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[14]),
        .Q(trunc_ln18_1_reg_451[12]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[13] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[15]),
        .Q(trunc_ln18_1_reg_451[13]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[14] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[16]),
        .Q(trunc_ln18_1_reg_451[14]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[15] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[17]),
        .Q(trunc_ln18_1_reg_451[15]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[16] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[18]),
        .Q(trunc_ln18_1_reg_451[16]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[17] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[19]),
        .Q(trunc_ln18_1_reg_451[17]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[18] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[20]),
        .Q(trunc_ln18_1_reg_451[18]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[19] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[21]),
        .Q(trunc_ln18_1_reg_451[19]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[1] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[3]),
        .Q(trunc_ln18_1_reg_451[1]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[20] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[22]),
        .Q(trunc_ln18_1_reg_451[20]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[21] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[23]),
        .Q(trunc_ln18_1_reg_451[21]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[22] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[24]),
        .Q(trunc_ln18_1_reg_451[22]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[23] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[25]),
        .Q(trunc_ln18_1_reg_451[23]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[24] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[26]),
        .Q(trunc_ln18_1_reg_451[24]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[25] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[27]),
        .Q(trunc_ln18_1_reg_451[25]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[26] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[28]),
        .Q(trunc_ln18_1_reg_451[26]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[27] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[29]),
        .Q(trunc_ln18_1_reg_451[27]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[28] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[30]),
        .Q(trunc_ln18_1_reg_451[28]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[29] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[31]),
        .Q(trunc_ln18_1_reg_451[29]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[2] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[4]),
        .Q(trunc_ln18_1_reg_451[2]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[30] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[32]),
        .Q(trunc_ln18_1_reg_451[30]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[31] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[33]),
        .Q(trunc_ln18_1_reg_451[31]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[32] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[34]),
        .Q(trunc_ln18_1_reg_451[32]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[33] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[35]),
        .Q(trunc_ln18_1_reg_451[33]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[34] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[36]),
        .Q(trunc_ln18_1_reg_451[34]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[35] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[37]),
        .Q(trunc_ln18_1_reg_451[35]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[36] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[38]),
        .Q(trunc_ln18_1_reg_451[36]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[37] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[39]),
        .Q(trunc_ln18_1_reg_451[37]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[38] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[40]),
        .Q(trunc_ln18_1_reg_451[38]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[39] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[41]),
        .Q(trunc_ln18_1_reg_451[39]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[3] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[5]),
        .Q(trunc_ln18_1_reg_451[3]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[40] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[42]),
        .Q(trunc_ln18_1_reg_451[40]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[41] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[43]),
        .Q(trunc_ln18_1_reg_451[41]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[42] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[44]),
        .Q(trunc_ln18_1_reg_451[42]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[43] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[45]),
        .Q(trunc_ln18_1_reg_451[43]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[44] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[46]),
        .Q(trunc_ln18_1_reg_451[44]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[45] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[47]),
        .Q(trunc_ln18_1_reg_451[45]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[46] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[48]),
        .Q(trunc_ln18_1_reg_451[46]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[47] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[49]),
        .Q(trunc_ln18_1_reg_451[47]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[48] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[50]),
        .Q(trunc_ln18_1_reg_451[48]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[49] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[51]),
        .Q(trunc_ln18_1_reg_451[49]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[4] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[6]),
        .Q(trunc_ln18_1_reg_451[4]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[50] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[52]),
        .Q(trunc_ln18_1_reg_451[50]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[51] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[53]),
        .Q(trunc_ln18_1_reg_451[51]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[52] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[54]),
        .Q(trunc_ln18_1_reg_451[52]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[53] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[55]),
        .Q(trunc_ln18_1_reg_451[53]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[54] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[56]),
        .Q(trunc_ln18_1_reg_451[54]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[55] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[57]),
        .Q(trunc_ln18_1_reg_451[55]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[56] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[58]),
        .Q(trunc_ln18_1_reg_451[56]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[57] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[59]),
        .Q(trunc_ln18_1_reg_451[57]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[58] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[60]),
        .Q(trunc_ln18_1_reg_451[58]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[59] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[61]),
        .Q(trunc_ln18_1_reg_451[59]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[5] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[7]),
        .Q(trunc_ln18_1_reg_451[5]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[60] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[62]),
        .Q(trunc_ln18_1_reg_451[60]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[61] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[63]),
        .Q(trunc_ln18_1_reg_451[61]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[6] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[8]),
        .Q(trunc_ln18_1_reg_451[6]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[7] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[9]),
        .Q(trunc_ln18_1_reg_451[7]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[8] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[10]),
        .Q(trunc_ln18_1_reg_451[8]),
        .R(1'b0));
  FDRE \trunc_ln18_1_reg_451_reg[9] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPInput[11]),
        .Q(trunc_ln18_1_reg_451[9]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[0] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[2]),
        .Q(trunc_ln30_1_reg_456[0]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[10] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[12]),
        .Q(trunc_ln30_1_reg_456[10]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[11] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[13]),
        .Q(trunc_ln30_1_reg_456[11]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[12] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[14]),
        .Q(trunc_ln30_1_reg_456[12]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[13] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[15]),
        .Q(trunc_ln30_1_reg_456[13]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[14] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[16]),
        .Q(trunc_ln30_1_reg_456[14]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[15] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[17]),
        .Q(trunc_ln30_1_reg_456[15]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[16] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[18]),
        .Q(trunc_ln30_1_reg_456[16]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[17] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[19]),
        .Q(trunc_ln30_1_reg_456[17]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[18] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[20]),
        .Q(trunc_ln30_1_reg_456[18]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[19] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[21]),
        .Q(trunc_ln30_1_reg_456[19]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[1] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[3]),
        .Q(trunc_ln30_1_reg_456[1]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[20] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[22]),
        .Q(trunc_ln30_1_reg_456[20]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[21] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[23]),
        .Q(trunc_ln30_1_reg_456[21]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[22] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[24]),
        .Q(trunc_ln30_1_reg_456[22]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[23] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[25]),
        .Q(trunc_ln30_1_reg_456[23]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[24] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[26]),
        .Q(trunc_ln30_1_reg_456[24]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[25] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[27]),
        .Q(trunc_ln30_1_reg_456[25]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[26] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[28]),
        .Q(trunc_ln30_1_reg_456[26]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[27] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[29]),
        .Q(trunc_ln30_1_reg_456[27]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[28] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[30]),
        .Q(trunc_ln30_1_reg_456[28]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[29] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[31]),
        .Q(trunc_ln30_1_reg_456[29]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[2] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[4]),
        .Q(trunc_ln30_1_reg_456[2]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[30] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[32]),
        .Q(trunc_ln30_1_reg_456[30]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[31] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[33]),
        .Q(trunc_ln30_1_reg_456[31]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[32] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[34]),
        .Q(trunc_ln30_1_reg_456[32]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[33] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[35]),
        .Q(trunc_ln30_1_reg_456[33]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[34] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[36]),
        .Q(trunc_ln30_1_reg_456[34]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[35] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[37]),
        .Q(trunc_ln30_1_reg_456[35]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[36] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[38]),
        .Q(trunc_ln30_1_reg_456[36]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[37] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[39]),
        .Q(trunc_ln30_1_reg_456[37]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[38] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[40]),
        .Q(trunc_ln30_1_reg_456[38]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[39] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[41]),
        .Q(trunc_ln30_1_reg_456[39]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[3] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[5]),
        .Q(trunc_ln30_1_reg_456[3]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[40] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[42]),
        .Q(trunc_ln30_1_reg_456[40]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[41] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[43]),
        .Q(trunc_ln30_1_reg_456[41]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[42] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[44]),
        .Q(trunc_ln30_1_reg_456[42]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[43] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[45]),
        .Q(trunc_ln30_1_reg_456[43]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[44] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[46]),
        .Q(trunc_ln30_1_reg_456[44]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[45] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[47]),
        .Q(trunc_ln30_1_reg_456[45]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[46] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[48]),
        .Q(trunc_ln30_1_reg_456[46]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[47] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[49]),
        .Q(trunc_ln30_1_reg_456[47]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[48] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[50]),
        .Q(trunc_ln30_1_reg_456[48]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[49] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[51]),
        .Q(trunc_ln30_1_reg_456[49]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[4] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[6]),
        .Q(trunc_ln30_1_reg_456[4]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[50] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[52]),
        .Q(trunc_ln30_1_reg_456[50]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[51] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[53]),
        .Q(trunc_ln30_1_reg_456[51]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[52] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[54]),
        .Q(trunc_ln30_1_reg_456[52]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[53] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[55]),
        .Q(trunc_ln30_1_reg_456[53]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[54] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[56]),
        .Q(trunc_ln30_1_reg_456[54]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[55] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[57]),
        .Q(trunc_ln30_1_reg_456[55]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[56] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[58]),
        .Q(trunc_ln30_1_reg_456[56]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[57] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[59]),
        .Q(trunc_ln30_1_reg_456[57]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[58] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[60]),
        .Q(trunc_ln30_1_reg_456[58]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[59] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[61]),
        .Q(trunc_ln30_1_reg_456[59]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[5] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[7]),
        .Q(trunc_ln30_1_reg_456[5]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[60] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[62]),
        .Q(trunc_ln30_1_reg_456[60]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[61] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[63]),
        .Q(trunc_ln30_1_reg_456[61]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[6] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[8]),
        .Q(trunc_ln30_1_reg_456[6]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[7] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[9]),
        .Q(trunc_ln30_1_reg_456[7]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[8] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[10]),
        .Q(trunc_ln30_1_reg_456[8]),
        .R(1'b0));
  FDRE \trunc_ln30_1_reg_456_reg[9] 
       (.C(ap_clk),
        .CE(ap_CS_fsm_state12),
        .D(pn32HPOutput[11]),
        .Q(trunc_ln30_1_reg_456[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_control_s_axi" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_control_s_axi
   (int_auto_restart_reg_0,
    interrupt,
    \FSM_onehot_rstate_reg[1]_0 ,
    \FSM_onehot_wstate_reg[1]_0 ,
    s_axi_control_BVALID,
    s_axi_control_WREADY,
    s_axi_control_RVALID,
    D,
    \int_pn32HPOutput_reg[63]_0 ,
    \int_pn32HPInput_reg[63]_0 ,
    an32Coef_ce0,
    \int_regXferLeng_reg[31]_0 ,
    s_axi_control_RDATA,
    q00,
    SR,
    ap_clk,
    s_axi_control_ARADDR,
    s_axi_control_ARVALID,
    s_axi_control_WVALID,
    s_axi_control_RREADY,
    s_axi_control_WSTRB,
    s_axi_control_WDATA,
    s_axi_control_AWVALID,
    s_axi_control_BREADY,
    Q,
    ap_done,
    \ap_CS_fsm_reg[1] ,
    \ap_CS_fsm_reg[1]_0 ,
    task_ap_ready,
    s_axi_control_AWADDR);
  output [0:0]int_auto_restart_reg_0;
  output interrupt;
  output \FSM_onehot_rstate_reg[1]_0 ;
  output \FSM_onehot_wstate_reg[1]_0 ;
  output s_axi_control_BVALID;
  output s_axi_control_WREADY;
  output s_axi_control_RVALID;
  output [1:0]D;
  output [61:0]\int_pn32HPOutput_reg[63]_0 ;
  output [61:0]\int_pn32HPInput_reg[63]_0 ;
  output an32Coef_ce0;
  output [30:0]\int_regXferLeng_reg[31]_0 ;
  output [31:0]s_axi_control_RDATA;
  output [31:0]q00;
  input [0:0]SR;
  input ap_clk;
  input [6:0]s_axi_control_ARADDR;
  input s_axi_control_ARVALID;
  input s_axi_control_WVALID;
  input s_axi_control_RREADY;
  input [3:0]s_axi_control_WSTRB;
  input [31:0]s_axi_control_WDATA;
  input s_axi_control_AWVALID;
  input s_axi_control_BREADY;
  input [11:0]Q;
  input ap_done;
  input \ap_CS_fsm_reg[1] ;
  input \ap_CS_fsm_reg[1]_0 ;
  input task_ap_ready;
  input [6:0]s_axi_control_AWADDR;

  wire [1:0]D;
  wire \FSM_onehot_rstate[1]_i_1_n_0 ;
  wire \FSM_onehot_rstate[2]_i_1_n_0 ;
  wire \FSM_onehot_rstate_reg[1]_0 ;
  wire \FSM_onehot_rstate_reg_n_0_[2] ;
  wire \FSM_onehot_wstate[1]_i_1_n_0 ;
  wire \FSM_onehot_wstate[2]_i_1_n_0 ;
  wire \FSM_onehot_wstate[3]_i_1_n_0 ;
  wire \FSM_onehot_wstate_reg[1]_0 ;
  wire \FSM_onehot_wstate_reg_n_0_[2] ;
  wire [11:0]Q;
  wire [0:0]SR;
  wire [3:3]address0;
  wire an32Coef_ce0;
  wire \ap_CS_fsm_reg[1] ;
  wire \ap_CS_fsm_reg[1]_0 ;
  wire ap_clk;
  wire ap_done;
  wire ap_idle;
  wire ap_start;
  wire auto_restart_status_i_1_n_0;
  wire auto_restart_status_reg_n_0;
  wire aw_hs;
  wire [1:0]data3;
  wire int_an32Coef_n_0;
  wire int_an32Coef_n_1;
  wire int_an32Coef_n_10;
  wire int_an32Coef_n_11;
  wire int_an32Coef_n_12;
  wire int_an32Coef_n_13;
  wire int_an32Coef_n_14;
  wire int_an32Coef_n_15;
  wire int_an32Coef_n_16;
  wire int_an32Coef_n_17;
  wire int_an32Coef_n_18;
  wire int_an32Coef_n_19;
  wire int_an32Coef_n_2;
  wire int_an32Coef_n_20;
  wire int_an32Coef_n_21;
  wire int_an32Coef_n_22;
  wire int_an32Coef_n_23;
  wire int_an32Coef_n_24;
  wire int_an32Coef_n_25;
  wire int_an32Coef_n_26;
  wire int_an32Coef_n_27;
  wire int_an32Coef_n_28;
  wire int_an32Coef_n_29;
  wire int_an32Coef_n_3;
  wire int_an32Coef_n_30;
  wire int_an32Coef_n_31;
  wire int_an32Coef_n_32;
  wire int_an32Coef_n_4;
  wire int_an32Coef_n_5;
  wire int_an32Coef_n_6;
  wire int_an32Coef_n_7;
  wire int_an32Coef_n_8;
  wire int_an32Coef_n_9;
  wire int_an32Coef_read;
  wire int_an32Coef_read0;
  wire int_an32Coef_write_i_1_n_0;
  wire int_an32Coef_write_reg_n_0;
  wire int_ap_ready;
  wire int_ap_ready_i_1_n_0;
  wire int_ap_start5_out;
  wire int_ap_start_i_1_n_0;
  wire int_auto_restart_i_1_n_0;
  wire [0:0]int_auto_restart_reg_0;
  wire int_gie_i_1_n_0;
  wire int_gie_reg_n_0;
  wire \int_ier[0]_i_1_n_0 ;
  wire \int_ier[1]_i_1_n_0 ;
  wire \int_ier[1]_i_2_n_0 ;
  wire \int_ier[1]_i_3_n_0 ;
  wire \int_ier_reg_n_0_[0] ;
  wire \int_ier_reg_n_0_[1] ;
  wire int_interrupt0;
  wire \int_isr[0]_i_1_n_0 ;
  wire \int_isr[0]_i_2_n_0 ;
  wire \int_isr[1]_i_1_n_0 ;
  wire \int_pn32HPInput[31]_i_1_n_0 ;
  wire \int_pn32HPInput[31]_i_3_n_0 ;
  wire \int_pn32HPInput[63]_i_1_n_0 ;
  wire [31:0]int_pn32HPInput_reg0;
  wire [31:0]int_pn32HPInput_reg04_out;
  wire [61:0]\int_pn32HPInput_reg[63]_0 ;
  wire \int_pn32HPOutput[31]_i_1_n_0 ;
  wire \int_pn32HPOutput[63]_i_1_n_0 ;
  wire [31:0]int_pn32HPOutput_reg0;
  wire [31:0]int_pn32HPOutput_reg01_out;
  wire [61:0]\int_pn32HPOutput_reg[63]_0 ;
  wire [31:0]int_regXferLeng0;
  wire \int_regXferLeng[31]_i_1_n_0 ;
  wire \int_regXferLeng[31]_i_3_n_0 ;
  wire [30:0]\int_regXferLeng_reg[31]_0 ;
  wire int_task_ap_done;
  wire int_task_ap_done_i_1_n_0;
  wire int_task_ap_done_i_3_n_0;
  wire interrupt;
  wire \lshr_ln16_cast_reg_440[2]_i_2_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[10]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[10]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[10]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[10]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[14]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[14]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[14]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[14]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[18]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[18]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[18]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[18]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[22]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[22]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[22]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[22]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[26]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[26]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[26]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[26]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[2]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[2]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[2]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[2]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[30]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[30]_i_1_n_3 ;
  wire \lshr_ln16_cast_reg_440_reg[6]_i_1_n_0 ;
  wire \lshr_ln16_cast_reg_440_reg[6]_i_1_n_1 ;
  wire \lshr_ln16_cast_reg_440_reg[6]_i_1_n_2 ;
  wire \lshr_ln16_cast_reg_440_reg[6]_i_1_n_3 ;
  wire [3:0]p_0_in;
  wire [2:2]p_5_in;
  wire [1:0]pn32HPInput;
  wire [1:0]pn32HPOutput;
  wire [31:0]q00;
  wire \rdata[0]_i_2_n_0 ;
  wire \rdata[0]_i_3_n_0 ;
  wire \rdata[0]_i_4_n_0 ;
  wire \rdata[0]_i_5_n_0 ;
  wire \rdata[10]_i_2_n_0 ;
  wire \rdata[10]_i_3_n_0 ;
  wire \rdata[11]_i_2_n_0 ;
  wire \rdata[11]_i_3_n_0 ;
  wire \rdata[12]_i_2_n_0 ;
  wire \rdata[12]_i_3_n_0 ;
  wire \rdata[13]_i_2_n_0 ;
  wire \rdata[13]_i_3_n_0 ;
  wire \rdata[14]_i_2_n_0 ;
  wire \rdata[14]_i_3_n_0 ;
  wire \rdata[15]_i_2_n_0 ;
  wire \rdata[15]_i_3_n_0 ;
  wire \rdata[16]_i_2_n_0 ;
  wire \rdata[16]_i_3_n_0 ;
  wire \rdata[17]_i_2_n_0 ;
  wire \rdata[17]_i_3_n_0 ;
  wire \rdata[18]_i_2_n_0 ;
  wire \rdata[18]_i_3_n_0 ;
  wire \rdata[19]_i_2_n_0 ;
  wire \rdata[19]_i_3_n_0 ;
  wire \rdata[1]_i_2_n_0 ;
  wire \rdata[1]_i_3_n_0 ;
  wire \rdata[1]_i_4_n_0 ;
  wire \rdata[1]_i_5_n_0 ;
  wire \rdata[20]_i_2_n_0 ;
  wire \rdata[20]_i_3_n_0 ;
  wire \rdata[21]_i_2_n_0 ;
  wire \rdata[21]_i_3_n_0 ;
  wire \rdata[22]_i_2_n_0 ;
  wire \rdata[22]_i_3_n_0 ;
  wire \rdata[23]_i_2_n_0 ;
  wire \rdata[23]_i_3_n_0 ;
  wire \rdata[24]_i_2_n_0 ;
  wire \rdata[24]_i_3_n_0 ;
  wire \rdata[25]_i_2_n_0 ;
  wire \rdata[25]_i_3_n_0 ;
  wire \rdata[26]_i_2_n_0 ;
  wire \rdata[26]_i_3_n_0 ;
  wire \rdata[27]_i_2_n_0 ;
  wire \rdata[27]_i_3_n_0 ;
  wire \rdata[28]_i_2_n_0 ;
  wire \rdata[28]_i_3_n_0 ;
  wire \rdata[29]_i_2_n_0 ;
  wire \rdata[29]_i_3_n_0 ;
  wire \rdata[2]_i_2_n_0 ;
  wire \rdata[2]_i_3_n_0 ;
  wire \rdata[2]_i_4_n_0 ;
  wire \rdata[30]_i_2_n_0 ;
  wire \rdata[30]_i_3_n_0 ;
  wire \rdata[31]_i_1_n_0 ;
  wire \rdata[31]_i_3_n_0 ;
  wire \rdata[31]_i_4_n_0 ;
  wire \rdata[31]_i_5_n_0 ;
  wire \rdata[31]_i_6_n_0 ;
  wire \rdata[3]_i_2_n_0 ;
  wire \rdata[3]_i_3_n_0 ;
  wire \rdata[3]_i_4_n_0 ;
  wire \rdata[4]_i_2_n_0 ;
  wire \rdata[4]_i_3_n_0 ;
  wire \rdata[5]_i_2_n_0 ;
  wire \rdata[5]_i_3_n_0 ;
  wire \rdata[6]_i_2_n_0 ;
  wire \rdata[6]_i_3_n_0 ;
  wire \rdata[7]_i_2_n_0 ;
  wire \rdata[7]_i_3_n_0 ;
  wire \rdata[7]_i_4_n_0 ;
  wire \rdata[8]_i_2_n_0 ;
  wire \rdata[8]_i_3_n_0 ;
  wire \rdata[9]_i_3_n_0 ;
  wire \rdata[9]_i_4_n_0 ;
  wire \rdata[9]_i_5_n_0 ;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire [3:0]s_axi_control_WSTRB;
  wire s_axi_control_WVALID;
  wire task_ap_done;
  wire task_ap_ready;
  wire \waddr_reg_n_0_[0] ;
  wire \waddr_reg_n_0_[1] ;
  wire \waddr_reg_n_0_[6] ;
  wire [31:0]zext_ln16_fu_285_p1;
  wire [0:0]\NLW_lshr_ln16_cast_reg_440_reg[2]_i_1_O_UNCONNECTED ;
  wire [2:2]\NLW_lshr_ln16_cast_reg_440_reg[30]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_lshr_ln16_cast_reg_440_reg[30]_i_1_O_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h4F774477)) 
    \FSM_onehot_rstate[1]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\FSM_onehot_rstate_reg[1]_0 ),
        .I2(int_an32Coef_read),
        .I3(\FSM_onehot_rstate_reg_n_0_[2] ),
        .I4(s_axi_control_RREADY),
        .O(\FSM_onehot_rstate[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hFFC4C4C4)) 
    \FSM_onehot_rstate[2]_i_1 
       (.I0(s_axi_control_RREADY),
        .I1(\FSM_onehot_rstate_reg_n_0_[2] ),
        .I2(int_an32Coef_read),
        .I3(\FSM_onehot_rstate_reg[1]_0 ),
        .I4(s_axi_control_ARVALID),
        .O(\FSM_onehot_rstate[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "RDIDLE:010,RDDATA:100,iSTATE:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rstate_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\FSM_onehot_rstate[1]_i_1_n_0 ),
        .Q(\FSM_onehot_rstate_reg[1]_0 ),
        .R(SR));
  (* FSM_ENCODED_STATES = "RDIDLE:010,RDDATA:100,iSTATE:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_rstate_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\FSM_onehot_rstate[2]_i_1_n_0 ),
        .Q(\FSM_onehot_rstate_reg_n_0_[2] ),
        .R(SR));
  LUT5 #(
    .INIT(32'hBA30BA3F)) 
    \FSM_onehot_wstate[1]_i_1 
       (.I0(s_axi_control_BREADY),
        .I1(s_axi_control_AWVALID),
        .I2(\FSM_onehot_wstate_reg[1]_0 ),
        .I3(s_axi_control_BVALID),
        .I4(\FSM_onehot_wstate_reg_n_0_[2] ),
        .O(\FSM_onehot_wstate[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF8F8F8F88888888)) 
    \FSM_onehot_wstate[2]_i_1 
       (.I0(\FSM_onehot_wstate_reg[1]_0 ),
        .I1(s_axi_control_AWVALID),
        .I2(s_axi_control_WVALID),
        .I3(s_axi_control_ARVALID),
        .I4(\FSM_onehot_rstate_reg[1]_0 ),
        .I5(\FSM_onehot_wstate_reg_n_0_[2] ),
        .O(\FSM_onehot_wstate[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2A00FFFF2A002A00)) 
    \FSM_onehot_wstate[3]_i_1 
       (.I0(\FSM_onehot_wstate_reg_n_0_[2] ),
        .I1(\FSM_onehot_rstate_reg[1]_0 ),
        .I2(s_axi_control_ARVALID),
        .I3(s_axi_control_WVALID),
        .I4(s_axi_control_BREADY),
        .I5(s_axi_control_BVALID),
        .O(\FSM_onehot_wstate[3]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRDATA:0100,WRRESP:1000,WRIDLE:0010,iSTATE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wstate_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\FSM_onehot_wstate[1]_i_1_n_0 ),
        .Q(\FSM_onehot_wstate_reg[1]_0 ),
        .R(SR));
  (* FSM_ENCODED_STATES = "WRDATA:0100,WRRESP:1000,WRIDLE:0010,iSTATE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wstate_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\FSM_onehot_wstate[2]_i_1_n_0 ),
        .Q(\FSM_onehot_wstate_reg_n_0_[2] ),
        .R(SR));
  (* FSM_ENCODED_STATES = "WRDATA:0100,WRRESP:1000,WRIDLE:0010,iSTATE:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_wstate_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\FSM_onehot_wstate[3]_i_1_n_0 ),
        .Q(s_axi_control_BVALID),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \ap_CS_fsm[0]_i_1__0 
       (.I0(ap_start),
        .I1(Q[0]),
        .I2(ap_done),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \ap_CS_fsm[1]_i_1__0 
       (.I0(address0),
        .I1(ap_start),
        .I2(Q[0]),
        .I3(\ap_CS_fsm_reg[1] ),
        .I4(Q[11]),
        .I5(\ap_CS_fsm_reg[1]_0 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hEFAA)) 
    auto_restart_status_i_1
       (.I0(int_auto_restart_reg_0),
        .I1(ap_start),
        .I2(Q[0]),
        .I3(auto_restart_status_reg_n_0),
        .O(auto_restart_status_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    auto_restart_status_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(auto_restart_status_i_1_n_0),
        .Q(auto_restart_status_reg_n_0),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_control_s_axi_ram int_an32Coef
       (.D({int_an32Coef_n_0,int_an32Coef_n_1,int_an32Coef_n_2,int_an32Coef_n_3,int_an32Coef_n_4,int_an32Coef_n_5,int_an32Coef_n_6,int_an32Coef_n_7,int_an32Coef_n_8,int_an32Coef_n_9,int_an32Coef_n_10,int_an32Coef_n_11,int_an32Coef_n_12,int_an32Coef_n_13,int_an32Coef_n_14,int_an32Coef_n_15,int_an32Coef_n_16,int_an32Coef_n_17,int_an32Coef_n_18,int_an32Coef_n_19,int_an32Coef_n_20,int_an32Coef_n_21,int_an32Coef_n_22,int_an32Coef_n_23,int_an32Coef_n_24,int_an32Coef_n_25,int_an32Coef_n_26,int_an32Coef_n_27,int_an32Coef_n_28,int_an32Coef_n_29,int_an32Coef_n_30,int_an32Coef_n_31}),
        .Q(p_0_in),
        .\ap_CS_fsm_reg[5] (address0),
        .ap_clk(ap_clk),
        .dout_reg(\FSM_onehot_wstate_reg_n_0_[2] ),
        .dout_reg_0(Q[10:1]),
        .q00(q00),
        .\q1_reg[0]_0 (\FSM_onehot_rstate_reg[1]_0 ),
        .\q1_reg[0]_1 (int_an32Coef_write_reg_n_0),
        .\rdata_reg[0] (\rdata[0]_i_2_n_0 ),
        .\rdata_reg[10] (\rdata[10]_i_2_n_0 ),
        .\rdata_reg[10]_0 (\rdata[10]_i_3_n_0 ),
        .\rdata_reg[11] (\rdata[11]_i_2_n_0 ),
        .\rdata_reg[11]_0 (\rdata[11]_i_3_n_0 ),
        .\rdata_reg[12] (\rdata[12]_i_2_n_0 ),
        .\rdata_reg[12]_0 (\rdata[12]_i_3_n_0 ),
        .\rdata_reg[13] (\rdata[13]_i_2_n_0 ),
        .\rdata_reg[13]_0 (\rdata[13]_i_3_n_0 ),
        .\rdata_reg[14] (\rdata[14]_i_2_n_0 ),
        .\rdata_reg[14]_0 (\rdata[14]_i_3_n_0 ),
        .\rdata_reg[15] (\rdata[15]_i_2_n_0 ),
        .\rdata_reg[15]_0 (\rdata[15]_i_3_n_0 ),
        .\rdata_reg[16] (\rdata[16]_i_2_n_0 ),
        .\rdata_reg[16]_0 (\rdata[16]_i_3_n_0 ),
        .\rdata_reg[17] (\rdata[17]_i_2_n_0 ),
        .\rdata_reg[17]_0 (\rdata[17]_i_3_n_0 ),
        .\rdata_reg[18] (\rdata[18]_i_2_n_0 ),
        .\rdata_reg[18]_0 (\rdata[18]_i_3_n_0 ),
        .\rdata_reg[19] (\rdata[19]_i_2_n_0 ),
        .\rdata_reg[19]_0 (\rdata[19]_i_3_n_0 ),
        .\rdata_reg[1] (\rdata[1]_i_2_n_0 ),
        .\rdata_reg[1]_0 (\rdata[1]_i_3_n_0 ),
        .\rdata_reg[1]_1 (\rdata[1]_i_4_n_0 ),
        .\rdata_reg[1]_2 (\rdata[31]_i_5_n_0 ),
        .\rdata_reg[20] (\rdata[20]_i_2_n_0 ),
        .\rdata_reg[20]_0 (\rdata[20]_i_3_n_0 ),
        .\rdata_reg[21] (\rdata[21]_i_2_n_0 ),
        .\rdata_reg[21]_0 (\rdata[21]_i_3_n_0 ),
        .\rdata_reg[22] (\rdata[22]_i_2_n_0 ),
        .\rdata_reg[22]_0 (\rdata[22]_i_3_n_0 ),
        .\rdata_reg[23] (\rdata[23]_i_2_n_0 ),
        .\rdata_reg[23]_0 (\rdata[23]_i_3_n_0 ),
        .\rdata_reg[24] (\rdata[24]_i_2_n_0 ),
        .\rdata_reg[24]_0 (\rdata[24]_i_3_n_0 ),
        .\rdata_reg[25] (\rdata[25]_i_2_n_0 ),
        .\rdata_reg[25]_0 (\rdata[25]_i_3_n_0 ),
        .\rdata_reg[26] (\rdata[26]_i_2_n_0 ),
        .\rdata_reg[26]_0 (\rdata[26]_i_3_n_0 ),
        .\rdata_reg[27] (\rdata[27]_i_2_n_0 ),
        .\rdata_reg[27]_0 (\rdata[27]_i_3_n_0 ),
        .\rdata_reg[28] (\rdata[28]_i_2_n_0 ),
        .\rdata_reg[28]_0 (\rdata[28]_i_3_n_0 ),
        .\rdata_reg[29] (\rdata[29]_i_2_n_0 ),
        .\rdata_reg[29]_0 (\rdata[29]_i_3_n_0 ),
        .\rdata_reg[2] (\rdata[2]_i_2_n_0 ),
        .\rdata_reg[2]_0 (\rdata[2]_i_3_n_0 ),
        .\rdata_reg[30] (\rdata[30]_i_2_n_0 ),
        .\rdata_reg[30]_0 (\rdata[30]_i_3_n_0 ),
        .\rdata_reg[31] (\rdata[31]_i_3_n_0 ),
        .\rdata_reg[31]_0 (\rdata[31]_i_4_n_0 ),
        .\rdata_reg[3] (\rdata[3]_i_2_n_0 ),
        .\rdata_reg[3]_0 (\rdata[3]_i_3_n_0 ),
        .\rdata_reg[4] (\rdata[4]_i_2_n_0 ),
        .\rdata_reg[4]_0 (\rdata[4]_i_3_n_0 ),
        .\rdata_reg[5] (\rdata[5]_i_2_n_0 ),
        .\rdata_reg[5]_0 (\rdata[5]_i_3_n_0 ),
        .\rdata_reg[6] (\rdata[6]_i_2_n_0 ),
        .\rdata_reg[6]_0 (\rdata[6]_i_3_n_0 ),
        .\rdata_reg[7] (\rdata[7]_i_2_n_0 ),
        .\rdata_reg[7]_0 (\rdata[7]_i_3_n_0 ),
        .\rdata_reg[8] (\rdata[8]_i_2_n_0 ),
        .\rdata_reg[8]_0 (\rdata[8]_i_3_n_0 ),
        .\rdata_reg[9] (\rdata[9]_i_3_n_0 ),
        .\rdata_reg[9]_0 (\rdata[9]_i_4_n_0 ),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_ARVALID_0(int_an32Coef_n_32),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WSTRB(s_axi_control_WSTRB),
        .s_axi_control_WVALID(s_axi_control_WVALID));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h80)) 
    int_an32Coef_read_i_1
       (.I0(s_axi_control_ARADDR[6]),
        .I1(\FSM_onehot_rstate_reg[1]_0 ),
        .I2(s_axi_control_ARVALID),
        .O(int_an32Coef_read0));
  FDRE int_an32Coef_read_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_an32Coef_read0),
        .Q(int_an32Coef_read),
        .R(SR));
  LUT6 #(
    .INIT(64'hFF7F7F7FFF000000)) 
    int_an32Coef_write_i_1
       (.I0(\FSM_onehot_wstate_reg_n_0_[2] ),
        .I1(int_an32Coef_n_32),
        .I2(s_axi_control_WVALID),
        .I3(aw_hs),
        .I4(s_axi_control_AWADDR[6]),
        .I5(int_an32Coef_write_reg_n_0),
        .O(int_an32Coef_write_i_1_n_0));
  FDRE int_an32Coef_write_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_an32Coef_write_i_1_n_0),
        .Q(int_an32Coef_write_reg_n_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h2)) 
    int_ap_idle_i_1
       (.I0(Q[0]),
        .I1(ap_start),
        .O(ap_idle));
  FDRE int_ap_idle_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_idle),
        .Q(p_5_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFF7FFFF0000)) 
    int_ap_ready_i_1
       (.I0(int_task_ap_done_i_3_n_0),
        .I1(\rdata[31]_i_5_n_0 ),
        .I2(s_axi_control_ARADDR[5]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(task_ap_ready),
        .I5(int_ap_ready),
        .O(int_ap_ready_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    int_ap_ready_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_ap_ready_i_1_n_0),
        .Q(int_ap_ready),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hFBF8)) 
    int_ap_start_i_1
       (.I0(int_auto_restart_reg_0),
        .I1(ap_done),
        .I2(int_ap_start5_out),
        .I3(ap_start),
        .O(int_ap_start_i_1_n_0));
  LUT5 #(
    .INIT(32'h00200000)) 
    int_ap_start_i_2
       (.I0(s_axi_control_WDATA[0]),
        .I1(p_0_in[0]),
        .I2(s_axi_control_WSTRB[0]),
        .I3(p_0_in[2]),
        .I4(\int_pn32HPInput[31]_i_3_n_0 ),
        .O(int_ap_start5_out));
  FDRE #(
    .INIT(1'b0)) 
    int_ap_start_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_ap_start_i_1_n_0),
        .Q(ap_start),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    int_auto_restart_i_1
       (.I0(s_axi_control_WDATA[7]),
        .I1(\int_pn32HPInput[31]_i_3_n_0 ),
        .I2(p_0_in[2]),
        .I3(s_axi_control_WSTRB[0]),
        .I4(p_0_in[0]),
        .I5(int_auto_restart_reg_0),
        .O(int_auto_restart_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    int_auto_restart_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_auto_restart_i_1_n_0),
        .Q(int_auto_restart_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFBFFFFF00800000)) 
    int_gie_i_1
       (.I0(s_axi_control_WDATA[0]),
        .I1(\int_pn32HPInput[31]_i_3_n_0 ),
        .I2(p_0_in[0]),
        .I3(p_0_in[2]),
        .I4(s_axi_control_WSTRB[0]),
        .I5(int_gie_reg_n_0),
        .O(int_gie_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    int_gie_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_gie_i_1_n_0),
        .Q(int_gie_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \int_ier[0]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(\int_ier[1]_i_2_n_0 ),
        .I2(p_0_in[2]),
        .I3(s_axi_control_WSTRB[0]),
        .I4(p_0_in[0]),
        .I5(\int_ier_reg_n_0_[0] ),
        .O(\int_ier[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \int_ier[1]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(\int_ier[1]_i_2_n_0 ),
        .I2(p_0_in[2]),
        .I3(s_axi_control_WSTRB[0]),
        .I4(p_0_in[0]),
        .I5(\int_ier_reg_n_0_[1] ),
        .O(\int_ier[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \int_ier[1]_i_2 
       (.I0(p_0_in[1]),
        .I1(\int_ier[1]_i_3_n_0 ),
        .I2(\waddr_reg_n_0_[6] ),
        .I3(\waddr_reg_n_0_[0] ),
        .I4(\waddr_reg_n_0_[1] ),
        .I5(p_0_in[3]),
        .O(\int_ier[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h2A00)) 
    \int_ier[1]_i_3 
       (.I0(s_axi_control_WVALID),
        .I1(s_axi_control_ARVALID),
        .I2(\FSM_onehot_rstate_reg[1]_0 ),
        .I3(\FSM_onehot_wstate_reg_n_0_[2] ),
        .O(\int_ier[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \int_ier_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\int_ier[0]_i_1_n_0 ),
        .Q(\int_ier_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_ier_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\int_ier[1]_i_1_n_0 ),
        .Q(\int_ier_reg_n_0_[1] ),
        .R(SR));
  LUT3 #(
    .INIT(8'hA8)) 
    int_interrupt_i_1
       (.I0(int_gie_reg_n_0),
        .I1(data3[0]),
        .I2(data3[1]),
        .O(int_interrupt0));
  FDRE #(
    .INIT(1'b0)) 
    int_interrupt_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_interrupt0),
        .Q(interrupt),
        .R(SR));
  LUT6 #(
    .INIT(64'h8FFFFFFF88888888)) 
    \int_isr[0]_i_1 
       (.I0(ap_done),
        .I1(\int_ier_reg_n_0_[0] ),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_isr[0]_i_2_n_0 ),
        .I5(data3[0]),
        .O(\int_isr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \int_isr[0]_i_2 
       (.I0(int_an32Coef_n_32),
        .I1(s_axi_control_ARADDR[0]),
        .I2(s_axi_control_ARADDR[6]),
        .I3(s_axi_control_ARADDR[1]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[4]),
        .O(\int_isr[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF7F7F7FFF000000)) 
    \int_isr[1]_i_1 
       (.I0(s_axi_control_ARADDR[2]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(\int_isr[0]_i_2_n_0 ),
        .I3(ap_done),
        .I4(\int_ier_reg_n_0_[1] ),
        .I5(data3[1]),
        .O(\int_isr[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \int_isr_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\int_isr[0]_i_1_n_0 ),
        .Q(data3[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_isr_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\int_isr[1]_i_1_n_0 ),
        .Q(data3[1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[0]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(pn32HPInput[0]),
        .O(int_pn32HPInput_reg04_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[10]_i_1 
       (.I0(s_axi_control_WDATA[10]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [8]),
        .O(int_pn32HPInput_reg04_out[10]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[11]_i_1 
       (.I0(s_axi_control_WDATA[11]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [9]),
        .O(int_pn32HPInput_reg04_out[11]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[12]_i_1 
       (.I0(s_axi_control_WDATA[12]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [10]),
        .O(int_pn32HPInput_reg04_out[12]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[13]_i_1 
       (.I0(s_axi_control_WDATA[13]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [11]),
        .O(int_pn32HPInput_reg04_out[13]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[14]_i_1 
       (.I0(s_axi_control_WDATA[14]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [12]),
        .O(int_pn32HPInput_reg04_out[14]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[15]_i_1 
       (.I0(s_axi_control_WDATA[15]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [13]),
        .O(int_pn32HPInput_reg04_out[15]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[16]_i_1 
       (.I0(s_axi_control_WDATA[16]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [14]),
        .O(int_pn32HPInput_reg04_out[16]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[17]_i_1 
       (.I0(s_axi_control_WDATA[17]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [15]),
        .O(int_pn32HPInput_reg04_out[17]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[18]_i_1 
       (.I0(s_axi_control_WDATA[18]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [16]),
        .O(int_pn32HPInput_reg04_out[18]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[19]_i_1 
       (.I0(s_axi_control_WDATA[19]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [17]),
        .O(int_pn32HPInput_reg04_out[19]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[1]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(pn32HPInput[1]),
        .O(int_pn32HPInput_reg04_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[20]_i_1 
       (.I0(s_axi_control_WDATA[20]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [18]),
        .O(int_pn32HPInput_reg04_out[20]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[21]_i_1 
       (.I0(s_axi_control_WDATA[21]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [19]),
        .O(int_pn32HPInput_reg04_out[21]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[22]_i_1 
       (.I0(s_axi_control_WDATA[22]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [20]),
        .O(int_pn32HPInput_reg04_out[22]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[23]_i_1 
       (.I0(s_axi_control_WDATA[23]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [21]),
        .O(int_pn32HPInput_reg04_out[23]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[24]_i_1 
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [22]),
        .O(int_pn32HPInput_reg04_out[24]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[25]_i_1 
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [23]),
        .O(int_pn32HPInput_reg04_out[25]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[26]_i_1 
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [24]),
        .O(int_pn32HPInput_reg04_out[26]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[27]_i_1 
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [25]),
        .O(int_pn32HPInput_reg04_out[27]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[28]_i_1 
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [26]),
        .O(int_pn32HPInput_reg04_out[28]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[29]_i_1 
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [27]),
        .O(int_pn32HPInput_reg04_out[29]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[2]_i_1 
       (.I0(s_axi_control_WDATA[2]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [0]),
        .O(int_pn32HPInput_reg04_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[30]_i_1 
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [28]),
        .O(int_pn32HPInput_reg04_out[30]));
  LUT3 #(
    .INIT(8'h08)) 
    \int_pn32HPInput[31]_i_1 
       (.I0(\int_pn32HPInput[31]_i_3_n_0 ),
        .I1(p_0_in[2]),
        .I2(p_0_in[0]),
        .O(\int_pn32HPInput[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[31]_i_2 
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [29]),
        .O(int_pn32HPInput_reg04_out[31]));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \int_pn32HPInput[31]_i_3 
       (.I0(p_0_in[1]),
        .I1(\int_ier[1]_i_3_n_0 ),
        .I2(\waddr_reg_n_0_[6] ),
        .I3(\waddr_reg_n_0_[0] ),
        .I4(\waddr_reg_n_0_[1] ),
        .I5(p_0_in[3]),
        .O(\int_pn32HPInput[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[32]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [30]),
        .O(int_pn32HPInput_reg0[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[33]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [31]),
        .O(int_pn32HPInput_reg0[1]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[34]_i_1 
       (.I0(s_axi_control_WDATA[2]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [32]),
        .O(int_pn32HPInput_reg0[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[35]_i_1 
       (.I0(s_axi_control_WDATA[3]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [33]),
        .O(int_pn32HPInput_reg0[3]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[36]_i_1 
       (.I0(s_axi_control_WDATA[4]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [34]),
        .O(int_pn32HPInput_reg0[4]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[37]_i_1 
       (.I0(s_axi_control_WDATA[5]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [35]),
        .O(int_pn32HPInput_reg0[5]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[38]_i_1 
       (.I0(s_axi_control_WDATA[6]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [36]),
        .O(int_pn32HPInput_reg0[6]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[39]_i_1 
       (.I0(s_axi_control_WDATA[7]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [37]),
        .O(int_pn32HPInput_reg0[7]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[3]_i_1 
       (.I0(s_axi_control_WDATA[3]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [1]),
        .O(int_pn32HPInput_reg04_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[40]_i_1 
       (.I0(s_axi_control_WDATA[8]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [38]),
        .O(int_pn32HPInput_reg0[8]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[41]_i_1 
       (.I0(s_axi_control_WDATA[9]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [39]),
        .O(int_pn32HPInput_reg0[9]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[42]_i_1 
       (.I0(s_axi_control_WDATA[10]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [40]),
        .O(int_pn32HPInput_reg0[10]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[43]_i_1 
       (.I0(s_axi_control_WDATA[11]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [41]),
        .O(int_pn32HPInput_reg0[11]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[44]_i_1 
       (.I0(s_axi_control_WDATA[12]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [42]),
        .O(int_pn32HPInput_reg0[12]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[45]_i_1 
       (.I0(s_axi_control_WDATA[13]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [43]),
        .O(int_pn32HPInput_reg0[13]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[46]_i_1 
       (.I0(s_axi_control_WDATA[14]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [44]),
        .O(int_pn32HPInput_reg0[14]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[47]_i_1 
       (.I0(s_axi_control_WDATA[15]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [45]),
        .O(int_pn32HPInput_reg0[15]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[48]_i_1 
       (.I0(s_axi_control_WDATA[16]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [46]),
        .O(int_pn32HPInput_reg0[16]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[49]_i_1 
       (.I0(s_axi_control_WDATA[17]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [47]),
        .O(int_pn32HPInput_reg0[17]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[4]_i_1 
       (.I0(s_axi_control_WDATA[4]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [2]),
        .O(int_pn32HPInput_reg04_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[50]_i_1 
       (.I0(s_axi_control_WDATA[18]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [48]),
        .O(int_pn32HPInput_reg0[18]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[51]_i_1 
       (.I0(s_axi_control_WDATA[19]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [49]),
        .O(int_pn32HPInput_reg0[19]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[52]_i_1 
       (.I0(s_axi_control_WDATA[20]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [50]),
        .O(int_pn32HPInput_reg0[20]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[53]_i_1 
       (.I0(s_axi_control_WDATA[21]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [51]),
        .O(int_pn32HPInput_reg0[21]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[54]_i_1 
       (.I0(s_axi_control_WDATA[22]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [52]),
        .O(int_pn32HPInput_reg0[22]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[55]_i_1 
       (.I0(s_axi_control_WDATA[23]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPInput_reg[63]_0 [53]),
        .O(int_pn32HPInput_reg0[23]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[56]_i_1 
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [54]),
        .O(int_pn32HPInput_reg0[24]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[57]_i_1 
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [55]),
        .O(int_pn32HPInput_reg0[25]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[58]_i_1 
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [56]),
        .O(int_pn32HPInput_reg0[26]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[59]_i_1 
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [57]),
        .O(int_pn32HPInput_reg0[27]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[5]_i_1 
       (.I0(s_axi_control_WDATA[5]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [3]),
        .O(int_pn32HPInput_reg04_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[60]_i_1 
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [58]),
        .O(int_pn32HPInput_reg0[28]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[61]_i_1 
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [59]),
        .O(int_pn32HPInput_reg0[29]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[62]_i_1 
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [60]),
        .O(int_pn32HPInput_reg0[30]));
  LUT3 #(
    .INIT(8'h80)) 
    \int_pn32HPInput[63]_i_1 
       (.I0(\int_pn32HPInput[31]_i_3_n_0 ),
        .I1(p_0_in[2]),
        .I2(p_0_in[0]),
        .O(\int_pn32HPInput[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[63]_i_2 
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPInput_reg[63]_0 [61]),
        .O(int_pn32HPInput_reg0[31]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[6]_i_1 
       (.I0(s_axi_control_WDATA[6]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [4]),
        .O(int_pn32HPInput_reg04_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[7]_i_1 
       (.I0(s_axi_control_WDATA[7]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPInput_reg[63]_0 [5]),
        .O(int_pn32HPInput_reg04_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[8]_i_1 
       (.I0(s_axi_control_WDATA[8]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [6]),
        .O(int_pn32HPInput_reg04_out[8]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPInput[9]_i_1 
       (.I0(s_axi_control_WDATA[9]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPInput_reg[63]_0 [7]),
        .O(int_pn32HPInput_reg04_out[9]));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[0] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[0]),
        .Q(pn32HPInput[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[10] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[10]),
        .Q(\int_pn32HPInput_reg[63]_0 [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[11] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[11]),
        .Q(\int_pn32HPInput_reg[63]_0 [9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[12] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[12]),
        .Q(\int_pn32HPInput_reg[63]_0 [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[13] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[13]),
        .Q(\int_pn32HPInput_reg[63]_0 [11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[14] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[14]),
        .Q(\int_pn32HPInput_reg[63]_0 [12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[15] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[15]),
        .Q(\int_pn32HPInput_reg[63]_0 [13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[16] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[16]),
        .Q(\int_pn32HPInput_reg[63]_0 [14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[17] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[17]),
        .Q(\int_pn32HPInput_reg[63]_0 [15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[18] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[18]),
        .Q(\int_pn32HPInput_reg[63]_0 [16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[19] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[19]),
        .Q(\int_pn32HPInput_reg[63]_0 [17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[1] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[1]),
        .Q(pn32HPInput[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[20] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[20]),
        .Q(\int_pn32HPInput_reg[63]_0 [18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[21] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[21]),
        .Q(\int_pn32HPInput_reg[63]_0 [19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[22] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[22]),
        .Q(\int_pn32HPInput_reg[63]_0 [20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[23] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[23]),
        .Q(\int_pn32HPInput_reg[63]_0 [21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[24] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[24]),
        .Q(\int_pn32HPInput_reg[63]_0 [22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[25] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[25]),
        .Q(\int_pn32HPInput_reg[63]_0 [23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[26] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[26]),
        .Q(\int_pn32HPInput_reg[63]_0 [24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[27] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[27]),
        .Q(\int_pn32HPInput_reg[63]_0 [25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[28] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[28]),
        .Q(\int_pn32HPInput_reg[63]_0 [26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[29] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[29]),
        .Q(\int_pn32HPInput_reg[63]_0 [27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[2] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[2]),
        .Q(\int_pn32HPInput_reg[63]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[30] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[30]),
        .Q(\int_pn32HPInput_reg[63]_0 [28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[31] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[31]),
        .Q(\int_pn32HPInput_reg[63]_0 [29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[32] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[0]),
        .Q(\int_pn32HPInput_reg[63]_0 [30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[33] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[1]),
        .Q(\int_pn32HPInput_reg[63]_0 [31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[34] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[2]),
        .Q(\int_pn32HPInput_reg[63]_0 [32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[35] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[3]),
        .Q(\int_pn32HPInput_reg[63]_0 [33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[36] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[4]),
        .Q(\int_pn32HPInput_reg[63]_0 [34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[37] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[5]),
        .Q(\int_pn32HPInput_reg[63]_0 [35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[38] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[6]),
        .Q(\int_pn32HPInput_reg[63]_0 [36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[39] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[7]),
        .Q(\int_pn32HPInput_reg[63]_0 [37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[3] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[3]),
        .Q(\int_pn32HPInput_reg[63]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[40] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[8]),
        .Q(\int_pn32HPInput_reg[63]_0 [38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[41] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[9]),
        .Q(\int_pn32HPInput_reg[63]_0 [39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[42] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[10]),
        .Q(\int_pn32HPInput_reg[63]_0 [40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[43] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[11]),
        .Q(\int_pn32HPInput_reg[63]_0 [41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[44] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[12]),
        .Q(\int_pn32HPInput_reg[63]_0 [42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[45] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[13]),
        .Q(\int_pn32HPInput_reg[63]_0 [43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[46] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[14]),
        .Q(\int_pn32HPInput_reg[63]_0 [44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[47] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[15]),
        .Q(\int_pn32HPInput_reg[63]_0 [45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[48] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[16]),
        .Q(\int_pn32HPInput_reg[63]_0 [46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[49] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[17]),
        .Q(\int_pn32HPInput_reg[63]_0 [47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[4] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[4]),
        .Q(\int_pn32HPInput_reg[63]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[50] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[18]),
        .Q(\int_pn32HPInput_reg[63]_0 [48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[51] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[19]),
        .Q(\int_pn32HPInput_reg[63]_0 [49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[52] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[20]),
        .Q(\int_pn32HPInput_reg[63]_0 [50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[53] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[21]),
        .Q(\int_pn32HPInput_reg[63]_0 [51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[54] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[22]),
        .Q(\int_pn32HPInput_reg[63]_0 [52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[55] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[23]),
        .Q(\int_pn32HPInput_reg[63]_0 [53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[56] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[24]),
        .Q(\int_pn32HPInput_reg[63]_0 [54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[57] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[25]),
        .Q(\int_pn32HPInput_reg[63]_0 [55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[58] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[26]),
        .Q(\int_pn32HPInput_reg[63]_0 [56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[59] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[27]),
        .Q(\int_pn32HPInput_reg[63]_0 [57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[5] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[5]),
        .Q(\int_pn32HPInput_reg[63]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[60] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[28]),
        .Q(\int_pn32HPInput_reg[63]_0 [58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[61] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[29]),
        .Q(\int_pn32HPInput_reg[63]_0 [59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[62] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[30]),
        .Q(\int_pn32HPInput_reg[63]_0 [60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[63] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[63]_i_1_n_0 ),
        .D(int_pn32HPInput_reg0[31]),
        .Q(\int_pn32HPInput_reg[63]_0 [61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[6] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[6]),
        .Q(\int_pn32HPInput_reg[63]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[7] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[7]),
        .Q(\int_pn32HPInput_reg[63]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[8] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[8]),
        .Q(\int_pn32HPInput_reg[63]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPInput_reg[9] 
       (.C(ap_clk),
        .CE(\int_pn32HPInput[31]_i_1_n_0 ),
        .D(int_pn32HPInput_reg04_out[9]),
        .Q(\int_pn32HPInput_reg[63]_0 [7]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[0]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(pn32HPOutput[0]),
        .O(int_pn32HPOutput_reg01_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[10]_i_1 
       (.I0(s_axi_control_WDATA[10]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [8]),
        .O(int_pn32HPOutput_reg01_out[10]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[11]_i_1 
       (.I0(s_axi_control_WDATA[11]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [9]),
        .O(int_pn32HPOutput_reg01_out[11]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[12]_i_1 
       (.I0(s_axi_control_WDATA[12]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [10]),
        .O(int_pn32HPOutput_reg01_out[12]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[13]_i_1 
       (.I0(s_axi_control_WDATA[13]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [11]),
        .O(int_pn32HPOutput_reg01_out[13]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[14]_i_1 
       (.I0(s_axi_control_WDATA[14]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [12]),
        .O(int_pn32HPOutput_reg01_out[14]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[15]_i_1 
       (.I0(s_axi_control_WDATA[15]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [13]),
        .O(int_pn32HPOutput_reg01_out[15]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[16]_i_1 
       (.I0(s_axi_control_WDATA[16]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [14]),
        .O(int_pn32HPOutput_reg01_out[16]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[17]_i_1 
       (.I0(s_axi_control_WDATA[17]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [15]),
        .O(int_pn32HPOutput_reg01_out[17]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[18]_i_1 
       (.I0(s_axi_control_WDATA[18]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [16]),
        .O(int_pn32HPOutput_reg01_out[18]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[19]_i_1 
       (.I0(s_axi_control_WDATA[19]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [17]),
        .O(int_pn32HPOutput_reg01_out[19]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[1]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(pn32HPOutput[1]),
        .O(int_pn32HPOutput_reg01_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[20]_i_1 
       (.I0(s_axi_control_WDATA[20]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [18]),
        .O(int_pn32HPOutput_reg01_out[20]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[21]_i_1 
       (.I0(s_axi_control_WDATA[21]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [19]),
        .O(int_pn32HPOutput_reg01_out[21]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[22]_i_1 
       (.I0(s_axi_control_WDATA[22]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [20]),
        .O(int_pn32HPOutput_reg01_out[22]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[23]_i_1 
       (.I0(s_axi_control_WDATA[23]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [21]),
        .O(int_pn32HPOutput_reg01_out[23]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[24]_i_1 
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [22]),
        .O(int_pn32HPOutput_reg01_out[24]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[25]_i_1 
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [23]),
        .O(int_pn32HPOutput_reg01_out[25]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[26]_i_1 
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [24]),
        .O(int_pn32HPOutput_reg01_out[26]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[27]_i_1 
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [25]),
        .O(int_pn32HPOutput_reg01_out[27]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[28]_i_1 
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [26]),
        .O(int_pn32HPOutput_reg01_out[28]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[29]_i_1 
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [27]),
        .O(int_pn32HPOutput_reg01_out[29]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[2]_i_1 
       (.I0(s_axi_control_WDATA[2]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [0]),
        .O(int_pn32HPOutput_reg01_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[30]_i_1 
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [28]),
        .O(int_pn32HPOutput_reg01_out[30]));
  LUT5 #(
    .INIT(32'h10000000)) 
    \int_pn32HPOutput[31]_i_1 
       (.I0(p_0_in[3]),
        .I1(\int_regXferLeng[31]_i_3_n_0 ),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[0]),
        .O(\int_pn32HPOutput[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[31]_i_2 
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [29]),
        .O(int_pn32HPOutput_reg01_out[31]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[32]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [30]),
        .O(int_pn32HPOutput_reg0[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[33]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [31]),
        .O(int_pn32HPOutput_reg0[1]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[34]_i_1 
       (.I0(s_axi_control_WDATA[2]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [32]),
        .O(int_pn32HPOutput_reg0[2]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[35]_i_1 
       (.I0(s_axi_control_WDATA[3]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [33]),
        .O(int_pn32HPOutput_reg0[3]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[36]_i_1 
       (.I0(s_axi_control_WDATA[4]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [34]),
        .O(int_pn32HPOutput_reg0[4]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[37]_i_1 
       (.I0(s_axi_control_WDATA[5]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [35]),
        .O(int_pn32HPOutput_reg0[5]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[38]_i_1 
       (.I0(s_axi_control_WDATA[6]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [36]),
        .O(int_pn32HPOutput_reg0[6]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[39]_i_1 
       (.I0(s_axi_control_WDATA[7]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [37]),
        .O(int_pn32HPOutput_reg0[7]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[3]_i_1 
       (.I0(s_axi_control_WDATA[3]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [1]),
        .O(int_pn32HPOutput_reg01_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[40]_i_1 
       (.I0(s_axi_control_WDATA[8]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [38]),
        .O(int_pn32HPOutput_reg0[8]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[41]_i_1 
       (.I0(s_axi_control_WDATA[9]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [39]),
        .O(int_pn32HPOutput_reg0[9]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[42]_i_1 
       (.I0(s_axi_control_WDATA[10]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [40]),
        .O(int_pn32HPOutput_reg0[10]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[43]_i_1 
       (.I0(s_axi_control_WDATA[11]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [41]),
        .O(int_pn32HPOutput_reg0[11]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[44]_i_1 
       (.I0(s_axi_control_WDATA[12]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [42]),
        .O(int_pn32HPOutput_reg0[12]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[45]_i_1 
       (.I0(s_axi_control_WDATA[13]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [43]),
        .O(int_pn32HPOutput_reg0[13]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[46]_i_1 
       (.I0(s_axi_control_WDATA[14]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [44]),
        .O(int_pn32HPOutput_reg0[14]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[47]_i_1 
       (.I0(s_axi_control_WDATA[15]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [45]),
        .O(int_pn32HPOutput_reg0[15]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[48]_i_1 
       (.I0(s_axi_control_WDATA[16]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [46]),
        .O(int_pn32HPOutput_reg0[16]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[49]_i_1 
       (.I0(s_axi_control_WDATA[17]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [47]),
        .O(int_pn32HPOutput_reg0[17]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[4]_i_1 
       (.I0(s_axi_control_WDATA[4]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [2]),
        .O(int_pn32HPOutput_reg01_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[50]_i_1 
       (.I0(s_axi_control_WDATA[18]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [48]),
        .O(int_pn32HPOutput_reg0[18]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[51]_i_1 
       (.I0(s_axi_control_WDATA[19]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [49]),
        .O(int_pn32HPOutput_reg0[19]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[52]_i_1 
       (.I0(s_axi_control_WDATA[20]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [50]),
        .O(int_pn32HPOutput_reg0[20]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[53]_i_1 
       (.I0(s_axi_control_WDATA[21]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [51]),
        .O(int_pn32HPOutput_reg0[21]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[54]_i_1 
       (.I0(s_axi_control_WDATA[22]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [52]),
        .O(int_pn32HPOutput_reg0[22]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[55]_i_1 
       (.I0(s_axi_control_WDATA[23]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(\int_pn32HPOutput_reg[63]_0 [53]),
        .O(int_pn32HPOutput_reg0[23]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[56]_i_1 
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [54]),
        .O(int_pn32HPOutput_reg0[24]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[57]_i_1 
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [55]),
        .O(int_pn32HPOutput_reg0[25]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[58]_i_1 
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [56]),
        .O(int_pn32HPOutput_reg0[26]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[59]_i_1 
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [57]),
        .O(int_pn32HPOutput_reg0[27]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[5]_i_1 
       (.I0(s_axi_control_WDATA[5]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [3]),
        .O(int_pn32HPOutput_reg01_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[60]_i_1 
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [58]),
        .O(int_pn32HPOutput_reg0[28]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[61]_i_1 
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [59]),
        .O(int_pn32HPOutput_reg0[29]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[62]_i_1 
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [60]),
        .O(int_pn32HPOutput_reg0[30]));
  LUT5 #(
    .INIT(32'h00000004)) 
    \int_pn32HPOutput[63]_i_1 
       (.I0(p_0_in[1]),
        .I1(p_0_in[3]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\int_regXferLeng[31]_i_3_n_0 ),
        .O(\int_pn32HPOutput[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[63]_i_2 
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [61]),
        .O(int_pn32HPOutput_reg0[31]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[6]_i_1 
       (.I0(s_axi_control_WDATA[6]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [4]),
        .O(int_pn32HPOutput_reg01_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[7]_i_1 
       (.I0(s_axi_control_WDATA[7]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(\int_pn32HPOutput_reg[63]_0 [5]),
        .O(int_pn32HPOutput_reg01_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[8]_i_1 
       (.I0(s_axi_control_WDATA[8]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [6]),
        .O(int_pn32HPOutput_reg01_out[8]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_pn32HPOutput[9]_i_1 
       (.I0(s_axi_control_WDATA[9]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(\int_pn32HPOutput_reg[63]_0 [7]),
        .O(int_pn32HPOutput_reg01_out[9]));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[0] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[0]),
        .Q(pn32HPOutput[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[10] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[10]),
        .Q(\int_pn32HPOutput_reg[63]_0 [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[11] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[11]),
        .Q(\int_pn32HPOutput_reg[63]_0 [9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[12] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[12]),
        .Q(\int_pn32HPOutput_reg[63]_0 [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[13] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[13]),
        .Q(\int_pn32HPOutput_reg[63]_0 [11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[14] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[14]),
        .Q(\int_pn32HPOutput_reg[63]_0 [12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[15] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[15]),
        .Q(\int_pn32HPOutput_reg[63]_0 [13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[16] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[16]),
        .Q(\int_pn32HPOutput_reg[63]_0 [14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[17] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[17]),
        .Q(\int_pn32HPOutput_reg[63]_0 [15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[18] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[18]),
        .Q(\int_pn32HPOutput_reg[63]_0 [16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[19] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[19]),
        .Q(\int_pn32HPOutput_reg[63]_0 [17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[1] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[1]),
        .Q(pn32HPOutput[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[20] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[20]),
        .Q(\int_pn32HPOutput_reg[63]_0 [18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[21] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[21]),
        .Q(\int_pn32HPOutput_reg[63]_0 [19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[22] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[22]),
        .Q(\int_pn32HPOutput_reg[63]_0 [20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[23] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[23]),
        .Q(\int_pn32HPOutput_reg[63]_0 [21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[24] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[24]),
        .Q(\int_pn32HPOutput_reg[63]_0 [22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[25] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[25]),
        .Q(\int_pn32HPOutput_reg[63]_0 [23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[26] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[26]),
        .Q(\int_pn32HPOutput_reg[63]_0 [24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[27] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[27]),
        .Q(\int_pn32HPOutput_reg[63]_0 [25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[28] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[28]),
        .Q(\int_pn32HPOutput_reg[63]_0 [26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[29] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[29]),
        .Q(\int_pn32HPOutput_reg[63]_0 [27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[2] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[2]),
        .Q(\int_pn32HPOutput_reg[63]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[30] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[30]),
        .Q(\int_pn32HPOutput_reg[63]_0 [28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[31] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[31]),
        .Q(\int_pn32HPOutput_reg[63]_0 [29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[32] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[0]),
        .Q(\int_pn32HPOutput_reg[63]_0 [30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[33] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[1]),
        .Q(\int_pn32HPOutput_reg[63]_0 [31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[34] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[2]),
        .Q(\int_pn32HPOutput_reg[63]_0 [32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[35] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[3]),
        .Q(\int_pn32HPOutput_reg[63]_0 [33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[36] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[4]),
        .Q(\int_pn32HPOutput_reg[63]_0 [34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[37] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[5]),
        .Q(\int_pn32HPOutput_reg[63]_0 [35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[38] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[6]),
        .Q(\int_pn32HPOutput_reg[63]_0 [36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[39] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[7]),
        .Q(\int_pn32HPOutput_reg[63]_0 [37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[3] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[3]),
        .Q(\int_pn32HPOutput_reg[63]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[40] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[8]),
        .Q(\int_pn32HPOutput_reg[63]_0 [38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[41] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[9]),
        .Q(\int_pn32HPOutput_reg[63]_0 [39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[42] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[10]),
        .Q(\int_pn32HPOutput_reg[63]_0 [40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[43] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[11]),
        .Q(\int_pn32HPOutput_reg[63]_0 [41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[44] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[12]),
        .Q(\int_pn32HPOutput_reg[63]_0 [42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[45] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[13]),
        .Q(\int_pn32HPOutput_reg[63]_0 [43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[46] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[14]),
        .Q(\int_pn32HPOutput_reg[63]_0 [44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[47] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[15]),
        .Q(\int_pn32HPOutput_reg[63]_0 [45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[48] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[16]),
        .Q(\int_pn32HPOutput_reg[63]_0 [46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[49] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[17]),
        .Q(\int_pn32HPOutput_reg[63]_0 [47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[4] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[4]),
        .Q(\int_pn32HPOutput_reg[63]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[50] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[18]),
        .Q(\int_pn32HPOutput_reg[63]_0 [48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[51] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[19]),
        .Q(\int_pn32HPOutput_reg[63]_0 [49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[52] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[20]),
        .Q(\int_pn32HPOutput_reg[63]_0 [50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[53] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[21]),
        .Q(\int_pn32HPOutput_reg[63]_0 [51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[54] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[22]),
        .Q(\int_pn32HPOutput_reg[63]_0 [52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[55] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[23]),
        .Q(\int_pn32HPOutput_reg[63]_0 [53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[56] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[24]),
        .Q(\int_pn32HPOutput_reg[63]_0 [54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[57] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[25]),
        .Q(\int_pn32HPOutput_reg[63]_0 [55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[58] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[26]),
        .Q(\int_pn32HPOutput_reg[63]_0 [56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[59] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[27]),
        .Q(\int_pn32HPOutput_reg[63]_0 [57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[5] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[5]),
        .Q(\int_pn32HPOutput_reg[63]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[60] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[28]),
        .Q(\int_pn32HPOutput_reg[63]_0 [58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[61] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[29]),
        .Q(\int_pn32HPOutput_reg[63]_0 [59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[62] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[30]),
        .Q(\int_pn32HPOutput_reg[63]_0 [60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[63] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[63]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg0[31]),
        .Q(\int_pn32HPOutput_reg[63]_0 [61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[6] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[6]),
        .Q(\int_pn32HPOutput_reg[63]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[7] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[7]),
        .Q(\int_pn32HPOutput_reg[63]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[8] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[8]),
        .Q(\int_pn32HPOutput_reg[63]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_pn32HPOutput_reg[9] 
       (.C(ap_clk),
        .CE(\int_pn32HPOutput[31]_i_1_n_0 ),
        .D(int_pn32HPOutput_reg01_out[9]),
        .Q(\int_pn32HPOutput_reg[63]_0 [7]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[0]_i_1 
       (.I0(s_axi_control_WDATA[0]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[0]),
        .O(int_regXferLeng0[0]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[10]_i_1 
       (.I0(s_axi_control_WDATA[10]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[10]),
        .O(int_regXferLeng0[10]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[11]_i_1 
       (.I0(s_axi_control_WDATA[11]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[11]),
        .O(int_regXferLeng0[11]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[12]_i_1 
       (.I0(s_axi_control_WDATA[12]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[12]),
        .O(int_regXferLeng0[12]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[13]_i_1 
       (.I0(s_axi_control_WDATA[13]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[13]),
        .O(int_regXferLeng0[13]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[14]_i_1 
       (.I0(s_axi_control_WDATA[14]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[14]),
        .O(int_regXferLeng0[14]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[15]_i_1 
       (.I0(s_axi_control_WDATA[15]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[15]),
        .O(int_regXferLeng0[15]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[16]_i_1 
       (.I0(s_axi_control_WDATA[16]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[16]),
        .O(int_regXferLeng0[16]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[17]_i_1 
       (.I0(s_axi_control_WDATA[17]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[17]),
        .O(int_regXferLeng0[17]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[18]_i_1 
       (.I0(s_axi_control_WDATA[18]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[18]),
        .O(int_regXferLeng0[18]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[19]_i_1 
       (.I0(s_axi_control_WDATA[19]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[19]),
        .O(int_regXferLeng0[19]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[1]_i_1 
       (.I0(s_axi_control_WDATA[1]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[1]),
        .O(int_regXferLeng0[1]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[20]_i_1 
       (.I0(s_axi_control_WDATA[20]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[20]),
        .O(int_regXferLeng0[20]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[21]_i_1 
       (.I0(s_axi_control_WDATA[21]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[21]),
        .O(int_regXferLeng0[21]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[22]_i_1 
       (.I0(s_axi_control_WDATA[22]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[22]),
        .O(int_regXferLeng0[22]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[23]_i_1 
       (.I0(s_axi_control_WDATA[23]),
        .I1(s_axi_control_WSTRB[2]),
        .I2(zext_ln16_fu_285_p1[23]),
        .O(int_regXferLeng0[23]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[24]_i_1 
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[24]),
        .O(int_regXferLeng0[24]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[25]_i_1 
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[25]),
        .O(int_regXferLeng0[25]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[26]_i_1 
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[26]),
        .O(int_regXferLeng0[26]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[27]_i_1 
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[27]),
        .O(int_regXferLeng0[27]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[28]_i_1 
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[28]),
        .O(int_regXferLeng0[28]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[29]_i_1 
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[29]),
        .O(int_regXferLeng0[29]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[2]_i_1 
       (.I0(s_axi_control_WDATA[2]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[2]),
        .O(int_regXferLeng0[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[30]_i_1 
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[30]),
        .O(int_regXferLeng0[30]));
  LUT5 #(
    .INIT(32'h00000008)) 
    \int_regXferLeng[31]_i_1 
       (.I0(p_0_in[1]),
        .I1(p_0_in[3]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\int_regXferLeng[31]_i_3_n_0 ),
        .O(\int_regXferLeng[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[31]_i_2 
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_WSTRB[3]),
        .I2(zext_ln16_fu_285_p1[31]),
        .O(int_regXferLeng0[31]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    \int_regXferLeng[31]_i_3 
       (.I0(\FSM_onehot_wstate_reg_n_0_[2] ),
        .I1(int_an32Coef_n_32),
        .I2(s_axi_control_WVALID),
        .I3(\waddr_reg_n_0_[6] ),
        .I4(\waddr_reg_n_0_[0] ),
        .I5(\waddr_reg_n_0_[1] ),
        .O(\int_regXferLeng[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[3]_i_1 
       (.I0(s_axi_control_WDATA[3]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[3]),
        .O(int_regXferLeng0[3]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[4]_i_1 
       (.I0(s_axi_control_WDATA[4]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[4]),
        .O(int_regXferLeng0[4]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[5]_i_1 
       (.I0(s_axi_control_WDATA[5]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[5]),
        .O(int_regXferLeng0[5]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[6]_i_1 
       (.I0(s_axi_control_WDATA[6]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[6]),
        .O(int_regXferLeng0[6]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[7]_i_1 
       (.I0(s_axi_control_WDATA[7]),
        .I1(s_axi_control_WSTRB[0]),
        .I2(zext_ln16_fu_285_p1[7]),
        .O(int_regXferLeng0[7]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[8]_i_1 
       (.I0(s_axi_control_WDATA[8]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[8]),
        .O(int_regXferLeng0[8]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \int_regXferLeng[9]_i_1 
       (.I0(s_axi_control_WDATA[9]),
        .I1(s_axi_control_WSTRB[1]),
        .I2(zext_ln16_fu_285_p1[9]),
        .O(int_regXferLeng0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[0] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[0]),
        .Q(zext_ln16_fu_285_p1[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[10] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[10]),
        .Q(zext_ln16_fu_285_p1[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[11] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[11]),
        .Q(zext_ln16_fu_285_p1[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[12] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[12]),
        .Q(zext_ln16_fu_285_p1[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[13] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[13]),
        .Q(zext_ln16_fu_285_p1[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[14] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[14]),
        .Q(zext_ln16_fu_285_p1[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[15] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[15]),
        .Q(zext_ln16_fu_285_p1[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[16] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[16]),
        .Q(zext_ln16_fu_285_p1[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[17] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[17]),
        .Q(zext_ln16_fu_285_p1[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[18] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[18]),
        .Q(zext_ln16_fu_285_p1[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[19] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[19]),
        .Q(zext_ln16_fu_285_p1[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[1] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[1]),
        .Q(zext_ln16_fu_285_p1[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[20] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[20]),
        .Q(zext_ln16_fu_285_p1[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[21] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[21]),
        .Q(zext_ln16_fu_285_p1[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[22] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[22]),
        .Q(zext_ln16_fu_285_p1[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[23] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[23]),
        .Q(zext_ln16_fu_285_p1[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[24] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[24]),
        .Q(zext_ln16_fu_285_p1[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[25] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[25]),
        .Q(zext_ln16_fu_285_p1[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[26] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[26]),
        .Q(zext_ln16_fu_285_p1[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[27] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[27]),
        .Q(zext_ln16_fu_285_p1[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[28] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[28]),
        .Q(zext_ln16_fu_285_p1[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[29] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[29]),
        .Q(zext_ln16_fu_285_p1[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[2] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[2]),
        .Q(zext_ln16_fu_285_p1[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[30] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[30]),
        .Q(zext_ln16_fu_285_p1[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[31] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[31]),
        .Q(zext_ln16_fu_285_p1[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[3] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[3]),
        .Q(zext_ln16_fu_285_p1[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[4] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[4]),
        .Q(zext_ln16_fu_285_p1[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[5] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[5]),
        .Q(zext_ln16_fu_285_p1[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[6] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[6]),
        .Q(zext_ln16_fu_285_p1[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[7] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[7]),
        .Q(zext_ln16_fu_285_p1[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[8] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[8]),
        .Q(zext_ln16_fu_285_p1[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \int_regXferLeng_reg[9] 
       (.C(ap_clk),
        .CE(\int_regXferLeng[31]_i_1_n_0 ),
        .D(int_regXferLeng0[9]),
        .Q(zext_ln16_fu_285_p1[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFBFAAAAAAAA)) 
    int_task_ap_done_i_1
       (.I0(task_ap_done),
        .I1(int_task_ap_done_i_3_n_0),
        .I2(\rdata[31]_i_5_n_0 ),
        .I3(s_axi_control_ARADDR[5]),
        .I4(s_axi_control_ARADDR[4]),
        .I5(int_task_ap_done),
        .O(int_task_ap_done_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    int_task_ap_done_i_2
       (.I0(p_5_in),
        .I1(Q[0]),
        .I2(ap_start),
        .I3(auto_restart_status_reg_n_0),
        .I4(ap_done),
        .O(task_ap_done));
  LUT2 #(
    .INIT(4'h1)) 
    int_task_ap_done_i_3
       (.I0(s_axi_control_ARADDR[2]),
        .I1(s_axi_control_ARADDR[3]),
        .O(int_task_ap_done_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    int_task_ap_done_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(int_task_ap_done_i_1_n_0),
        .Q(int_task_ap_done),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \lshr_ln16_cast_reg_440[2]_i_2 
       (.I0(zext_ln16_fu_285_p1[1]),
        .O(\lshr_ln16_cast_reg_440[2]_i_2_n_0 ));
  CARRY4 \lshr_ln16_cast_reg_440_reg[10]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[6]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[10]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[10]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[10]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[10]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [10:7]),
        .S(zext_ln16_fu_285_p1[12:9]));
  CARRY4 \lshr_ln16_cast_reg_440_reg[14]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[10]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[14]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[14]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[14]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[14]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [14:11]),
        .S(zext_ln16_fu_285_p1[16:13]));
  CARRY4 \lshr_ln16_cast_reg_440_reg[18]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[14]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[18]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[18]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[18]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[18]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [18:15]),
        .S(zext_ln16_fu_285_p1[20:17]));
  CARRY4 \lshr_ln16_cast_reg_440_reg[22]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[18]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[22]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[22]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[22]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[22]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [22:19]),
        .S(zext_ln16_fu_285_p1[24:21]));
  CARRY4 \lshr_ln16_cast_reg_440_reg[26]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[22]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[26]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[26]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[26]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[26]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [26:23]),
        .S(zext_ln16_fu_285_p1[28:25]));
  CARRY4 \lshr_ln16_cast_reg_440_reg[2]_i_1 
       (.CI(1'b0),
        .CO({\lshr_ln16_cast_reg_440_reg[2]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[2]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[2]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[2]_i_1_n_3 }),
        .CYINIT(zext_ln16_fu_285_p1[0]),
        .DI({1'b0,1'b0,1'b0,zext_ln16_fu_285_p1[1]}),
        .O({\int_regXferLeng_reg[31]_0 [2:0],\NLW_lshr_ln16_cast_reg_440_reg[2]_i_1_O_UNCONNECTED [0]}),
        .S({zext_ln16_fu_285_p1[4:2],\lshr_ln16_cast_reg_440[2]_i_2_n_0 }));
  CARRY4 \lshr_ln16_cast_reg_440_reg[30]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[26]_i_1_n_0 ),
        .CO({\int_regXferLeng_reg[31]_0 [30],\NLW_lshr_ln16_cast_reg_440_reg[30]_i_1_CO_UNCONNECTED [2],\lshr_ln16_cast_reg_440_reg[30]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[30]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_lshr_ln16_cast_reg_440_reg[30]_i_1_O_UNCONNECTED [3],\int_regXferLeng_reg[31]_0 [29:27]}),
        .S({1'b1,zext_ln16_fu_285_p1[31:29]}));
  CARRY4 \lshr_ln16_cast_reg_440_reg[6]_i_1 
       (.CI(\lshr_ln16_cast_reg_440_reg[2]_i_1_n_0 ),
        .CO({\lshr_ln16_cast_reg_440_reg[6]_i_1_n_0 ,\lshr_ln16_cast_reg_440_reg[6]_i_1_n_1 ,\lshr_ln16_cast_reg_440_reg[6]_i_1_n_2 ,\lshr_ln16_cast_reg_440_reg[6]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\int_regXferLeng_reg[31]_0 [6:3]),
        .S(zext_ln16_fu_285_p1[8:5]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \rdata[0]_i_2 
       (.I0(\rdata[0]_i_3_n_0 ),
        .I1(s_axi_control_ARADDR[5]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(\rdata[0]_i_4_n_0 ),
        .I4(s_axi_control_ARADDR[3]),
        .I5(\rdata[0]_i_5_n_0 ),
        .O(\rdata[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \rdata[0]_i_3 
       (.I0(pn32HPOutput[0]),
        .I1(data3[0]),
        .I2(s_axi_control_ARADDR[3]),
        .I3(\int_pn32HPInput_reg[63]_0 [30]),
        .I4(s_axi_control_ARADDR[4]),
        .I5(int_gie_reg_n_0),
        .O(\rdata[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \rdata[0]_i_4 
       (.I0(\int_ier_reg_n_0_[0] ),
        .I1(s_axi_control_ARADDR[5]),
        .I2(zext_ln16_fu_285_p1[0]),
        .I3(s_axi_control_ARADDR[4]),
        .O(\rdata[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \rdata[0]_i_5 
       (.I0(pn32HPInput[0]),
        .I1(s_axi_control_ARADDR[4]),
        .I2(\int_pn32HPOutput_reg[63]_0 [30]),
        .I3(s_axi_control_ARADDR[5]),
        .I4(ap_start),
        .O(\rdata[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[10]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [8]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [40]),
        .I5(\int_pn32HPInput_reg[63]_0 [8]),
        .O(\rdata[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[10]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [40]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[10]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[11]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [9]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [41]),
        .I5(\int_pn32HPInput_reg[63]_0 [9]),
        .O(\rdata[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[11]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [41]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[11]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[12]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [10]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [42]),
        .I5(\int_pn32HPInput_reg[63]_0 [10]),
        .O(\rdata[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[12]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [42]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[12]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[13]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [11]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [43]),
        .I5(\int_pn32HPInput_reg[63]_0 [11]),
        .O(\rdata[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[13]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [43]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[13]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[14]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [12]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [44]),
        .I5(\int_pn32HPInput_reg[63]_0 [12]),
        .O(\rdata[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[14]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [44]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[14]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[15]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [13]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [45]),
        .I5(\int_pn32HPInput_reg[63]_0 [13]),
        .O(\rdata[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[15]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [45]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[15]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[16]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [14]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [46]),
        .I5(\int_pn32HPInput_reg[63]_0 [14]),
        .O(\rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[16]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [46]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[16]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[17]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [15]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [47]),
        .I5(\int_pn32HPInput_reg[63]_0 [15]),
        .O(\rdata[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[17]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [47]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[17]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[18]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [16]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [48]),
        .I5(\int_pn32HPInput_reg[63]_0 [16]),
        .O(\rdata[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[18]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [48]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[18]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[19]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [17]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [49]),
        .I5(\int_pn32HPInput_reg[63]_0 [17]),
        .O(\rdata[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[19]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [49]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[19]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \rdata[1]_i_2 
       (.I0(int_task_ap_done_i_3_n_0),
        .I1(int_task_ap_done),
        .I2(s_axi_control_ARADDR[5]),
        .I3(\int_pn32HPOutput_reg[63]_0 [31]),
        .I4(s_axi_control_ARADDR[4]),
        .I5(pn32HPInput[1]),
        .O(\rdata[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[1]_i_3 
       (.I0(\int_ier_reg_n_0_[1] ),
        .I1(s_axi_control_ARADDR[5]),
        .I2(zext_ln16_fu_285_p1[1]),
        .I3(s_axi_control_ARADDR[2]),
        .I4(s_axi_control_ARADDR[3]),
        .I5(s_axi_control_ARADDR[4]),
        .O(\rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2230223033000000)) 
    \rdata[1]_i_4 
       (.I0(pn32HPOutput[1]),
        .I1(\rdata[1]_i_5_n_0 ),
        .I2(\int_pn32HPInput_reg[63]_0 [31]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(data3[1]),
        .I5(s_axi_control_ARADDR[4]),
        .O(\rdata[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \rdata[1]_i_5 
       (.I0(s_axi_control_ARADDR[5]),
        .I1(s_axi_control_ARADDR[2]),
        .O(\rdata[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[20]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [18]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [50]),
        .I5(\int_pn32HPInput_reg[63]_0 [18]),
        .O(\rdata[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[20]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [50]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[20]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[21]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [19]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [51]),
        .I5(\int_pn32HPInput_reg[63]_0 [19]),
        .O(\rdata[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[21]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [51]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[21]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[22]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [20]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [52]),
        .I5(\int_pn32HPInput_reg[63]_0 [20]),
        .O(\rdata[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[22]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [52]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[22]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[23]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [21]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [53]),
        .I5(\int_pn32HPInput_reg[63]_0 [21]),
        .O(\rdata[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[23]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [53]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[23]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[24]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [22]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [54]),
        .I5(\int_pn32HPInput_reg[63]_0 [22]),
        .O(\rdata[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[24]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [54]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[24]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[25]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [23]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [55]),
        .I5(\int_pn32HPInput_reg[63]_0 [23]),
        .O(\rdata[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[25]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [55]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[25]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[26]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [24]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [56]),
        .I5(\int_pn32HPInput_reg[63]_0 [24]),
        .O(\rdata[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[26]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [56]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[26]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[27]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [25]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [57]),
        .I5(\int_pn32HPInput_reg[63]_0 [25]),
        .O(\rdata[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[27]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [57]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[27]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[28]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [26]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [58]),
        .I5(\int_pn32HPInput_reg[63]_0 [26]),
        .O(\rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[28]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [58]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[28]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[29]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [27]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [59]),
        .I5(\int_pn32HPInput_reg[63]_0 [27]),
        .O(\rdata[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[29]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [59]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[29]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBFFFFFFFBFFF)) 
    \rdata[2]_i_2 
       (.I0(s_axi_control_ARADDR[5]),
        .I1(s_axi_control_ARADDR[2]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(\int_pn32HPInput_reg[63]_0 [32]),
        .I4(s_axi_control_ARADDR[3]),
        .I5(\int_pn32HPOutput_reg[63]_0 [0]),
        .O(\rdata[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000008000000AAAA)) 
    \rdata[2]_i_3 
       (.I0(\rdata[2]_i_4_n_0 ),
        .I1(zext_ln16_fu_285_p1[2]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(s_axi_control_ARADDR[5]),
        .I4(s_axi_control_ARADDR[2]),
        .I5(s_axi_control_ARADDR[3]),
        .O(\rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFFEAEAAAAFEAE)) 
    \rdata[2]_i_4 
       (.I0(s_axi_control_ARADDR[3]),
        .I1(p_5_in),
        .I2(s_axi_control_ARADDR[5]),
        .I3(\int_pn32HPOutput_reg[63]_0 [32]),
        .I4(s_axi_control_ARADDR[4]),
        .I5(\int_pn32HPInput_reg[63]_0 [0]),
        .O(\rdata[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[30]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [28]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [60]),
        .I5(\int_pn32HPInput_reg[63]_0 [28]),
        .O(\rdata[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[30]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [60]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[30]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[30]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \rdata[31]_i_1 
       (.I0(int_an32Coef_read),
        .I1(\FSM_onehot_rstate_reg[1]_0 ),
        .I2(s_axi_control_ARVALID),
        .O(\rdata[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[31]_i_3 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [29]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [61]),
        .I5(\int_pn32HPInput_reg[63]_0 [29]),
        .O(\rdata[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[31]_i_4 
       (.I0(\int_pn32HPOutput_reg[63]_0 [61]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[31]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \rdata[31]_i_5 
       (.I0(s_axi_control_ARADDR[1]),
        .I1(s_axi_control_ARADDR[6]),
        .I2(s_axi_control_ARADDR[0]),
        .I3(s_axi_control_ARVALID),
        .I4(\FSM_onehot_rstate_reg[1]_0 ),
        .O(\rdata[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \rdata[31]_i_6 
       (.I0(s_axi_control_ARADDR[5]),
        .I1(s_axi_control_ARADDR[4]),
        .O(\rdata[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBFFFFFFFBFFF)) 
    \rdata[3]_i_2 
       (.I0(s_axi_control_ARADDR[5]),
        .I1(s_axi_control_ARADDR[2]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(\int_pn32HPInput_reg[63]_0 [33]),
        .I4(s_axi_control_ARADDR[3]),
        .I5(\int_pn32HPOutput_reg[63]_0 [1]),
        .O(\rdata[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000008000000AAAA)) 
    \rdata[3]_i_3 
       (.I0(\rdata[3]_i_4_n_0 ),
        .I1(zext_ln16_fu_285_p1[3]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(s_axi_control_ARADDR[5]),
        .I4(s_axi_control_ARADDR[2]),
        .I5(s_axi_control_ARADDR[3]),
        .O(\rdata[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFFEAEAAAAFEAE)) 
    \rdata[3]_i_4 
       (.I0(s_axi_control_ARADDR[3]),
        .I1(int_ap_ready),
        .I2(s_axi_control_ARADDR[5]),
        .I3(\int_pn32HPOutput_reg[63]_0 [33]),
        .I4(s_axi_control_ARADDR[4]),
        .I5(\int_pn32HPInput_reg[63]_0 [1]),
        .O(\rdata[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[4]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [2]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [34]),
        .I5(\int_pn32HPInput_reg[63]_0 [2]),
        .O(\rdata[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[4]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [34]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[4]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[5]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [3]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [35]),
        .I5(\int_pn32HPInput_reg[63]_0 [3]),
        .O(\rdata[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[5]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [35]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[5]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[6]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [4]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [36]),
        .I5(\int_pn32HPInput_reg[63]_0 [4]),
        .O(\rdata[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[6]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [36]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[6]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000E200)) 
    \rdata[7]_i_2 
       (.I0(\int_pn32HPInput_reg[63]_0 [37]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [5]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .O(\rdata[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h08FF0800)) 
    \rdata[7]_i_3 
       (.I0(zext_ln16_fu_285_p1[7]),
        .I1(s_axi_control_ARADDR[5]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\rdata[7]_i_4_n_0 ),
        .O(\rdata[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \rdata[7]_i_4 
       (.I0(\int_pn32HPInput_reg[63]_0 [5]),
        .I1(s_axi_control_ARADDR[4]),
        .I2(\int_pn32HPOutput_reg[63]_0 [37]),
        .I3(s_axi_control_ARADDR[5]),
        .I4(int_auto_restart_reg_0),
        .O(\rdata[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFAABFFABFAFBFFF)) 
    \rdata[8]_i_2 
       (.I0(\rdata[31]_i_6_n_0 ),
        .I1(\int_pn32HPOutput_reg[63]_0 [6]),
        .I2(s_axi_control_ARADDR[2]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\int_pn32HPInput_reg[63]_0 [38]),
        .I5(\int_pn32HPInput_reg[63]_0 [6]),
        .O(\rdata[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    \rdata[8]_i_3 
       (.I0(\int_pn32HPOutput_reg[63]_0 [38]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(zext_ln16_fu_285_p1[8]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .I5(s_axi_control_ARADDR[2]),
        .O(\rdata[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0000E200)) 
    \rdata[9]_i_3 
       (.I0(\int_pn32HPInput_reg[63]_0 [39]),
        .I1(s_axi_control_ARADDR[3]),
        .I2(\int_pn32HPOutput_reg[63]_0 [7]),
        .I3(s_axi_control_ARADDR[4]),
        .I4(s_axi_control_ARADDR[5]),
        .O(\rdata[9]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h08FF0800)) 
    \rdata[9]_i_4 
       (.I0(zext_ln16_fu_285_p1[9]),
        .I1(s_axi_control_ARADDR[5]),
        .I2(s_axi_control_ARADDR[4]),
        .I3(s_axi_control_ARADDR[3]),
        .I4(\rdata[9]_i_5_n_0 ),
        .O(\rdata[9]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \rdata[9]_i_5 
       (.I0(\int_pn32HPInput_reg[63]_0 [7]),
        .I1(s_axi_control_ARADDR[4]),
        .I2(\int_pn32HPOutput_reg[63]_0 [39]),
        .I3(s_axi_control_ARADDR[5]),
        .I4(interrupt),
        .O(\rdata[9]_i_5_n_0 ));
  FDRE \rdata_reg[0] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_31),
        .Q(s_axi_control_RDATA[0]),
        .R(1'b0));
  FDRE \rdata_reg[10] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_21),
        .Q(s_axi_control_RDATA[10]),
        .R(1'b0));
  FDRE \rdata_reg[11] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_20),
        .Q(s_axi_control_RDATA[11]),
        .R(1'b0));
  FDRE \rdata_reg[12] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_19),
        .Q(s_axi_control_RDATA[12]),
        .R(1'b0));
  FDRE \rdata_reg[13] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_18),
        .Q(s_axi_control_RDATA[13]),
        .R(1'b0));
  FDRE \rdata_reg[14] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_17),
        .Q(s_axi_control_RDATA[14]),
        .R(1'b0));
  FDRE \rdata_reg[15] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_16),
        .Q(s_axi_control_RDATA[15]),
        .R(1'b0));
  FDRE \rdata_reg[16] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_15),
        .Q(s_axi_control_RDATA[16]),
        .R(1'b0));
  FDRE \rdata_reg[17] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_14),
        .Q(s_axi_control_RDATA[17]),
        .R(1'b0));
  FDRE \rdata_reg[18] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_13),
        .Q(s_axi_control_RDATA[18]),
        .R(1'b0));
  FDRE \rdata_reg[19] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_12),
        .Q(s_axi_control_RDATA[19]),
        .R(1'b0));
  FDRE \rdata_reg[1] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_30),
        .Q(s_axi_control_RDATA[1]),
        .R(1'b0));
  FDRE \rdata_reg[20] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_11),
        .Q(s_axi_control_RDATA[20]),
        .R(1'b0));
  FDRE \rdata_reg[21] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_10),
        .Q(s_axi_control_RDATA[21]),
        .R(1'b0));
  FDRE \rdata_reg[22] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_9),
        .Q(s_axi_control_RDATA[22]),
        .R(1'b0));
  FDRE \rdata_reg[23] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_8),
        .Q(s_axi_control_RDATA[23]),
        .R(1'b0));
  FDRE \rdata_reg[24] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_7),
        .Q(s_axi_control_RDATA[24]),
        .R(1'b0));
  FDRE \rdata_reg[25] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_6),
        .Q(s_axi_control_RDATA[25]),
        .R(1'b0));
  FDRE \rdata_reg[26] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_5),
        .Q(s_axi_control_RDATA[26]),
        .R(1'b0));
  FDRE \rdata_reg[27] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_4),
        .Q(s_axi_control_RDATA[27]),
        .R(1'b0));
  FDRE \rdata_reg[28] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_3),
        .Q(s_axi_control_RDATA[28]),
        .R(1'b0));
  FDRE \rdata_reg[29] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_2),
        .Q(s_axi_control_RDATA[29]),
        .R(1'b0));
  FDRE \rdata_reg[2] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_29),
        .Q(s_axi_control_RDATA[2]),
        .R(1'b0));
  FDRE \rdata_reg[30] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_1),
        .Q(s_axi_control_RDATA[30]),
        .R(1'b0));
  FDRE \rdata_reg[31] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_0),
        .Q(s_axi_control_RDATA[31]),
        .R(1'b0));
  FDRE \rdata_reg[3] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_28),
        .Q(s_axi_control_RDATA[3]),
        .R(1'b0));
  FDRE \rdata_reg[4] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_27),
        .Q(s_axi_control_RDATA[4]),
        .R(1'b0));
  FDRE \rdata_reg[5] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_26),
        .Q(s_axi_control_RDATA[5]),
        .R(1'b0));
  FDRE \rdata_reg[6] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_25),
        .Q(s_axi_control_RDATA[6]),
        .R(1'b0));
  FDRE \rdata_reg[7] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_24),
        .Q(s_axi_control_RDATA[7]),
        .R(1'b0));
  FDRE \rdata_reg[8] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_23),
        .Q(s_axi_control_RDATA[8]),
        .R(1'b0));
  FDRE \rdata_reg[9] 
       (.C(ap_clk),
        .CE(\rdata[31]_i_1_n_0 ),
        .D(int_an32Coef_n_22),
        .Q(s_axi_control_RDATA[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_control_RVALID_INST_0
       (.I0(\FSM_onehot_rstate_reg_n_0_[2] ),
        .I1(int_an32Coef_read),
        .O(s_axi_control_RVALID));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h70)) 
    s_axi_control_WREADY_INST_0
       (.I0(s_axi_control_ARVALID),
        .I1(\FSM_onehot_rstate_reg[1]_0 ),
        .I2(\FSM_onehot_wstate_reg_n_0_[2] ),
        .O(s_axi_control_WREADY));
  LUT5 #(
    .INIT(32'hFEEEFFFF)) 
    tmp_product_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(ap_start),
        .I4(address0),
        .O(an32Coef_ce0));
  LUT2 #(
    .INIT(4'h8)) 
    \waddr[6]_i_1__0 
       (.I0(s_axi_control_AWVALID),
        .I1(\FSM_onehot_wstate_reg[1]_0 ),
        .O(aw_hs));
  FDRE \waddr_reg[0] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[0]),
        .Q(\waddr_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \waddr_reg[1] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[1]),
        .Q(\waddr_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \waddr_reg[2] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[2]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \waddr_reg[3] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[3]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \waddr_reg[4] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[4]),
        .Q(p_0_in[2]),
        .R(1'b0));
  FDRE \waddr_reg[5] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[5]),
        .Q(p_0_in[3]),
        .R(1'b0));
  FDRE \waddr_reg[6] 
       (.C(ap_clk),
        .CE(aw_hs),
        .D(s_axi_control_AWADDR[6]),
        .Q(\waddr_reg_n_0_[6] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_control_s_axi_ram" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_control_s_axi_ram
   (D,
    s_axi_control_ARVALID_0,
    \ap_CS_fsm_reg[5] ,
    q00,
    s_axi_control_ARADDR,
    \rdata_reg[0] ,
    \rdata_reg[1] ,
    \rdata_reg[1]_0 ,
    \rdata_reg[1]_1 ,
    \rdata_reg[1]_2 ,
    s_axi_control_ARVALID,
    \q1_reg[0]_0 ,
    \rdata_reg[2] ,
    \rdata_reg[2]_0 ,
    \rdata_reg[3] ,
    \rdata_reg[3]_0 ,
    \rdata_reg[4] ,
    \rdata_reg[4]_0 ,
    \rdata_reg[5] ,
    \rdata_reg[5]_0 ,
    \rdata_reg[6] ,
    \rdata_reg[6]_0 ,
    \rdata_reg[7] ,
    \rdata_reg[7]_0 ,
    \rdata_reg[8] ,
    \rdata_reg[8]_0 ,
    \rdata_reg[9] ,
    \rdata_reg[9]_0 ,
    \rdata_reg[10] ,
    \rdata_reg[10]_0 ,
    \rdata_reg[11] ,
    \rdata_reg[11]_0 ,
    \rdata_reg[12] ,
    \rdata_reg[12]_0 ,
    \rdata_reg[13] ,
    \rdata_reg[13]_0 ,
    \rdata_reg[14] ,
    \rdata_reg[14]_0 ,
    \rdata_reg[15] ,
    \rdata_reg[15]_0 ,
    \rdata_reg[16] ,
    \rdata_reg[16]_0 ,
    \rdata_reg[17] ,
    \rdata_reg[17]_0 ,
    \rdata_reg[18] ,
    \rdata_reg[18]_0 ,
    \rdata_reg[19] ,
    \rdata_reg[19]_0 ,
    \rdata_reg[20] ,
    \rdata_reg[20]_0 ,
    \rdata_reg[21] ,
    \rdata_reg[21]_0 ,
    \rdata_reg[22] ,
    \rdata_reg[22]_0 ,
    \rdata_reg[23] ,
    \rdata_reg[23]_0 ,
    \rdata_reg[24] ,
    \rdata_reg[24]_0 ,
    \rdata_reg[25] ,
    \rdata_reg[25]_0 ,
    \rdata_reg[26] ,
    \rdata_reg[26]_0 ,
    \rdata_reg[27] ,
    \rdata_reg[27]_0 ,
    \rdata_reg[28] ,
    \rdata_reg[28]_0 ,
    \rdata_reg[29] ,
    \rdata_reg[29]_0 ,
    \rdata_reg[30] ,
    \rdata_reg[30]_0 ,
    \rdata_reg[31] ,
    \rdata_reg[31]_0 ,
    \q1_reg[0]_1 ,
    s_axi_control_WVALID,
    Q,
    s_axi_control_WSTRB,
    dout_reg,
    s_axi_control_WDATA,
    dout_reg_0,
    ap_clk);
  output [31:0]D;
  output s_axi_control_ARVALID_0;
  output [0:0]\ap_CS_fsm_reg[5] ;
  output [31:0]q00;
  input [6:0]s_axi_control_ARADDR;
  input \rdata_reg[0] ;
  input \rdata_reg[1] ;
  input \rdata_reg[1]_0 ;
  input \rdata_reg[1]_1 ;
  input \rdata_reg[1]_2 ;
  input s_axi_control_ARVALID;
  input \q1_reg[0]_0 ;
  input \rdata_reg[2] ;
  input \rdata_reg[2]_0 ;
  input \rdata_reg[3] ;
  input \rdata_reg[3]_0 ;
  input \rdata_reg[4] ;
  input \rdata_reg[4]_0 ;
  input \rdata_reg[5] ;
  input \rdata_reg[5]_0 ;
  input \rdata_reg[6] ;
  input \rdata_reg[6]_0 ;
  input \rdata_reg[7] ;
  input \rdata_reg[7]_0 ;
  input \rdata_reg[8] ;
  input \rdata_reg[8]_0 ;
  input \rdata_reg[9] ;
  input \rdata_reg[9]_0 ;
  input \rdata_reg[10] ;
  input \rdata_reg[10]_0 ;
  input \rdata_reg[11] ;
  input \rdata_reg[11]_0 ;
  input \rdata_reg[12] ;
  input \rdata_reg[12]_0 ;
  input \rdata_reg[13] ;
  input \rdata_reg[13]_0 ;
  input \rdata_reg[14] ;
  input \rdata_reg[14]_0 ;
  input \rdata_reg[15] ;
  input \rdata_reg[15]_0 ;
  input \rdata_reg[16] ;
  input \rdata_reg[16]_0 ;
  input \rdata_reg[17] ;
  input \rdata_reg[17]_0 ;
  input \rdata_reg[18] ;
  input \rdata_reg[18]_0 ;
  input \rdata_reg[19] ;
  input \rdata_reg[19]_0 ;
  input \rdata_reg[20] ;
  input \rdata_reg[20]_0 ;
  input \rdata_reg[21] ;
  input \rdata_reg[21]_0 ;
  input \rdata_reg[22] ;
  input \rdata_reg[22]_0 ;
  input \rdata_reg[23] ;
  input \rdata_reg[23]_0 ;
  input \rdata_reg[24] ;
  input \rdata_reg[24]_0 ;
  input \rdata_reg[25] ;
  input \rdata_reg[25]_0 ;
  input \rdata_reg[26] ;
  input \rdata_reg[26]_0 ;
  input \rdata_reg[27] ;
  input \rdata_reg[27]_0 ;
  input \rdata_reg[28] ;
  input \rdata_reg[28]_0 ;
  input \rdata_reg[29] ;
  input \rdata_reg[29]_0 ;
  input \rdata_reg[30] ;
  input \rdata_reg[30]_0 ;
  input \rdata_reg[31] ;
  input \rdata_reg[31]_0 ;
  input \q1_reg[0]_1 ;
  input s_axi_control_WVALID;
  input [3:0]Q;
  input [3:0]s_axi_control_WSTRB;
  input dout_reg;
  input [31:0]s_axi_control_WDATA;
  input [9:0]dout_reg_0;
  input ap_clk;

  wire [31:0]D;
  wire [3:0]Q;
  wire [2:0]address0;
  wire [0:0]\ap_CS_fsm_reg[5] ;
  wire ap_clk;
  wire dout_reg;
  wire [9:0]dout_reg_0;
  wire [3:0]int_an32Coef_address1;
  wire int_an32Coef_ce1;
  wire mem_reg_0_15_0_0_i_10_n_0;
  wire mem_reg_0_15_0_0_i_11_n_0;
  wire mem_reg_0_15_0_0_i_12_n_0;
  wire mem_reg_0_15_0_0_i_13_n_0;
  wire [24:0]p_0_in0_out;
  wire [31:24]p_1_in;
  wire [31:0]q00;
  wire [31:0]q1;
  wire [31:0]q10;
  wire \q1_reg[0]_0 ;
  wire \q1_reg[0]_1 ;
  wire \rdata_reg[0] ;
  wire \rdata_reg[10] ;
  wire \rdata_reg[10]_0 ;
  wire \rdata_reg[11] ;
  wire \rdata_reg[11]_0 ;
  wire \rdata_reg[12] ;
  wire \rdata_reg[12]_0 ;
  wire \rdata_reg[13] ;
  wire \rdata_reg[13]_0 ;
  wire \rdata_reg[14] ;
  wire \rdata_reg[14]_0 ;
  wire \rdata_reg[15] ;
  wire \rdata_reg[15]_0 ;
  wire \rdata_reg[16] ;
  wire \rdata_reg[16]_0 ;
  wire \rdata_reg[17] ;
  wire \rdata_reg[17]_0 ;
  wire \rdata_reg[18] ;
  wire \rdata_reg[18]_0 ;
  wire \rdata_reg[19] ;
  wire \rdata_reg[19]_0 ;
  wire \rdata_reg[1] ;
  wire \rdata_reg[1]_0 ;
  wire \rdata_reg[1]_1 ;
  wire \rdata_reg[1]_2 ;
  wire \rdata_reg[20] ;
  wire \rdata_reg[20]_0 ;
  wire \rdata_reg[21] ;
  wire \rdata_reg[21]_0 ;
  wire \rdata_reg[22] ;
  wire \rdata_reg[22]_0 ;
  wire \rdata_reg[23] ;
  wire \rdata_reg[23]_0 ;
  wire \rdata_reg[24] ;
  wire \rdata_reg[24]_0 ;
  wire \rdata_reg[25] ;
  wire \rdata_reg[25]_0 ;
  wire \rdata_reg[26] ;
  wire \rdata_reg[26]_0 ;
  wire \rdata_reg[27] ;
  wire \rdata_reg[27]_0 ;
  wire \rdata_reg[28] ;
  wire \rdata_reg[28]_0 ;
  wire \rdata_reg[29] ;
  wire \rdata_reg[29]_0 ;
  wire \rdata_reg[2] ;
  wire \rdata_reg[2]_0 ;
  wire \rdata_reg[30] ;
  wire \rdata_reg[30]_0 ;
  wire \rdata_reg[31] ;
  wire \rdata_reg[31]_0 ;
  wire \rdata_reg[3] ;
  wire \rdata_reg[3]_0 ;
  wire \rdata_reg[4] ;
  wire \rdata_reg[4]_0 ;
  wire \rdata_reg[5] ;
  wire \rdata_reg[5]_0 ;
  wire \rdata_reg[6] ;
  wire \rdata_reg[6]_0 ;
  wire \rdata_reg[7] ;
  wire \rdata_reg[7]_0 ;
  wire \rdata_reg[8] ;
  wire \rdata_reg[8]_0 ;
  wire \rdata_reg[9] ;
  wire \rdata_reg[9]_0 ;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARVALID;
  wire s_axi_control_ARVALID_0;
  wire [31:0]s_axi_control_WDATA;
  wire [3:0]s_axi_control_WSTRB;
  wire s_axi_control_WVALID;

  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "0" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_0_0
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[0]),
        .DPO(q00[0]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[0]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  LUT6 #(
    .INIT(64'h0000800080008000)) 
    mem_reg_0_15_0_0_i_1
       (.I0(s_axi_control_WSTRB[0]),
        .I1(s_axi_control_WVALID),
        .I2(\q1_reg[0]_1 ),
        .I3(dout_reg),
        .I4(\q1_reg[0]_0 ),
        .I5(s_axi_control_ARVALID),
        .O(p_0_in0_out[0]));
  LUT6 #(
    .INIT(64'h00000000CCCC00C4)) 
    mem_reg_0_15_0_0_i_10
       (.I0(dout_reg_0[3]),
        .I1(mem_reg_0_15_0_0_i_13_n_0),
        .I2(dout_reg_0[4]),
        .I3(dout_reg_0[5]),
        .I4(dout_reg_0[6]),
        .I5(dout_reg_0[7]),
        .O(mem_reg_0_15_0_0_i_10_n_0));
  LUT6 #(
    .INIT(64'h1111111111110001)) 
    mem_reg_0_15_0_0_i_11
       (.I0(dout_reg_0[5]),
        .I1(dout_reg_0[4]),
        .I2(dout_reg_0[1]),
        .I3(dout_reg_0[0]),
        .I4(dout_reg_0[2]),
        .I5(dout_reg_0[3]),
        .O(mem_reg_0_15_0_0_i_11_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    mem_reg_0_15_0_0_i_12
       (.I0(dout_reg_0[6]),
        .I1(dout_reg_0[7]),
        .I2(dout_reg_0[9]),
        .I3(dout_reg_0[8]),
        .O(mem_reg_0_15_0_0_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF22F2)) 
    mem_reg_0_15_0_0_i_13
       (.I0(dout_reg_0[4]),
        .I1(dout_reg_0[5]),
        .I2(dout_reg_0[0]),
        .I3(dout_reg_0[1]),
        .I4(dout_reg_0[6]),
        .I5(dout_reg_0[2]),
        .O(mem_reg_0_15_0_0_i_13_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    mem_reg_0_15_0_0_i_2
       (.I0(Q[0]),
        .I1(s_axi_control_ARVALID),
        .I2(\q1_reg[0]_0 ),
        .I3(s_axi_control_ARADDR[2]),
        .O(int_an32Coef_address1[0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    mem_reg_0_15_0_0_i_3
       (.I0(Q[1]),
        .I1(s_axi_control_ARVALID),
        .I2(\q1_reg[0]_0 ),
        .I3(s_axi_control_ARADDR[3]),
        .O(int_an32Coef_address1[1]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    mem_reg_0_15_0_0_i_4
       (.I0(Q[2]),
        .I1(s_axi_control_ARVALID),
        .I2(\q1_reg[0]_0 ),
        .I3(s_axi_control_ARADDR[4]),
        .O(int_an32Coef_address1[2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    mem_reg_0_15_0_0_i_5
       (.I0(Q[3]),
        .I1(s_axi_control_ARVALID),
        .I2(\q1_reg[0]_0 ),
        .I3(s_axi_control_ARADDR[5]),
        .O(int_an32Coef_address1[3]));
  LUT3 #(
    .INIT(8'h0E)) 
    mem_reg_0_15_0_0_i_6
       (.I0(mem_reg_0_15_0_0_i_10_n_0),
        .I1(dout_reg_0[8]),
        .I2(dout_reg_0[9]),
        .O(address0[0]));
  LUT5 #(
    .INIT(32'h000000FE)) 
    mem_reg_0_15_0_0_i_7
       (.I0(mem_reg_0_15_0_0_i_11_n_0),
        .I1(dout_reg_0[7]),
        .I2(dout_reg_0[6]),
        .I3(dout_reg_0[9]),
        .I4(dout_reg_0[8]),
        .O(address0[1]));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    mem_reg_0_15_0_0_i_8
       (.I0(dout_reg_0[4]),
        .I1(dout_reg_0[5]),
        .I2(dout_reg_0[2]),
        .I3(dout_reg_0[3]),
        .I4(mem_reg_0_15_0_0_i_12_n_0),
        .O(address0[2]));
  LUT5 #(
    .INIT(32'h00000001)) 
    mem_reg_0_15_0_0_i_9
       (.I0(dout_reg_0[4]),
        .I1(dout_reg_0[5]),
        .I2(dout_reg_0[2]),
        .I3(dout_reg_0[3]),
        .I4(mem_reg_0_15_0_0_i_12_n_0),
        .O(\ap_CS_fsm_reg[5] ));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "10" *) 
  (* ram_slice_end = "10" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_10_10
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[10]),
        .DPO(q00[10]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[10]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "11" *) 
  (* ram_slice_end = "11" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_11_11
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[11]),
        .DPO(q00[11]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[11]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "12" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_12_12
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[12]),
        .DPO(q00[12]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[12]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "13" *) 
  (* ram_slice_end = "13" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_13_13
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[13]),
        .DPO(q00[13]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[13]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "14" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_14_14
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[14]),
        .DPO(q00[14]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[14]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "15" *) 
  (* ram_slice_end = "15" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_15_15
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[15]),
        .DPO(q00[15]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[15]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "16" *) 
  (* ram_slice_end = "16" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_16_16
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[16]),
        .DPO(q00[16]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[16]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  LUT6 #(
    .INIT(64'h0000800080008000)) 
    mem_reg_0_15_16_16_i_1
       (.I0(s_axi_control_WSTRB[2]),
        .I1(s_axi_control_WVALID),
        .I2(\q1_reg[0]_1 ),
        .I3(dout_reg),
        .I4(\q1_reg[0]_0 ),
        .I5(s_axi_control_ARVALID),
        .O(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "17" *) 
  (* ram_slice_end = "17" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_17_17
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[17]),
        .DPO(q00[17]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[17]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "18" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_18_18
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[18]),
        .DPO(q00[18]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[18]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "19" *) 
  (* ram_slice_end = "19" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_19_19
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[19]),
        .DPO(q00[19]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[19]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "1" *) 
  (* ram_slice_end = "1" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_1_1
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[1]),
        .DPO(q00[1]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[1]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "20" *) 
  (* ram_slice_end = "20" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_20_20
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[20]),
        .DPO(q00[20]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[20]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "21" *) 
  (* ram_slice_end = "21" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_21_21
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[21]),
        .DPO(q00[21]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[21]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "22" *) 
  (* ram_slice_end = "22" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_22_22
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[22]),
        .DPO(q00[22]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[22]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "23" *) 
  (* ram_slice_end = "23" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_23_23
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[23]),
        .DPO(q00[23]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[23]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[16]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "24" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_24_24
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[24]),
        .DPO(q00[24]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[24]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_24_24_i_1
       (.I0(s_axi_control_WDATA[24]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[24]));
  LUT6 #(
    .INIT(64'h0000800080008000)) 
    mem_reg_0_15_24_24_i_2
       (.I0(s_axi_control_WSTRB[3]),
        .I1(s_axi_control_WVALID),
        .I2(\q1_reg[0]_1 ),
        .I3(dout_reg),
        .I4(\q1_reg[0]_0 ),
        .I5(s_axi_control_ARVALID),
        .O(p_0_in0_out[24]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "25" *) 
  (* ram_slice_end = "25" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_25_25
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[25]),
        .DPO(q00[25]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[25]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_25_25_i_1
       (.I0(s_axi_control_WDATA[25]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[25]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "26" *) 
  (* ram_slice_end = "26" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_26_26
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[26]),
        .DPO(q00[26]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[26]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_26_26_i_1
       (.I0(s_axi_control_WDATA[26]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[26]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "27" *) 
  (* ram_slice_end = "27" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_27_27
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[27]),
        .DPO(q00[27]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[27]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_27_27_i_1
       (.I0(s_axi_control_WDATA[27]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[27]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "28" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_28_28
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[28]),
        .DPO(q00[28]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[28]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_28_28_i_1
       (.I0(s_axi_control_WDATA[28]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[28]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "29" *) 
  (* ram_slice_end = "29" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_29_29
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[29]),
        .DPO(q00[29]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[29]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_29_29_i_1
       (.I0(s_axi_control_WDATA[29]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[29]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "2" *) 
  (* ram_slice_end = "2" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_2_2
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[2]),
        .DPO(q00[2]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[2]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "30" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_30_30
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[30]),
        .DPO(q00[30]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[30]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_30_30_i_1
       (.I0(s_axi_control_WDATA[30]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[30]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "31" *) 
  (* ram_slice_end = "31" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_31_31
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(p_1_in[31]),
        .DPO(q00[31]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[31]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[24]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mem_reg_0_15_31_31_i_1
       (.I0(s_axi_control_WDATA[31]),
        .I1(s_axi_control_ARVALID_0),
        .I2(dout_reg),
        .I3(\q1_reg[0]_1 ),
        .I4(s_axi_control_WVALID),
        .I5(s_axi_control_WSTRB[3]),
        .O(p_1_in[31]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "3" *) 
  (* ram_slice_end = "3" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_3_3
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[3]),
        .DPO(q00[3]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[3]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "4" *) 
  (* ram_slice_end = "4" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_4_4
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[4]),
        .DPO(q00[4]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[4]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "5" *) 
  (* ram_slice_end = "5" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_5_5
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[5]),
        .DPO(q00[5]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[5]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "6" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_6_6
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[6]),
        .DPO(q00[6]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[6]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_7_7
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[7]),
        .DPO(q00[7]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[7]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[0]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "8" *) 
  (* ram_slice_end = "8" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_8_8
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[8]),
        .DPO(q00[8]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[8]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  LUT6 #(
    .INIT(64'h0000800080008000)) 
    mem_reg_0_15_8_8_i_1
       (.I0(s_axi_control_WSTRB[1]),
        .I1(s_axi_control_WVALID),
        .I2(\q1_reg[0]_1 ),
        .I3(dout_reg),
        .I4(\q1_reg[0]_0 ),
        .I5(s_axi_control_ARVALID),
        .O(p_0_in0_out[8]));
  (* RTL_RAM_BITS = "384" *) 
  (* RTL_RAM_NAME = "control_s_axi_U/int_an32Coef/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_TDP" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  (* XILINX_TRANSFORM_PINMAP = "GND:DPRA4,A4" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "11" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "9" *) 
  (* ram_slice_end = "9" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    mem_reg_0_15_9_9
       (.A0(int_an32Coef_address1[0]),
        .A1(int_an32Coef_address1[1]),
        .A2(int_an32Coef_address1[2]),
        .A3(int_an32Coef_address1[3]),
        .A4(1'b0),
        .D(s_axi_control_WDATA[9]),
        .DPO(q00[9]),
        .DPRA0(address0[0]),
        .DPRA1(address0[1]),
        .DPRA2(address0[2]),
        .DPRA3(\ap_CS_fsm_reg[5] ),
        .DPRA4(1'b0),
        .SPO(q10[9]),
        .WCLK(ap_clk),
        .WE(p_0_in0_out[8]));
  LUT4 #(
    .INIT(16'hF888)) 
    \q1[31]_i_1 
       (.I0(\q1_reg[0]_1 ),
        .I1(s_axi_control_WVALID),
        .I2(\q1_reg[0]_0 ),
        .I3(s_axi_control_ARVALID),
        .O(int_an32Coef_ce1));
  FDRE \q1_reg[0] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[0]),
        .Q(q1[0]),
        .R(1'b0));
  FDRE \q1_reg[10] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[10]),
        .Q(q1[10]),
        .R(1'b0));
  FDRE \q1_reg[11] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[11]),
        .Q(q1[11]),
        .R(1'b0));
  FDRE \q1_reg[12] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[12]),
        .Q(q1[12]),
        .R(1'b0));
  FDRE \q1_reg[13] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[13]),
        .Q(q1[13]),
        .R(1'b0));
  FDRE \q1_reg[14] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[14]),
        .Q(q1[14]),
        .R(1'b0));
  FDRE \q1_reg[15] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[15]),
        .Q(q1[15]),
        .R(1'b0));
  FDRE \q1_reg[16] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[16]),
        .Q(q1[16]),
        .R(1'b0));
  FDRE \q1_reg[17] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[17]),
        .Q(q1[17]),
        .R(1'b0));
  FDRE \q1_reg[18] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[18]),
        .Q(q1[18]),
        .R(1'b0));
  FDRE \q1_reg[19] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[19]),
        .Q(q1[19]),
        .R(1'b0));
  FDRE \q1_reg[1] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[1]),
        .Q(q1[1]),
        .R(1'b0));
  FDRE \q1_reg[20] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[20]),
        .Q(q1[20]),
        .R(1'b0));
  FDRE \q1_reg[21] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[21]),
        .Q(q1[21]),
        .R(1'b0));
  FDRE \q1_reg[22] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[22]),
        .Q(q1[22]),
        .R(1'b0));
  FDRE \q1_reg[23] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[23]),
        .Q(q1[23]),
        .R(1'b0));
  FDRE \q1_reg[24] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[24]),
        .Q(q1[24]),
        .R(1'b0));
  FDRE \q1_reg[25] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[25]),
        .Q(q1[25]),
        .R(1'b0));
  FDRE \q1_reg[26] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[26]),
        .Q(q1[26]),
        .R(1'b0));
  FDRE \q1_reg[27] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[27]),
        .Q(q1[27]),
        .R(1'b0));
  FDRE \q1_reg[28] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[28]),
        .Q(q1[28]),
        .R(1'b0));
  FDRE \q1_reg[29] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[29]),
        .Q(q1[29]),
        .R(1'b0));
  FDRE \q1_reg[2] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[2]),
        .Q(q1[2]),
        .R(1'b0));
  FDRE \q1_reg[30] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[30]),
        .Q(q1[30]),
        .R(1'b0));
  FDRE \q1_reg[31] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[31]),
        .Q(q1[31]),
        .R(1'b0));
  FDRE \q1_reg[3] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[3]),
        .Q(q1[3]),
        .R(1'b0));
  FDRE \q1_reg[4] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[4]),
        .Q(q1[4]),
        .R(1'b0));
  FDRE \q1_reg[5] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[5]),
        .Q(q1[5]),
        .R(1'b0));
  FDRE \q1_reg[6] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[6]),
        .Q(q1[6]),
        .R(1'b0));
  FDRE \q1_reg[7] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[7]),
        .Q(q1[7]),
        .R(1'b0));
  FDRE \q1_reg[8] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[8]),
        .Q(q1[8]),
        .R(1'b0));
  FDRE \q1_reg[9] 
       (.C(ap_clk),
        .CE(int_an32Coef_ce1),
        .D(q10[9]),
        .Q(q1[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAA0003AAAA0000)) 
    \rdata[0]_i_1 
       (.I0(q1[0]),
        .I1(s_axi_control_ARADDR[1]),
        .I2(s_axi_control_ARADDR[6]),
        .I3(s_axi_control_ARADDR[0]),
        .I4(s_axi_control_ARVALID_0),
        .I5(\rdata_reg[0] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[10]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[10]),
        .I3(\rdata_reg[10] ),
        .I4(\rdata_reg[10]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[11]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[11]),
        .I3(\rdata_reg[11] ),
        .I4(\rdata_reg[11]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[12]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[12]),
        .I3(\rdata_reg[12] ),
        .I4(\rdata_reg[12]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[13]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[13]),
        .I3(\rdata_reg[13] ),
        .I4(\rdata_reg[13]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[14]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[14]),
        .I3(\rdata_reg[14] ),
        .I4(\rdata_reg[14]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[15]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[15]),
        .I3(\rdata_reg[15] ),
        .I4(\rdata_reg[15]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[16]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[16]),
        .I3(\rdata_reg[16] ),
        .I4(\rdata_reg[16]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[16]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[17]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[17]),
        .I3(\rdata_reg[17] ),
        .I4(\rdata_reg[17]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[18]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[18]),
        .I3(\rdata_reg[18] ),
        .I4(\rdata_reg[18]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[18]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[19]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[19]),
        .I3(\rdata_reg[19] ),
        .I4(\rdata_reg[19]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[19]));
  LUT6 #(
    .INIT(64'hFFFFFF8F88888888)) 
    \rdata[1]_i_1 
       (.I0(s_axi_control_ARVALID_0),
        .I1(q1[1]),
        .I2(\rdata_reg[1] ),
        .I3(\rdata_reg[1]_0 ),
        .I4(\rdata_reg[1]_1 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[20]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[20]),
        .I3(\rdata_reg[20] ),
        .I4(\rdata_reg[20]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[20]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[21]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[21]),
        .I3(\rdata_reg[21] ),
        .I4(\rdata_reg[21]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[22]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[22]),
        .I3(\rdata_reg[22] ),
        .I4(\rdata_reg[22]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[22]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[23]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[23]),
        .I3(\rdata_reg[23] ),
        .I4(\rdata_reg[23]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[23]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[24]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[24]),
        .I3(\rdata_reg[24] ),
        .I4(\rdata_reg[24]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[24]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[25]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[25]),
        .I3(\rdata_reg[25] ),
        .I4(\rdata_reg[25]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[25]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[26]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[26]),
        .I3(\rdata_reg[26] ),
        .I4(\rdata_reg[26]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[26]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[27]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[27]),
        .I3(\rdata_reg[27] ),
        .I4(\rdata_reg[27]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[27]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[28]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[28]),
        .I3(\rdata_reg[28] ),
        .I4(\rdata_reg[28]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[28]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[29]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[29]),
        .I3(\rdata_reg[29] ),
        .I4(\rdata_reg[29]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[29]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[2]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[2]),
        .I3(\rdata_reg[2] ),
        .I4(\rdata_reg[2]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[30]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[30]),
        .I3(\rdata_reg[30] ),
        .I4(\rdata_reg[30]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[30]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[31]_i_2 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[31]),
        .I3(\rdata_reg[31] ),
        .I4(\rdata_reg[31]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[31]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[3]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[3]),
        .I3(\rdata_reg[3] ),
        .I4(\rdata_reg[3]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[4]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[4]),
        .I3(\rdata_reg[4] ),
        .I4(\rdata_reg[4]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[5]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[5]),
        .I3(\rdata_reg[5] ),
        .I4(\rdata_reg[5]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[6]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[6]),
        .I3(\rdata_reg[6] ),
        .I4(\rdata_reg[6]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hF888F8F8F8888888)) 
    \rdata[7]_i_1 
       (.I0(s_axi_control_ARVALID_0),
        .I1(q1[7]),
        .I2(\rdata_reg[1]_2 ),
        .I3(\rdata_reg[7] ),
        .I4(s_axi_control_ARADDR[2]),
        .I5(\rdata_reg[7]_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFF70FF70707070)) 
    \rdata[8]_i_1 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .I2(q1[8]),
        .I3(\rdata_reg[8] ),
        .I4(\rdata_reg[8]_0 ),
        .I5(\rdata_reg[1]_2 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hF888F8F8F8888888)) 
    \rdata[9]_i_1 
       (.I0(s_axi_control_ARVALID_0),
        .I1(q1[9]),
        .I2(\rdata_reg[1]_2 ),
        .I3(\rdata_reg[9] ),
        .I4(s_axi_control_ARADDR[2]),
        .I5(\rdata_reg[9]_0 ),
        .O(D[9]));
  LUT2 #(
    .INIT(4'h7)) 
    \rdata[9]_i_2 
       (.I0(s_axi_control_ARVALID),
        .I1(\q1_reg[0]_0 ),
        .O(s_axi_control_ARVALID_0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_fir_n11_maxi_Pipeline_XFER_LOOP" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_fir_n11_maxi_Pipeline_XFER_LOOP
   (ap_enable_reg_pp0_iter1_reg_0,
    p_5_in,
    ap_enable_reg_pp0_iter7_reg_0,
    pop,
    ready_for_outstanding,
    \ap_CS_fsm_reg[12]_0 ,
    D,
    task_ap_ready,
    ap_done,
    ap_rst_n_0,
    \ap_CS_fsm_reg[12]_1 ,
    \p_cast_reg_496_reg[30]_0 ,
    \add_ln28_9_reg_709_reg[31]_0 ,
    SR,
    ap_clk,
    an32Coef_ce0,
    Q,
    q00,
    dout,
    gmem_RVALID,
    mem_reg,
    ap_rst_n,
    ap_enable_reg_pp0_iter1_reg_1,
    gmem_AWREADY,
    gmem_BVALID,
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg,
    gmem_ARREADY,
    \ap_CS_fsm_reg[1]_0 ,
    gmem_WREADY,
    int_ap_ready_reg,
    \p_cast_reg_496_reg[30]_1 );
  output ap_enable_reg_pp0_iter1_reg_0;
  output p_5_in;
  output ap_enable_reg_pp0_iter7_reg_0;
  output pop;
  output ready_for_outstanding;
  output [2:0]\ap_CS_fsm_reg[12]_0 ;
  output [0:0]D;
  output task_ap_ready;
  output ap_done;
  output ap_rst_n_0;
  output \ap_CS_fsm_reg[12]_1 ;
  output [30:0]\p_cast_reg_496_reg[30]_0 ;
  output [31:0]\add_ln28_9_reg_709_reg[31]_0 ;
  input [0:0]SR;
  input ap_clk;
  input an32Coef_ce0;
  input [12:0]Q;
  input [31:0]q00;
  input [32:0]dout;
  input gmem_RVALID;
  input mem_reg;
  input ap_rst_n;
  input ap_enable_reg_pp0_iter1_reg_1;
  input gmem_AWREADY;
  input gmem_BVALID;
  input grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  input gmem_ARREADY;
  input \ap_CS_fsm_reg[1]_0 ;
  input gmem_WREADY;
  input [0:0]int_ap_ready_reg;
  input [30:0]\p_cast_reg_496_reg[30]_1 ;

  wire [0:0]D;
  wire [12:0]Q;
  wire [0:0]SR;
  wire [31:0]add_ln28_2_fu_461_p2;
  wire [31:0]add_ln28_2_reg_699;
  wire \add_ln28_2_reg_699[11]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[11]_i_9_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[15]_i_9_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[19]_i_9_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[23]_i_9_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[27]_i_9_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[31]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[3]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_2_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_3_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_4_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_5_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_6_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_7_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_8_n_0 ;
  wire \add_ln28_2_reg_699[7]_i_9_n_0 ;
  wire \add_ln28_2_reg_699_reg[11]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[11]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[11]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[11]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[15]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[15]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[15]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[15]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[19]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[19]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[19]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[19]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[23]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[23]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[23]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[23]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[27]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[27]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[27]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[27]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[31]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[31]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[31]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[3]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[3]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[3]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[3]_i_1_n_3 ;
  wire \add_ln28_2_reg_699_reg[7]_i_1_n_0 ;
  wire \add_ln28_2_reg_699_reg[7]_i_1_n_1 ;
  wire \add_ln28_2_reg_699_reg[7]_i_1_n_2 ;
  wire \add_ln28_2_reg_699_reg[7]_i_1_n_3 ;
  wire [31:0]add_ln28_7_fu_448_p2;
  wire [31:0]add_ln28_7_reg_689;
  wire \add_ln28_7_reg_689[11]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[11]_i_9_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[15]_i_9_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[19]_i_9_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[23]_i_9_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[27]_i_9_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[31]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[3]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_2_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_3_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_4_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_5_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_6_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_7_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_8_n_0 ;
  wire \add_ln28_7_reg_689[7]_i_9_n_0 ;
  wire \add_ln28_7_reg_689_reg[11]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[11]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[11]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[11]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[15]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[15]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[15]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[15]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[19]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[19]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[19]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[19]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[23]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[23]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[23]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[23]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[27]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[27]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[27]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[27]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[31]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[31]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[31]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[3]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[3]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[3]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[3]_i_1_n_3 ;
  wire \add_ln28_7_reg_689_reg[7]_i_1_n_0 ;
  wire \add_ln28_7_reg_689_reg[7]_i_1_n_1 ;
  wire \add_ln28_7_reg_689_reg[7]_i_1_n_2 ;
  wire \add_ln28_7_reg_689_reg[7]_i_1_n_3 ;
  wire [31:0]add_ln28_8_fu_475_p2;
  wire [31:0]add_ln28_8_reg_704;
  wire \add_ln28_8_reg_704[11]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[11]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[15]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[19]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[23]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[27]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_14_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[31]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[3]_i_9_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_10_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_11_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_12_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_13_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_2_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_3_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_4_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_5_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_6_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_7_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_8_n_0 ;
  wire \add_ln28_8_reg_704[7]_i_9_n_0 ;
  wire \add_ln28_8_reg_704_reg[11]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[11]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[11]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[11]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[15]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[15]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[15]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[15]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[19]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[19]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[19]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[19]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[23]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[23]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[23]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[23]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[27]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[27]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[27]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[27]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[31]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[31]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[31]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[3]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[3]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[3]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[3]_i_1_n_3 ;
  wire \add_ln28_8_reg_704_reg[7]_i_1_n_0 ;
  wire \add_ln28_8_reg_704_reg[7]_i_1_n_1 ;
  wire \add_ln28_8_reg_704_reg[7]_i_1_n_2 ;
  wire \add_ln28_8_reg_704_reg[7]_i_1_n_3 ;
  wire [31:0]add_ln28_9_fu_484_p2;
  wire \add_ln28_9_reg_709[11]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[11]_i_9_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[15]_i_9_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[19]_i_9_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[23]_i_9_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[27]_i_9_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[31]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[3]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_2_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_3_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_4_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_5_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_6_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_7_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_8_n_0 ;
  wire \add_ln28_9_reg_709[7]_i_9_n_0 ;
  wire \add_ln28_9_reg_709_reg[11]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[11]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[11]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[11]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[15]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[15]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[15]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[15]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[19]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[19]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[19]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[19]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[23]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[23]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[23]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[23]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[27]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[27]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[27]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[27]_i_1_n_3 ;
  wire [31:0]\add_ln28_9_reg_709_reg[31]_0 ;
  wire \add_ln28_9_reg_709_reg[31]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[31]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[31]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[3]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[3]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[3]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[3]_i_1_n_3 ;
  wire \add_ln28_9_reg_709_reg[7]_i_1_n_0 ;
  wire \add_ln28_9_reg_709_reg[7]_i_1_n_1 ;
  wire \add_ln28_9_reg_709_reg[7]_i_1_n_2 ;
  wire \add_ln28_9_reg_709_reg[7]_i_1_n_3 ;
  wire [31:0]add_ln28_fu_453_p2;
  wire [31:0]add_ln28_reg_694;
  wire \add_ln28_reg_694[11]_i_2_n_0 ;
  wire \add_ln28_reg_694[11]_i_3_n_0 ;
  wire \add_ln28_reg_694[11]_i_4_n_0 ;
  wire \add_ln28_reg_694[11]_i_5_n_0 ;
  wire \add_ln28_reg_694[15]_i_2_n_0 ;
  wire \add_ln28_reg_694[15]_i_3_n_0 ;
  wire \add_ln28_reg_694[15]_i_4_n_0 ;
  wire \add_ln28_reg_694[15]_i_5_n_0 ;
  wire \add_ln28_reg_694[19]_i_2_n_0 ;
  wire \add_ln28_reg_694[19]_i_3_n_0 ;
  wire \add_ln28_reg_694[19]_i_4_n_0 ;
  wire \add_ln28_reg_694[19]_i_5_n_0 ;
  wire \add_ln28_reg_694[23]_i_2_n_0 ;
  wire \add_ln28_reg_694[23]_i_3_n_0 ;
  wire \add_ln28_reg_694[23]_i_4_n_0 ;
  wire \add_ln28_reg_694[23]_i_5_n_0 ;
  wire \add_ln28_reg_694[27]_i_2_n_0 ;
  wire \add_ln28_reg_694[27]_i_3_n_0 ;
  wire \add_ln28_reg_694[27]_i_4_n_0 ;
  wire \add_ln28_reg_694[27]_i_5_n_0 ;
  wire \add_ln28_reg_694[31]_i_2_n_0 ;
  wire \add_ln28_reg_694[31]_i_3_n_0 ;
  wire \add_ln28_reg_694[31]_i_4_n_0 ;
  wire \add_ln28_reg_694[31]_i_5_n_0 ;
  wire \add_ln28_reg_694[3]_i_2_n_0 ;
  wire \add_ln28_reg_694[3]_i_3_n_0 ;
  wire \add_ln28_reg_694[3]_i_4_n_0 ;
  wire \add_ln28_reg_694[3]_i_5_n_0 ;
  wire \add_ln28_reg_694[7]_i_2_n_0 ;
  wire \add_ln28_reg_694[7]_i_3_n_0 ;
  wire \add_ln28_reg_694[7]_i_4_n_0 ;
  wire \add_ln28_reg_694[7]_i_5_n_0 ;
  wire \add_ln28_reg_694_reg[11]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[11]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[11]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[11]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[15]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[15]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[15]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[15]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[19]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[19]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[19]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[19]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[23]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[23]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[23]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[23]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[27]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[27]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[27]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[27]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[31]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[31]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[31]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[3]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[3]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[3]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[3]_i_1_n_3 ;
  wire \add_ln28_reg_694_reg[7]_i_1_n_0 ;
  wire \add_ln28_reg_694_reg[7]_i_1_n_1 ;
  wire \add_ln28_reg_694_reg[7]_i_1_n_2 ;
  wire \add_ln28_reg_694_reg[7]_i_1_n_3 ;
  wire an32Coef_ce0;
  wire [31:0]an32ShiftReg_0;
  wire an32ShiftReg_00;
  wire [31:0]an32ShiftReg_1;
  wire [31:0]an32ShiftReg_2;
  wire [31:0]an32ShiftReg_2_load_reg_583;
  wire [31:0]an32ShiftReg_3;
  wire an32ShiftReg_30;
  wire [31:0]an32ShiftReg_4;
  wire [31:0]an32ShiftReg_5;
  wire [31:0]an32ShiftReg_6;
  wire [31:0]an32ShiftReg_7;
  wire \ap_CS_fsm[1]_i_2__0_n_0 ;
  wire \ap_CS_fsm[1]_i_3_n_0 ;
  wire \ap_CS_fsm[8]_i_2_n_0 ;
  wire ap_CS_fsm_pp0_stage0;
  wire [2:0]\ap_CS_fsm_reg[12]_0 ;
  wire \ap_CS_fsm_reg[12]_1 ;
  wire \ap_CS_fsm_reg[1]_0 ;
  wire \ap_CS_fsm_reg_n_0_[10] ;
  wire \ap_CS_fsm_reg_n_0_[11] ;
  wire \ap_CS_fsm_reg_n_0_[1] ;
  wire \ap_CS_fsm_reg_n_0_[2] ;
  wire \ap_CS_fsm_reg_n_0_[3] ;
  wire \ap_CS_fsm_reg_n_0_[4] ;
  wire \ap_CS_fsm_reg_n_0_[5] ;
  wire \ap_CS_fsm_reg_n_0_[8] ;
  wire \ap_CS_fsm_reg_n_0_[9] ;
  wire [12:0]ap_NS_fsm;
  wire ap_block_pp0_stage0_subdone;
  wire ap_clk;
  wire ap_condition_pp0_exit_iter0_state8;
  wire ap_done;
  wire ap_enable_reg_pp0_iter0;
  wire ap_enable_reg_pp0_iter0_i_1_n_0;
  wire ap_enable_reg_pp0_iter1_i_1_n_0;
  wire ap_enable_reg_pp0_iter1_reg_0;
  wire ap_enable_reg_pp0_iter1_reg_1;
  wire ap_enable_reg_pp0_iter2;
  wire ap_enable_reg_pp0_iter3;
  wire ap_enable_reg_pp0_iter4;
  wire ap_enable_reg_pp0_iter5;
  wire ap_enable_reg_pp0_iter6;
  wire ap_enable_reg_pp0_iter7_i_1_n_0;
  wire ap_enable_reg_pp0_iter7_reg_0;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire [32:0]dout;
  wire [31:16]dout_reg__1;
  wire [31:16]dout_reg__1_0;
  wire [31:16]dout_reg__1_1;
  wire [31:16]dout_reg__1_2;
  wire [31:16]dout_reg__1_3;
  wire [31:16]dout_reg__1_4;
  wire [31:16]dout_reg__1_5;
  wire [31:16]dout_reg__1_6;
  wire [31:16]dout_reg__1_7;
  wire [31:16]dout_reg__1_8;
  wire [31:16]dout_reg__1_9;
  wire gmem_ARREADY;
  wire gmem_AWREADY;
  wire gmem_BVALID;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID;
  wire icmp_ln16_fu_277_p2_carry__0_i_1_n_0;
  wire icmp_ln16_fu_277_p2_carry__0_i_2_n_0;
  wire icmp_ln16_fu_277_p2_carry__0_i_3_n_0;
  wire icmp_ln16_fu_277_p2_carry__0_i_4_n_0;
  wire icmp_ln16_fu_277_p2_carry__0_n_0;
  wire icmp_ln16_fu_277_p2_carry__0_n_1;
  wire icmp_ln16_fu_277_p2_carry__0_n_2;
  wire icmp_ln16_fu_277_p2_carry__0_n_3;
  wire icmp_ln16_fu_277_p2_carry__1_i_1_n_0;
  wire icmp_ln16_fu_277_p2_carry__1_i_2_n_0;
  wire icmp_ln16_fu_277_p2_carry__1_i_3_n_0;
  wire icmp_ln16_fu_277_p2_carry__1_n_2;
  wire icmp_ln16_fu_277_p2_carry__1_n_3;
  wire icmp_ln16_fu_277_p2_carry_i_1_n_0;
  wire icmp_ln16_fu_277_p2_carry_i_2_n_0;
  wire icmp_ln16_fu_277_p2_carry_i_3_n_0;
  wire icmp_ln16_fu_277_p2_carry_i_4_n_0;
  wire icmp_ln16_fu_277_p2_carry_n_0;
  wire icmp_ln16_fu_277_p2_carry_n_1;
  wire icmp_ln16_fu_277_p2_carry_n_2;
  wire icmp_ln16_fu_277_p2_carry_n_3;
  wire [0:0]int_ap_ready_reg;
  wire mem_reg;
  wire mul_32s_32s_32_2_1_U10_n_17;
  wire mul_32s_32s_32_2_1_U10_n_18;
  wire mul_32s_32s_32_2_1_U10_n_19;
  wire mul_32s_32s_32_2_1_U10_n_20;
  wire mul_32s_32s_32_2_1_U10_n_21;
  wire mul_32s_32s_32_2_1_U10_n_22;
  wire mul_32s_32s_32_2_1_U10_n_23;
  wire mul_32s_32s_32_2_1_U10_n_24;
  wire mul_32s_32s_32_2_1_U10_n_25;
  wire mul_32s_32s_32_2_1_U10_n_26;
  wire mul_32s_32s_32_2_1_U10_n_27;
  wire mul_32s_32s_32_2_1_U10_n_28;
  wire mul_32s_32s_32_2_1_U10_n_29;
  wire mul_32s_32s_32_2_1_U10_n_30;
  wire mul_32s_32s_32_2_1_U10_n_31;
  wire mul_32s_32s_32_2_1_U10_n_32;
  wire mul_32s_32s_32_2_1_U11_n_16;
  wire mul_32s_32s_32_2_1_U11_n_17;
  wire mul_32s_32s_32_2_1_U11_n_18;
  wire mul_32s_32s_32_2_1_U11_n_19;
  wire mul_32s_32s_32_2_1_U11_n_20;
  wire mul_32s_32s_32_2_1_U11_n_21;
  wire mul_32s_32s_32_2_1_U11_n_22;
  wire mul_32s_32s_32_2_1_U11_n_23;
  wire mul_32s_32s_32_2_1_U11_n_24;
  wire mul_32s_32s_32_2_1_U11_n_25;
  wire mul_32s_32s_32_2_1_U11_n_26;
  wire mul_32s_32s_32_2_1_U11_n_27;
  wire mul_32s_32s_32_2_1_U11_n_28;
  wire mul_32s_32s_32_2_1_U11_n_29;
  wire mul_32s_32s_32_2_1_U11_n_30;
  wire mul_32s_32s_32_2_1_U11_n_31;
  wire mul_32s_32s_32_2_1_U1_n_17;
  wire mul_32s_32s_32_2_1_U1_n_18;
  wire mul_32s_32s_32_2_1_U1_n_19;
  wire mul_32s_32s_32_2_1_U1_n_20;
  wire mul_32s_32s_32_2_1_U1_n_21;
  wire mul_32s_32s_32_2_1_U1_n_22;
  wire mul_32s_32s_32_2_1_U1_n_23;
  wire mul_32s_32s_32_2_1_U1_n_24;
  wire mul_32s_32s_32_2_1_U1_n_25;
  wire mul_32s_32s_32_2_1_U1_n_26;
  wire mul_32s_32s_32_2_1_U1_n_27;
  wire mul_32s_32s_32_2_1_U1_n_28;
  wire mul_32s_32s_32_2_1_U1_n_29;
  wire mul_32s_32s_32_2_1_U1_n_30;
  wire mul_32s_32s_32_2_1_U1_n_31;
  wire mul_32s_32s_32_2_1_U1_n_32;
  wire mul_32s_32s_32_2_1_U2_n_17;
  wire mul_32s_32s_32_2_1_U2_n_18;
  wire mul_32s_32s_32_2_1_U2_n_19;
  wire mul_32s_32s_32_2_1_U2_n_20;
  wire mul_32s_32s_32_2_1_U2_n_21;
  wire mul_32s_32s_32_2_1_U2_n_22;
  wire mul_32s_32s_32_2_1_U2_n_23;
  wire mul_32s_32s_32_2_1_U2_n_24;
  wire mul_32s_32s_32_2_1_U2_n_25;
  wire mul_32s_32s_32_2_1_U2_n_26;
  wire mul_32s_32s_32_2_1_U2_n_27;
  wire mul_32s_32s_32_2_1_U2_n_28;
  wire mul_32s_32s_32_2_1_U2_n_29;
  wire mul_32s_32s_32_2_1_U2_n_30;
  wire mul_32s_32s_32_2_1_U2_n_31;
  wire mul_32s_32s_32_2_1_U2_n_32;
  wire mul_32s_32s_32_2_1_U3_n_16;
  wire mul_32s_32s_32_2_1_U3_n_17;
  wire mul_32s_32s_32_2_1_U3_n_18;
  wire mul_32s_32s_32_2_1_U3_n_19;
  wire mul_32s_32s_32_2_1_U3_n_20;
  wire mul_32s_32s_32_2_1_U3_n_21;
  wire mul_32s_32s_32_2_1_U3_n_22;
  wire mul_32s_32s_32_2_1_U3_n_23;
  wire mul_32s_32s_32_2_1_U3_n_24;
  wire mul_32s_32s_32_2_1_U3_n_25;
  wire mul_32s_32s_32_2_1_U3_n_26;
  wire mul_32s_32s_32_2_1_U3_n_27;
  wire mul_32s_32s_32_2_1_U3_n_28;
  wire mul_32s_32s_32_2_1_U3_n_29;
  wire mul_32s_32s_32_2_1_U3_n_30;
  wire mul_32s_32s_32_2_1_U3_n_31;
  wire mul_32s_32s_32_2_1_U4_n_16;
  wire mul_32s_32s_32_2_1_U4_n_17;
  wire mul_32s_32s_32_2_1_U4_n_18;
  wire mul_32s_32s_32_2_1_U4_n_19;
  wire mul_32s_32s_32_2_1_U4_n_20;
  wire mul_32s_32s_32_2_1_U4_n_21;
  wire mul_32s_32s_32_2_1_U4_n_22;
  wire mul_32s_32s_32_2_1_U4_n_23;
  wire mul_32s_32s_32_2_1_U4_n_24;
  wire mul_32s_32s_32_2_1_U4_n_25;
  wire mul_32s_32s_32_2_1_U4_n_26;
  wire mul_32s_32s_32_2_1_U4_n_27;
  wire mul_32s_32s_32_2_1_U4_n_28;
  wire mul_32s_32s_32_2_1_U4_n_29;
  wire mul_32s_32s_32_2_1_U4_n_30;
  wire mul_32s_32s_32_2_1_U4_n_31;
  wire mul_32s_32s_32_2_1_U5_n_16;
  wire mul_32s_32s_32_2_1_U5_n_17;
  wire mul_32s_32s_32_2_1_U5_n_18;
  wire mul_32s_32s_32_2_1_U5_n_19;
  wire mul_32s_32s_32_2_1_U5_n_20;
  wire mul_32s_32s_32_2_1_U5_n_21;
  wire mul_32s_32s_32_2_1_U5_n_22;
  wire mul_32s_32s_32_2_1_U5_n_23;
  wire mul_32s_32s_32_2_1_U5_n_24;
  wire mul_32s_32s_32_2_1_U5_n_25;
  wire mul_32s_32s_32_2_1_U5_n_26;
  wire mul_32s_32s_32_2_1_U5_n_27;
  wire mul_32s_32s_32_2_1_U5_n_28;
  wire mul_32s_32s_32_2_1_U5_n_29;
  wire mul_32s_32s_32_2_1_U5_n_30;
  wire mul_32s_32s_32_2_1_U5_n_31;
  wire mul_32s_32s_32_2_1_U6_n_16;
  wire mul_32s_32s_32_2_1_U6_n_17;
  wire mul_32s_32s_32_2_1_U6_n_18;
  wire mul_32s_32s_32_2_1_U6_n_19;
  wire mul_32s_32s_32_2_1_U6_n_20;
  wire mul_32s_32s_32_2_1_U6_n_21;
  wire mul_32s_32s_32_2_1_U6_n_22;
  wire mul_32s_32s_32_2_1_U6_n_23;
  wire mul_32s_32s_32_2_1_U6_n_24;
  wire mul_32s_32s_32_2_1_U6_n_25;
  wire mul_32s_32s_32_2_1_U6_n_26;
  wire mul_32s_32s_32_2_1_U6_n_27;
  wire mul_32s_32s_32_2_1_U6_n_28;
  wire mul_32s_32s_32_2_1_U6_n_29;
  wire mul_32s_32s_32_2_1_U6_n_30;
  wire mul_32s_32s_32_2_1_U6_n_31;
  wire mul_32s_32s_32_2_1_U7_n_16;
  wire mul_32s_32s_32_2_1_U7_n_17;
  wire mul_32s_32s_32_2_1_U7_n_18;
  wire mul_32s_32s_32_2_1_U7_n_19;
  wire mul_32s_32s_32_2_1_U7_n_20;
  wire mul_32s_32s_32_2_1_U7_n_21;
  wire mul_32s_32s_32_2_1_U7_n_22;
  wire mul_32s_32s_32_2_1_U7_n_23;
  wire mul_32s_32s_32_2_1_U7_n_24;
  wire mul_32s_32s_32_2_1_U7_n_25;
  wire mul_32s_32s_32_2_1_U7_n_26;
  wire mul_32s_32s_32_2_1_U7_n_27;
  wire mul_32s_32s_32_2_1_U7_n_28;
  wire mul_32s_32s_32_2_1_U7_n_29;
  wire mul_32s_32s_32_2_1_U7_n_30;
  wire mul_32s_32s_32_2_1_U7_n_31;
  wire mul_32s_32s_32_2_1_U8_n_16;
  wire mul_32s_32s_32_2_1_U8_n_17;
  wire mul_32s_32s_32_2_1_U8_n_18;
  wire mul_32s_32s_32_2_1_U8_n_19;
  wire mul_32s_32s_32_2_1_U8_n_20;
  wire mul_32s_32s_32_2_1_U8_n_21;
  wire mul_32s_32s_32_2_1_U8_n_22;
  wire mul_32s_32s_32_2_1_U8_n_23;
  wire mul_32s_32s_32_2_1_U8_n_24;
  wire mul_32s_32s_32_2_1_U8_n_25;
  wire mul_32s_32s_32_2_1_U8_n_26;
  wire mul_32s_32s_32_2_1_U8_n_27;
  wire mul_32s_32s_32_2_1_U8_n_28;
  wire mul_32s_32s_32_2_1_U8_n_29;
  wire mul_32s_32s_32_2_1_U8_n_30;
  wire mul_32s_32s_32_2_1_U8_n_31;
  wire mul_32s_32s_32_2_1_U9_n_17;
  wire mul_32s_32s_32_2_1_U9_n_18;
  wire mul_32s_32s_32_2_1_U9_n_19;
  wire mul_32s_32s_32_2_1_U9_n_20;
  wire mul_32s_32s_32_2_1_U9_n_21;
  wire mul_32s_32s_32_2_1_U9_n_22;
  wire mul_32s_32s_32_2_1_U9_n_23;
  wire mul_32s_32s_32_2_1_U9_n_24;
  wire mul_32s_32s_32_2_1_U9_n_25;
  wire mul_32s_32s_32_2_1_U9_n_26;
  wire mul_32s_32s_32_2_1_U9_n_27;
  wire mul_32s_32s_32_2_1_U9_n_28;
  wire mul_32s_32s_32_2_1_U9_n_29;
  wire mul_32s_32s_32_2_1_U9_n_30;
  wire mul_32s_32s_32_2_1_U9_n_31;
  wire mul_32s_32s_32_2_1_U9_n_32;
  wire [31:0]mul_ln28_10_reg_644;
  wire [31:0]mul_ln28_1_reg_654;
  wire [31:0]mul_ln28_2_reg_659;
  wire [31:0]mul_ln28_3_reg_664;
  wire [31:0]mul_ln28_4_reg_669;
  wire [31:0]mul_ln28_5_reg_674;
  wire [31:0]mul_ln28_6_reg_679;
  wire [31:0]mul_ln28_7_reg_684;
  wire [31:0]mul_ln28_8_reg_634;
  wire [31:0]mul_ln28_9_reg_639;
  wire [31:0]mul_ln28_reg_649;
  wire [31:0]n32Temp_reg_577;
  wire n32XferCnt_fu_1100;
  wire \n32XferCnt_fu_110[0]_i_4_n_0 ;
  wire [30:0]n32XferCnt_fu_110_reg;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_0 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_1 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_2 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_3 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_4 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_5 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_6 ;
  wire \n32XferCnt_fu_110_reg[0]_i_3_n_7 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[12]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[16]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[20]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[24]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[28]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[28]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[28]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[28]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[28]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[4]_i_1_n_7 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_0 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_1 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_2 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_3 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_4 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_5 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_6 ;
  wire \n32XferCnt_fu_110_reg[8]_i_1_n_7 ;
  wire p_5_in;
  wire [30:0]\p_cast_reg_496_reg[30]_0 ;
  wire [30:0]\p_cast_reg_496_reg[30]_1 ;
  wire pop;
  wire [31:0]q00;
  wire ready_for_outstanding;
  wire task_ap_ready;
  wire [3:3]\NLW_add_ln28_2_reg_699_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_add_ln28_7_reg_689_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_add_ln28_8_reg_704_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_add_ln28_9_reg_709_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_add_ln28_reg_694_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:0]NLW_icmp_ln16_fu_277_p2_carry_O_UNCONNECTED;
  wire [3:0]NLW_icmp_ln16_fu_277_p2_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_icmp_ln16_fu_277_p2_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_icmp_ln16_fu_277_p2_carry__1_O_UNCONNECTED;
  wire [3:2]\NLW_n32XferCnt_fu_110_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_n32XferCnt_fu_110_reg[28]_i_1_O_UNCONNECTED ;

  (* HLUTNM = "lutpair8" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[11]_i_2 
       (.I0(mul_ln28_4_reg_669[10]),
        .I1(mul_ln28_2_reg_659[10]),
        .I2(mul_ln28_3_reg_664[10]),
        .O(\add_ln28_2_reg_699[11]_i_2_n_0 ));
  (* HLUTNM = "lutpair7" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[11]_i_3 
       (.I0(mul_ln28_4_reg_669[9]),
        .I1(mul_ln28_2_reg_659[9]),
        .I2(mul_ln28_3_reg_664[9]),
        .O(\add_ln28_2_reg_699[11]_i_3_n_0 ));
  (* HLUTNM = "lutpair6" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[11]_i_4 
       (.I0(mul_ln28_4_reg_669[8]),
        .I1(mul_ln28_2_reg_659[8]),
        .I2(mul_ln28_3_reg_664[8]),
        .O(\add_ln28_2_reg_699[11]_i_4_n_0 ));
  (* HLUTNM = "lutpair5" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[11]_i_5 
       (.I0(mul_ln28_4_reg_669[7]),
        .I1(mul_ln28_2_reg_659[7]),
        .I2(mul_ln28_3_reg_664[7]),
        .O(\add_ln28_2_reg_699[11]_i_5_n_0 ));
  (* HLUTNM = "lutpair9" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[11]_i_6 
       (.I0(mul_ln28_4_reg_669[11]),
        .I1(mul_ln28_2_reg_659[11]),
        .I2(mul_ln28_3_reg_664[11]),
        .I3(\add_ln28_2_reg_699[11]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[11]_i_6_n_0 ));
  (* HLUTNM = "lutpair8" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[11]_i_7 
       (.I0(mul_ln28_4_reg_669[10]),
        .I1(mul_ln28_2_reg_659[10]),
        .I2(mul_ln28_3_reg_664[10]),
        .I3(\add_ln28_2_reg_699[11]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[11]_i_7_n_0 ));
  (* HLUTNM = "lutpair7" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[11]_i_8 
       (.I0(mul_ln28_4_reg_669[9]),
        .I1(mul_ln28_2_reg_659[9]),
        .I2(mul_ln28_3_reg_664[9]),
        .I3(\add_ln28_2_reg_699[11]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[11]_i_8_n_0 ));
  (* HLUTNM = "lutpair6" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[11]_i_9 
       (.I0(mul_ln28_4_reg_669[8]),
        .I1(mul_ln28_2_reg_659[8]),
        .I2(mul_ln28_3_reg_664[8]),
        .I3(\add_ln28_2_reg_699[11]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[11]_i_9_n_0 ));
  (* HLUTNM = "lutpair12" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[15]_i_2 
       (.I0(mul_ln28_4_reg_669[14]),
        .I1(mul_ln28_2_reg_659[14]),
        .I2(mul_ln28_3_reg_664[14]),
        .O(\add_ln28_2_reg_699[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair11" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[15]_i_3 
       (.I0(mul_ln28_4_reg_669[13]),
        .I1(mul_ln28_2_reg_659[13]),
        .I2(mul_ln28_3_reg_664[13]),
        .O(\add_ln28_2_reg_699[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair10" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[15]_i_4 
       (.I0(mul_ln28_4_reg_669[12]),
        .I1(mul_ln28_2_reg_659[12]),
        .I2(mul_ln28_3_reg_664[12]),
        .O(\add_ln28_2_reg_699[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair9" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[15]_i_5 
       (.I0(mul_ln28_4_reg_669[11]),
        .I1(mul_ln28_2_reg_659[11]),
        .I2(mul_ln28_3_reg_664[11]),
        .O(\add_ln28_2_reg_699[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair13" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[15]_i_6 
       (.I0(mul_ln28_4_reg_669[15]),
        .I1(mul_ln28_2_reg_659[15]),
        .I2(mul_ln28_3_reg_664[15]),
        .I3(\add_ln28_2_reg_699[15]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair12" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[15]_i_7 
       (.I0(mul_ln28_4_reg_669[14]),
        .I1(mul_ln28_2_reg_659[14]),
        .I2(mul_ln28_3_reg_664[14]),
        .I3(\add_ln28_2_reg_699[15]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair11" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[15]_i_8 
       (.I0(mul_ln28_4_reg_669[13]),
        .I1(mul_ln28_2_reg_659[13]),
        .I2(mul_ln28_3_reg_664[13]),
        .I3(\add_ln28_2_reg_699[15]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair10" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[15]_i_9 
       (.I0(mul_ln28_4_reg_669[12]),
        .I1(mul_ln28_2_reg_659[12]),
        .I2(mul_ln28_3_reg_664[12]),
        .I3(\add_ln28_2_reg_699[15]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair16" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[19]_i_2 
       (.I0(mul_ln28_4_reg_669[18]),
        .I1(mul_ln28_2_reg_659[18]),
        .I2(mul_ln28_3_reg_664[18]),
        .O(\add_ln28_2_reg_699[19]_i_2_n_0 ));
  (* HLUTNM = "lutpair15" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[19]_i_3 
       (.I0(mul_ln28_4_reg_669[17]),
        .I1(mul_ln28_2_reg_659[17]),
        .I2(mul_ln28_3_reg_664[17]),
        .O(\add_ln28_2_reg_699[19]_i_3_n_0 ));
  (* HLUTNM = "lutpair14" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[19]_i_4 
       (.I0(mul_ln28_4_reg_669[16]),
        .I1(mul_ln28_2_reg_659[16]),
        .I2(mul_ln28_3_reg_664[16]),
        .O(\add_ln28_2_reg_699[19]_i_4_n_0 ));
  (* HLUTNM = "lutpair13" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[19]_i_5 
       (.I0(mul_ln28_4_reg_669[15]),
        .I1(mul_ln28_2_reg_659[15]),
        .I2(mul_ln28_3_reg_664[15]),
        .O(\add_ln28_2_reg_699[19]_i_5_n_0 ));
  (* HLUTNM = "lutpair17" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[19]_i_6 
       (.I0(mul_ln28_4_reg_669[19]),
        .I1(mul_ln28_2_reg_659[19]),
        .I2(mul_ln28_3_reg_664[19]),
        .I3(\add_ln28_2_reg_699[19]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[19]_i_6_n_0 ));
  (* HLUTNM = "lutpair16" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[19]_i_7 
       (.I0(mul_ln28_4_reg_669[18]),
        .I1(mul_ln28_2_reg_659[18]),
        .I2(mul_ln28_3_reg_664[18]),
        .I3(\add_ln28_2_reg_699[19]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[19]_i_7_n_0 ));
  (* HLUTNM = "lutpair15" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[19]_i_8 
       (.I0(mul_ln28_4_reg_669[17]),
        .I1(mul_ln28_2_reg_659[17]),
        .I2(mul_ln28_3_reg_664[17]),
        .I3(\add_ln28_2_reg_699[19]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[19]_i_8_n_0 ));
  (* HLUTNM = "lutpair14" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[19]_i_9 
       (.I0(mul_ln28_4_reg_669[16]),
        .I1(mul_ln28_2_reg_659[16]),
        .I2(mul_ln28_3_reg_664[16]),
        .I3(\add_ln28_2_reg_699[19]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[19]_i_9_n_0 ));
  (* HLUTNM = "lutpair20" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[23]_i_2 
       (.I0(mul_ln28_4_reg_669[22]),
        .I1(mul_ln28_2_reg_659[22]),
        .I2(mul_ln28_3_reg_664[22]),
        .O(\add_ln28_2_reg_699[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair19" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[23]_i_3 
       (.I0(mul_ln28_4_reg_669[21]),
        .I1(mul_ln28_2_reg_659[21]),
        .I2(mul_ln28_3_reg_664[21]),
        .O(\add_ln28_2_reg_699[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair18" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[23]_i_4 
       (.I0(mul_ln28_4_reg_669[20]),
        .I1(mul_ln28_2_reg_659[20]),
        .I2(mul_ln28_3_reg_664[20]),
        .O(\add_ln28_2_reg_699[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair17" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[23]_i_5 
       (.I0(mul_ln28_4_reg_669[19]),
        .I1(mul_ln28_2_reg_659[19]),
        .I2(mul_ln28_3_reg_664[19]),
        .O(\add_ln28_2_reg_699[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair21" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[23]_i_6 
       (.I0(mul_ln28_4_reg_669[23]),
        .I1(mul_ln28_2_reg_659[23]),
        .I2(mul_ln28_3_reg_664[23]),
        .I3(\add_ln28_2_reg_699[23]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair20" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[23]_i_7 
       (.I0(mul_ln28_4_reg_669[22]),
        .I1(mul_ln28_2_reg_659[22]),
        .I2(mul_ln28_3_reg_664[22]),
        .I3(\add_ln28_2_reg_699[23]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair19" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[23]_i_8 
       (.I0(mul_ln28_4_reg_669[21]),
        .I1(mul_ln28_2_reg_659[21]),
        .I2(mul_ln28_3_reg_664[21]),
        .I3(\add_ln28_2_reg_699[23]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair18" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[23]_i_9 
       (.I0(mul_ln28_4_reg_669[20]),
        .I1(mul_ln28_2_reg_659[20]),
        .I2(mul_ln28_3_reg_664[20]),
        .I3(\add_ln28_2_reg_699[23]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[23]_i_9_n_0 ));
  (* HLUTNM = "lutpair24" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[27]_i_2 
       (.I0(mul_ln28_4_reg_669[26]),
        .I1(mul_ln28_2_reg_659[26]),
        .I2(mul_ln28_3_reg_664[26]),
        .O(\add_ln28_2_reg_699[27]_i_2_n_0 ));
  (* HLUTNM = "lutpair23" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[27]_i_3 
       (.I0(mul_ln28_4_reg_669[25]),
        .I1(mul_ln28_2_reg_659[25]),
        .I2(mul_ln28_3_reg_664[25]),
        .O(\add_ln28_2_reg_699[27]_i_3_n_0 ));
  (* HLUTNM = "lutpair22" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[27]_i_4 
       (.I0(mul_ln28_4_reg_669[24]),
        .I1(mul_ln28_2_reg_659[24]),
        .I2(mul_ln28_3_reg_664[24]),
        .O(\add_ln28_2_reg_699[27]_i_4_n_0 ));
  (* HLUTNM = "lutpair21" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[27]_i_5 
       (.I0(mul_ln28_4_reg_669[23]),
        .I1(mul_ln28_2_reg_659[23]),
        .I2(mul_ln28_3_reg_664[23]),
        .O(\add_ln28_2_reg_699[27]_i_5_n_0 ));
  (* HLUTNM = "lutpair25" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[27]_i_6 
       (.I0(mul_ln28_4_reg_669[27]),
        .I1(mul_ln28_2_reg_659[27]),
        .I2(mul_ln28_3_reg_664[27]),
        .I3(\add_ln28_2_reg_699[27]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[27]_i_6_n_0 ));
  (* HLUTNM = "lutpair24" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[27]_i_7 
       (.I0(mul_ln28_4_reg_669[26]),
        .I1(mul_ln28_2_reg_659[26]),
        .I2(mul_ln28_3_reg_664[26]),
        .I3(\add_ln28_2_reg_699[27]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[27]_i_7_n_0 ));
  (* HLUTNM = "lutpair23" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[27]_i_8 
       (.I0(mul_ln28_4_reg_669[25]),
        .I1(mul_ln28_2_reg_659[25]),
        .I2(mul_ln28_3_reg_664[25]),
        .I3(\add_ln28_2_reg_699[27]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[27]_i_8_n_0 ));
  (* HLUTNM = "lutpair22" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[27]_i_9 
       (.I0(mul_ln28_4_reg_669[24]),
        .I1(mul_ln28_2_reg_659[24]),
        .I2(mul_ln28_3_reg_664[24]),
        .I3(\add_ln28_2_reg_699[27]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[27]_i_9_n_0 ));
  (* HLUTNM = "lutpair27" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[31]_i_2 
       (.I0(mul_ln28_4_reg_669[29]),
        .I1(mul_ln28_2_reg_659[29]),
        .I2(mul_ln28_3_reg_664[29]),
        .O(\add_ln28_2_reg_699[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair26" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[31]_i_3 
       (.I0(mul_ln28_4_reg_669[28]),
        .I1(mul_ln28_2_reg_659[28]),
        .I2(mul_ln28_3_reg_664[28]),
        .O(\add_ln28_2_reg_699[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair25" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[31]_i_4 
       (.I0(mul_ln28_4_reg_669[27]),
        .I1(mul_ln28_2_reg_659[27]),
        .I2(mul_ln28_3_reg_664[27]),
        .O(\add_ln28_2_reg_699[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h17E8E817E81717E8)) 
    \add_ln28_2_reg_699[31]_i_5 
       (.I0(mul_ln28_3_reg_664[30]),
        .I1(mul_ln28_2_reg_659[30]),
        .I2(mul_ln28_4_reg_669[30]),
        .I3(mul_ln28_2_reg_659[31]),
        .I4(mul_ln28_4_reg_669[31]),
        .I5(mul_ln28_3_reg_664[31]),
        .O(\add_ln28_2_reg_699[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[31]_i_6 
       (.I0(\add_ln28_2_reg_699[31]_i_2_n_0 ),
        .I1(mul_ln28_2_reg_659[30]),
        .I2(mul_ln28_4_reg_669[30]),
        .I3(mul_ln28_3_reg_664[30]),
        .O(\add_ln28_2_reg_699[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair27" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[31]_i_7 
       (.I0(mul_ln28_4_reg_669[29]),
        .I1(mul_ln28_2_reg_659[29]),
        .I2(mul_ln28_3_reg_664[29]),
        .I3(\add_ln28_2_reg_699[31]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair26" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[31]_i_8 
       (.I0(mul_ln28_4_reg_669[28]),
        .I1(mul_ln28_2_reg_659[28]),
        .I2(mul_ln28_3_reg_664[28]),
        .I3(\add_ln28_2_reg_699[31]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[3]_i_2 
       (.I0(mul_ln28_4_reg_669[2]),
        .I1(mul_ln28_2_reg_659[2]),
        .I2(mul_ln28_3_reg_664[2]),
        .O(\add_ln28_2_reg_699[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[3]_i_3 
       (.I0(mul_ln28_4_reg_669[1]),
        .I1(mul_ln28_2_reg_659[1]),
        .I2(mul_ln28_3_reg_664[1]),
        .O(\add_ln28_2_reg_699[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[3]_i_4 
       (.I0(mul_ln28_4_reg_669[0]),
        .I1(mul_ln28_2_reg_659[0]),
        .I2(mul_ln28_3_reg_664[0]),
        .O(\add_ln28_2_reg_699[3]_i_4_n_0 ));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[3]_i_5 
       (.I0(mul_ln28_4_reg_669[3]),
        .I1(mul_ln28_2_reg_659[3]),
        .I2(mul_ln28_3_reg_664[3]),
        .I3(\add_ln28_2_reg_699[3]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[3]_i_5_n_0 ));
  (* HLUTNM = "lutpair0" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[3]_i_6 
       (.I0(mul_ln28_4_reg_669[2]),
        .I1(mul_ln28_2_reg_659[2]),
        .I2(mul_ln28_3_reg_664[2]),
        .I3(\add_ln28_2_reg_699[3]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[3]_i_7 
       (.I0(mul_ln28_4_reg_669[1]),
        .I1(mul_ln28_2_reg_659[1]),
        .I2(mul_ln28_3_reg_664[1]),
        .I3(\add_ln28_2_reg_699[3]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[3]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_2_reg_699[3]_i_8 
       (.I0(mul_ln28_4_reg_669[0]),
        .I1(mul_ln28_2_reg_659[0]),
        .I2(mul_ln28_3_reg_664[0]),
        .O(\add_ln28_2_reg_699[3]_i_8_n_0 ));
  (* HLUTNM = "lutpair4" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[7]_i_2 
       (.I0(mul_ln28_4_reg_669[6]),
        .I1(mul_ln28_2_reg_659[6]),
        .I2(mul_ln28_3_reg_664[6]),
        .O(\add_ln28_2_reg_699[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[7]_i_3 
       (.I0(mul_ln28_4_reg_669[5]),
        .I1(mul_ln28_2_reg_659[5]),
        .I2(mul_ln28_3_reg_664[5]),
        .O(\add_ln28_2_reg_699[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[7]_i_4 
       (.I0(mul_ln28_4_reg_669[4]),
        .I1(mul_ln28_2_reg_659[4]),
        .I2(mul_ln28_3_reg_664[4]),
        .O(\add_ln28_2_reg_699[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_2_reg_699[7]_i_5 
       (.I0(mul_ln28_4_reg_669[3]),
        .I1(mul_ln28_2_reg_659[3]),
        .I2(mul_ln28_3_reg_664[3]),
        .O(\add_ln28_2_reg_699[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair5" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[7]_i_6 
       (.I0(mul_ln28_4_reg_669[7]),
        .I1(mul_ln28_2_reg_659[7]),
        .I2(mul_ln28_3_reg_664[7]),
        .I3(\add_ln28_2_reg_699[7]_i_2_n_0 ),
        .O(\add_ln28_2_reg_699[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair4" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[7]_i_7 
       (.I0(mul_ln28_4_reg_669[6]),
        .I1(mul_ln28_2_reg_659[6]),
        .I2(mul_ln28_3_reg_664[6]),
        .I3(\add_ln28_2_reg_699[7]_i_3_n_0 ),
        .O(\add_ln28_2_reg_699[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair3" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[7]_i_8 
       (.I0(mul_ln28_4_reg_669[5]),
        .I1(mul_ln28_2_reg_659[5]),
        .I2(mul_ln28_3_reg_664[5]),
        .I3(\add_ln28_2_reg_699[7]_i_4_n_0 ),
        .O(\add_ln28_2_reg_699[7]_i_8_n_0 ));
  (* HLUTNM = "lutpair2" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_2_reg_699[7]_i_9 
       (.I0(mul_ln28_4_reg_669[4]),
        .I1(mul_ln28_2_reg_659[4]),
        .I2(mul_ln28_3_reg_664[4]),
        .I3(\add_ln28_2_reg_699[7]_i_5_n_0 ),
        .O(\add_ln28_2_reg_699[7]_i_9_n_0 ));
  FDRE \add_ln28_2_reg_699_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[0]),
        .Q(add_ln28_2_reg_699[0]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[10]),
        .Q(add_ln28_2_reg_699[10]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[11]),
        .Q(add_ln28_2_reg_699[11]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[11]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[7]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[11]_i_1_n_0 ,\add_ln28_2_reg_699_reg[11]_i_1_n_1 ,\add_ln28_2_reg_699_reg[11]_i_1_n_2 ,\add_ln28_2_reg_699_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[11]_i_2_n_0 ,\add_ln28_2_reg_699[11]_i_3_n_0 ,\add_ln28_2_reg_699[11]_i_4_n_0 ,\add_ln28_2_reg_699[11]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[11:8]),
        .S({\add_ln28_2_reg_699[11]_i_6_n_0 ,\add_ln28_2_reg_699[11]_i_7_n_0 ,\add_ln28_2_reg_699[11]_i_8_n_0 ,\add_ln28_2_reg_699[11]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[12]),
        .Q(add_ln28_2_reg_699[12]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[13]),
        .Q(add_ln28_2_reg_699[13]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[14]),
        .Q(add_ln28_2_reg_699[14]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[15]),
        .Q(add_ln28_2_reg_699[15]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[15]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[11]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[15]_i_1_n_0 ,\add_ln28_2_reg_699_reg[15]_i_1_n_1 ,\add_ln28_2_reg_699_reg[15]_i_1_n_2 ,\add_ln28_2_reg_699_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[15]_i_2_n_0 ,\add_ln28_2_reg_699[15]_i_3_n_0 ,\add_ln28_2_reg_699[15]_i_4_n_0 ,\add_ln28_2_reg_699[15]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[15:12]),
        .S({\add_ln28_2_reg_699[15]_i_6_n_0 ,\add_ln28_2_reg_699[15]_i_7_n_0 ,\add_ln28_2_reg_699[15]_i_8_n_0 ,\add_ln28_2_reg_699[15]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[16]),
        .Q(add_ln28_2_reg_699[16]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[17]),
        .Q(add_ln28_2_reg_699[17]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[18]),
        .Q(add_ln28_2_reg_699[18]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[19]),
        .Q(add_ln28_2_reg_699[19]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[19]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[15]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[19]_i_1_n_0 ,\add_ln28_2_reg_699_reg[19]_i_1_n_1 ,\add_ln28_2_reg_699_reg[19]_i_1_n_2 ,\add_ln28_2_reg_699_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[19]_i_2_n_0 ,\add_ln28_2_reg_699[19]_i_3_n_0 ,\add_ln28_2_reg_699[19]_i_4_n_0 ,\add_ln28_2_reg_699[19]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[19:16]),
        .S({\add_ln28_2_reg_699[19]_i_6_n_0 ,\add_ln28_2_reg_699[19]_i_7_n_0 ,\add_ln28_2_reg_699[19]_i_8_n_0 ,\add_ln28_2_reg_699[19]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[1]),
        .Q(add_ln28_2_reg_699[1]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[20]),
        .Q(add_ln28_2_reg_699[20]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[21]),
        .Q(add_ln28_2_reg_699[21]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[22]),
        .Q(add_ln28_2_reg_699[22]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[23]),
        .Q(add_ln28_2_reg_699[23]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[23]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[19]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[23]_i_1_n_0 ,\add_ln28_2_reg_699_reg[23]_i_1_n_1 ,\add_ln28_2_reg_699_reg[23]_i_1_n_2 ,\add_ln28_2_reg_699_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[23]_i_2_n_0 ,\add_ln28_2_reg_699[23]_i_3_n_0 ,\add_ln28_2_reg_699[23]_i_4_n_0 ,\add_ln28_2_reg_699[23]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[23:20]),
        .S({\add_ln28_2_reg_699[23]_i_6_n_0 ,\add_ln28_2_reg_699[23]_i_7_n_0 ,\add_ln28_2_reg_699[23]_i_8_n_0 ,\add_ln28_2_reg_699[23]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[24]),
        .Q(add_ln28_2_reg_699[24]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[25]),
        .Q(add_ln28_2_reg_699[25]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[26]),
        .Q(add_ln28_2_reg_699[26]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[27]),
        .Q(add_ln28_2_reg_699[27]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[27]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[23]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[27]_i_1_n_0 ,\add_ln28_2_reg_699_reg[27]_i_1_n_1 ,\add_ln28_2_reg_699_reg[27]_i_1_n_2 ,\add_ln28_2_reg_699_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[27]_i_2_n_0 ,\add_ln28_2_reg_699[27]_i_3_n_0 ,\add_ln28_2_reg_699[27]_i_4_n_0 ,\add_ln28_2_reg_699[27]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[27:24]),
        .S({\add_ln28_2_reg_699[27]_i_6_n_0 ,\add_ln28_2_reg_699[27]_i_7_n_0 ,\add_ln28_2_reg_699[27]_i_8_n_0 ,\add_ln28_2_reg_699[27]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[28]),
        .Q(add_ln28_2_reg_699[28]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[29]),
        .Q(add_ln28_2_reg_699[29]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[2]),
        .Q(add_ln28_2_reg_699[2]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[30]),
        .Q(add_ln28_2_reg_699[30]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[31]),
        .Q(add_ln28_2_reg_699[31]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[31]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[27]_i_1_n_0 ),
        .CO({\NLW_add_ln28_2_reg_699_reg[31]_i_1_CO_UNCONNECTED [3],\add_ln28_2_reg_699_reg[31]_i_1_n_1 ,\add_ln28_2_reg_699_reg[31]_i_1_n_2 ,\add_ln28_2_reg_699_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\add_ln28_2_reg_699[31]_i_2_n_0 ,\add_ln28_2_reg_699[31]_i_3_n_0 ,\add_ln28_2_reg_699[31]_i_4_n_0 }),
        .O(add_ln28_2_fu_461_p2[31:28]),
        .S({\add_ln28_2_reg_699[31]_i_5_n_0 ,\add_ln28_2_reg_699[31]_i_6_n_0 ,\add_ln28_2_reg_699[31]_i_7_n_0 ,\add_ln28_2_reg_699[31]_i_8_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[3]),
        .Q(add_ln28_2_reg_699[3]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\add_ln28_2_reg_699_reg[3]_i_1_n_0 ,\add_ln28_2_reg_699_reg[3]_i_1_n_1 ,\add_ln28_2_reg_699_reg[3]_i_1_n_2 ,\add_ln28_2_reg_699_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[3]_i_2_n_0 ,\add_ln28_2_reg_699[3]_i_3_n_0 ,\add_ln28_2_reg_699[3]_i_4_n_0 ,1'b0}),
        .O(add_ln28_2_fu_461_p2[3:0]),
        .S({\add_ln28_2_reg_699[3]_i_5_n_0 ,\add_ln28_2_reg_699[3]_i_6_n_0 ,\add_ln28_2_reg_699[3]_i_7_n_0 ,\add_ln28_2_reg_699[3]_i_8_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[4]),
        .Q(add_ln28_2_reg_699[4]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[5]),
        .Q(add_ln28_2_reg_699[5]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[6]),
        .Q(add_ln28_2_reg_699[6]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[7]),
        .Q(add_ln28_2_reg_699[7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_2_reg_699_reg[7]_i_1 
       (.CI(\add_ln28_2_reg_699_reg[3]_i_1_n_0 ),
        .CO({\add_ln28_2_reg_699_reg[7]_i_1_n_0 ,\add_ln28_2_reg_699_reg[7]_i_1_n_1 ,\add_ln28_2_reg_699_reg[7]_i_1_n_2 ,\add_ln28_2_reg_699_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_2_reg_699[7]_i_2_n_0 ,\add_ln28_2_reg_699[7]_i_3_n_0 ,\add_ln28_2_reg_699[7]_i_4_n_0 ,\add_ln28_2_reg_699[7]_i_5_n_0 }),
        .O(add_ln28_2_fu_461_p2[7:4]),
        .S({\add_ln28_2_reg_699[7]_i_6_n_0 ,\add_ln28_2_reg_699[7]_i_7_n_0 ,\add_ln28_2_reg_699[7]_i_8_n_0 ,\add_ln28_2_reg_699[7]_i_9_n_0 }));
  FDRE \add_ln28_2_reg_699_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[8]),
        .Q(add_ln28_2_reg_699[8]),
        .R(1'b0));
  FDRE \add_ln28_2_reg_699_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_2_fu_461_p2[9]),
        .Q(add_ln28_2_reg_699[9]),
        .R(1'b0));
  (* HLUTNM = "lutpair36" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[11]_i_2 
       (.I0(mul_ln28_10_reg_644[10]),
        .I1(mul_ln28_8_reg_634[10]),
        .I2(mul_ln28_9_reg_639[10]),
        .O(\add_ln28_7_reg_689[11]_i_2_n_0 ));
  (* HLUTNM = "lutpair35" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[11]_i_3 
       (.I0(mul_ln28_10_reg_644[9]),
        .I1(mul_ln28_8_reg_634[9]),
        .I2(mul_ln28_9_reg_639[9]),
        .O(\add_ln28_7_reg_689[11]_i_3_n_0 ));
  (* HLUTNM = "lutpair34" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[11]_i_4 
       (.I0(mul_ln28_10_reg_644[8]),
        .I1(mul_ln28_8_reg_634[8]),
        .I2(mul_ln28_9_reg_639[8]),
        .O(\add_ln28_7_reg_689[11]_i_4_n_0 ));
  (* HLUTNM = "lutpair33" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[11]_i_5 
       (.I0(mul_ln28_10_reg_644[7]),
        .I1(mul_ln28_8_reg_634[7]),
        .I2(mul_ln28_9_reg_639[7]),
        .O(\add_ln28_7_reg_689[11]_i_5_n_0 ));
  (* HLUTNM = "lutpair37" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[11]_i_6 
       (.I0(mul_ln28_10_reg_644[11]),
        .I1(mul_ln28_8_reg_634[11]),
        .I2(mul_ln28_9_reg_639[11]),
        .I3(\add_ln28_7_reg_689[11]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[11]_i_6_n_0 ));
  (* HLUTNM = "lutpair36" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[11]_i_7 
       (.I0(mul_ln28_10_reg_644[10]),
        .I1(mul_ln28_8_reg_634[10]),
        .I2(mul_ln28_9_reg_639[10]),
        .I3(\add_ln28_7_reg_689[11]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[11]_i_7_n_0 ));
  (* HLUTNM = "lutpair35" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[11]_i_8 
       (.I0(mul_ln28_10_reg_644[9]),
        .I1(mul_ln28_8_reg_634[9]),
        .I2(mul_ln28_9_reg_639[9]),
        .I3(\add_ln28_7_reg_689[11]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[11]_i_8_n_0 ));
  (* HLUTNM = "lutpair34" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[11]_i_9 
       (.I0(mul_ln28_10_reg_644[8]),
        .I1(mul_ln28_8_reg_634[8]),
        .I2(mul_ln28_9_reg_639[8]),
        .I3(\add_ln28_7_reg_689[11]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[11]_i_9_n_0 ));
  (* HLUTNM = "lutpair40" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[15]_i_2 
       (.I0(mul_ln28_10_reg_644[14]),
        .I1(mul_ln28_8_reg_634[14]),
        .I2(mul_ln28_9_reg_639[14]),
        .O(\add_ln28_7_reg_689[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair39" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[15]_i_3 
       (.I0(mul_ln28_10_reg_644[13]),
        .I1(mul_ln28_8_reg_634[13]),
        .I2(mul_ln28_9_reg_639[13]),
        .O(\add_ln28_7_reg_689[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair38" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[15]_i_4 
       (.I0(mul_ln28_10_reg_644[12]),
        .I1(mul_ln28_8_reg_634[12]),
        .I2(mul_ln28_9_reg_639[12]),
        .O(\add_ln28_7_reg_689[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair37" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[15]_i_5 
       (.I0(mul_ln28_10_reg_644[11]),
        .I1(mul_ln28_8_reg_634[11]),
        .I2(mul_ln28_9_reg_639[11]),
        .O(\add_ln28_7_reg_689[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair41" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[15]_i_6 
       (.I0(mul_ln28_10_reg_644[15]),
        .I1(mul_ln28_8_reg_634[15]),
        .I2(mul_ln28_9_reg_639[15]),
        .I3(\add_ln28_7_reg_689[15]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair40" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[15]_i_7 
       (.I0(mul_ln28_10_reg_644[14]),
        .I1(mul_ln28_8_reg_634[14]),
        .I2(mul_ln28_9_reg_639[14]),
        .I3(\add_ln28_7_reg_689[15]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair39" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[15]_i_8 
       (.I0(mul_ln28_10_reg_644[13]),
        .I1(mul_ln28_8_reg_634[13]),
        .I2(mul_ln28_9_reg_639[13]),
        .I3(\add_ln28_7_reg_689[15]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair38" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[15]_i_9 
       (.I0(mul_ln28_10_reg_644[12]),
        .I1(mul_ln28_8_reg_634[12]),
        .I2(mul_ln28_9_reg_639[12]),
        .I3(\add_ln28_7_reg_689[15]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair44" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[19]_i_2 
       (.I0(mul_ln28_10_reg_644[18]),
        .I1(mul_ln28_8_reg_634[18]),
        .I2(mul_ln28_9_reg_639[18]),
        .O(\add_ln28_7_reg_689[19]_i_2_n_0 ));
  (* HLUTNM = "lutpair43" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[19]_i_3 
       (.I0(mul_ln28_10_reg_644[17]),
        .I1(mul_ln28_8_reg_634[17]),
        .I2(mul_ln28_9_reg_639[17]),
        .O(\add_ln28_7_reg_689[19]_i_3_n_0 ));
  (* HLUTNM = "lutpair42" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[19]_i_4 
       (.I0(mul_ln28_10_reg_644[16]),
        .I1(mul_ln28_8_reg_634[16]),
        .I2(mul_ln28_9_reg_639[16]),
        .O(\add_ln28_7_reg_689[19]_i_4_n_0 ));
  (* HLUTNM = "lutpair41" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[19]_i_5 
       (.I0(mul_ln28_10_reg_644[15]),
        .I1(mul_ln28_8_reg_634[15]),
        .I2(mul_ln28_9_reg_639[15]),
        .O(\add_ln28_7_reg_689[19]_i_5_n_0 ));
  (* HLUTNM = "lutpair45" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[19]_i_6 
       (.I0(mul_ln28_10_reg_644[19]),
        .I1(mul_ln28_8_reg_634[19]),
        .I2(mul_ln28_9_reg_639[19]),
        .I3(\add_ln28_7_reg_689[19]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[19]_i_6_n_0 ));
  (* HLUTNM = "lutpair44" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[19]_i_7 
       (.I0(mul_ln28_10_reg_644[18]),
        .I1(mul_ln28_8_reg_634[18]),
        .I2(mul_ln28_9_reg_639[18]),
        .I3(\add_ln28_7_reg_689[19]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[19]_i_7_n_0 ));
  (* HLUTNM = "lutpair43" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[19]_i_8 
       (.I0(mul_ln28_10_reg_644[17]),
        .I1(mul_ln28_8_reg_634[17]),
        .I2(mul_ln28_9_reg_639[17]),
        .I3(\add_ln28_7_reg_689[19]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[19]_i_8_n_0 ));
  (* HLUTNM = "lutpair42" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[19]_i_9 
       (.I0(mul_ln28_10_reg_644[16]),
        .I1(mul_ln28_8_reg_634[16]),
        .I2(mul_ln28_9_reg_639[16]),
        .I3(\add_ln28_7_reg_689[19]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[19]_i_9_n_0 ));
  (* HLUTNM = "lutpair48" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[23]_i_2 
       (.I0(mul_ln28_10_reg_644[22]),
        .I1(mul_ln28_8_reg_634[22]),
        .I2(mul_ln28_9_reg_639[22]),
        .O(\add_ln28_7_reg_689[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair47" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[23]_i_3 
       (.I0(mul_ln28_10_reg_644[21]),
        .I1(mul_ln28_8_reg_634[21]),
        .I2(mul_ln28_9_reg_639[21]),
        .O(\add_ln28_7_reg_689[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair46" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[23]_i_4 
       (.I0(mul_ln28_10_reg_644[20]),
        .I1(mul_ln28_8_reg_634[20]),
        .I2(mul_ln28_9_reg_639[20]),
        .O(\add_ln28_7_reg_689[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair45" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[23]_i_5 
       (.I0(mul_ln28_10_reg_644[19]),
        .I1(mul_ln28_8_reg_634[19]),
        .I2(mul_ln28_9_reg_639[19]),
        .O(\add_ln28_7_reg_689[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair49" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[23]_i_6 
       (.I0(mul_ln28_10_reg_644[23]),
        .I1(mul_ln28_8_reg_634[23]),
        .I2(mul_ln28_9_reg_639[23]),
        .I3(\add_ln28_7_reg_689[23]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair48" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[23]_i_7 
       (.I0(mul_ln28_10_reg_644[22]),
        .I1(mul_ln28_8_reg_634[22]),
        .I2(mul_ln28_9_reg_639[22]),
        .I3(\add_ln28_7_reg_689[23]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair47" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[23]_i_8 
       (.I0(mul_ln28_10_reg_644[21]),
        .I1(mul_ln28_8_reg_634[21]),
        .I2(mul_ln28_9_reg_639[21]),
        .I3(\add_ln28_7_reg_689[23]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair46" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[23]_i_9 
       (.I0(mul_ln28_10_reg_644[20]),
        .I1(mul_ln28_8_reg_634[20]),
        .I2(mul_ln28_9_reg_639[20]),
        .I3(\add_ln28_7_reg_689[23]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[23]_i_9_n_0 ));
  (* HLUTNM = "lutpair52" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[27]_i_2 
       (.I0(mul_ln28_10_reg_644[26]),
        .I1(mul_ln28_8_reg_634[26]),
        .I2(mul_ln28_9_reg_639[26]),
        .O(\add_ln28_7_reg_689[27]_i_2_n_0 ));
  (* HLUTNM = "lutpair51" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[27]_i_3 
       (.I0(mul_ln28_10_reg_644[25]),
        .I1(mul_ln28_8_reg_634[25]),
        .I2(mul_ln28_9_reg_639[25]),
        .O(\add_ln28_7_reg_689[27]_i_3_n_0 ));
  (* HLUTNM = "lutpair50" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[27]_i_4 
       (.I0(mul_ln28_10_reg_644[24]),
        .I1(mul_ln28_8_reg_634[24]),
        .I2(mul_ln28_9_reg_639[24]),
        .O(\add_ln28_7_reg_689[27]_i_4_n_0 ));
  (* HLUTNM = "lutpair49" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[27]_i_5 
       (.I0(mul_ln28_10_reg_644[23]),
        .I1(mul_ln28_8_reg_634[23]),
        .I2(mul_ln28_9_reg_639[23]),
        .O(\add_ln28_7_reg_689[27]_i_5_n_0 ));
  (* HLUTNM = "lutpair53" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[27]_i_6 
       (.I0(mul_ln28_10_reg_644[27]),
        .I1(mul_ln28_8_reg_634[27]),
        .I2(mul_ln28_9_reg_639[27]),
        .I3(\add_ln28_7_reg_689[27]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[27]_i_6_n_0 ));
  (* HLUTNM = "lutpair52" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[27]_i_7 
       (.I0(mul_ln28_10_reg_644[26]),
        .I1(mul_ln28_8_reg_634[26]),
        .I2(mul_ln28_9_reg_639[26]),
        .I3(\add_ln28_7_reg_689[27]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[27]_i_7_n_0 ));
  (* HLUTNM = "lutpair51" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[27]_i_8 
       (.I0(mul_ln28_10_reg_644[25]),
        .I1(mul_ln28_8_reg_634[25]),
        .I2(mul_ln28_9_reg_639[25]),
        .I3(\add_ln28_7_reg_689[27]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[27]_i_8_n_0 ));
  (* HLUTNM = "lutpair50" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[27]_i_9 
       (.I0(mul_ln28_10_reg_644[24]),
        .I1(mul_ln28_8_reg_634[24]),
        .I2(mul_ln28_9_reg_639[24]),
        .I3(\add_ln28_7_reg_689[27]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[27]_i_9_n_0 ));
  (* HLUTNM = "lutpair55" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[31]_i_2 
       (.I0(mul_ln28_10_reg_644[29]),
        .I1(mul_ln28_8_reg_634[29]),
        .I2(mul_ln28_9_reg_639[29]),
        .O(\add_ln28_7_reg_689[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair54" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[31]_i_3 
       (.I0(mul_ln28_10_reg_644[28]),
        .I1(mul_ln28_8_reg_634[28]),
        .I2(mul_ln28_9_reg_639[28]),
        .O(\add_ln28_7_reg_689[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair53" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[31]_i_4 
       (.I0(mul_ln28_10_reg_644[27]),
        .I1(mul_ln28_8_reg_634[27]),
        .I2(mul_ln28_9_reg_639[27]),
        .O(\add_ln28_7_reg_689[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h17E8E817E81717E8)) 
    \add_ln28_7_reg_689[31]_i_5 
       (.I0(mul_ln28_9_reg_639[30]),
        .I1(mul_ln28_8_reg_634[30]),
        .I2(mul_ln28_10_reg_644[30]),
        .I3(mul_ln28_8_reg_634[31]),
        .I4(mul_ln28_10_reg_644[31]),
        .I5(mul_ln28_9_reg_639[31]),
        .O(\add_ln28_7_reg_689[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[31]_i_6 
       (.I0(\add_ln28_7_reg_689[31]_i_2_n_0 ),
        .I1(mul_ln28_8_reg_634[30]),
        .I2(mul_ln28_10_reg_644[30]),
        .I3(mul_ln28_9_reg_639[30]),
        .O(\add_ln28_7_reg_689[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair55" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[31]_i_7 
       (.I0(mul_ln28_10_reg_644[29]),
        .I1(mul_ln28_8_reg_634[29]),
        .I2(mul_ln28_9_reg_639[29]),
        .I3(\add_ln28_7_reg_689[31]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair54" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[31]_i_8 
       (.I0(mul_ln28_10_reg_644[28]),
        .I1(mul_ln28_8_reg_634[28]),
        .I2(mul_ln28_9_reg_639[28]),
        .I3(\add_ln28_7_reg_689[31]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair28" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[3]_i_2 
       (.I0(mul_ln28_10_reg_644[2]),
        .I1(mul_ln28_8_reg_634[2]),
        .I2(mul_ln28_9_reg_639[2]),
        .O(\add_ln28_7_reg_689[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[3]_i_3 
       (.I0(mul_ln28_10_reg_644[1]),
        .I1(mul_ln28_8_reg_634[1]),
        .I2(mul_ln28_9_reg_639[1]),
        .O(\add_ln28_7_reg_689[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[3]_i_4 
       (.I0(mul_ln28_10_reg_644[0]),
        .I1(mul_ln28_8_reg_634[0]),
        .I2(mul_ln28_9_reg_639[0]),
        .O(\add_ln28_7_reg_689[3]_i_4_n_0 ));
  (* HLUTNM = "lutpair29" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[3]_i_5 
       (.I0(mul_ln28_10_reg_644[3]),
        .I1(mul_ln28_8_reg_634[3]),
        .I2(mul_ln28_9_reg_639[3]),
        .I3(\add_ln28_7_reg_689[3]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[3]_i_5_n_0 ));
  (* HLUTNM = "lutpair28" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[3]_i_6 
       (.I0(mul_ln28_10_reg_644[2]),
        .I1(mul_ln28_8_reg_634[2]),
        .I2(mul_ln28_9_reg_639[2]),
        .I3(\add_ln28_7_reg_689[3]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[3]_i_7 
       (.I0(mul_ln28_10_reg_644[1]),
        .I1(mul_ln28_8_reg_634[1]),
        .I2(mul_ln28_9_reg_639[1]),
        .I3(\add_ln28_7_reg_689[3]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[3]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_7_reg_689[3]_i_8 
       (.I0(mul_ln28_10_reg_644[0]),
        .I1(mul_ln28_8_reg_634[0]),
        .I2(mul_ln28_9_reg_639[0]),
        .O(\add_ln28_7_reg_689[3]_i_8_n_0 ));
  (* HLUTNM = "lutpair32" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[7]_i_2 
       (.I0(mul_ln28_10_reg_644[6]),
        .I1(mul_ln28_8_reg_634[6]),
        .I2(mul_ln28_9_reg_639[6]),
        .O(\add_ln28_7_reg_689[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair31" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[7]_i_3 
       (.I0(mul_ln28_10_reg_644[5]),
        .I1(mul_ln28_8_reg_634[5]),
        .I2(mul_ln28_9_reg_639[5]),
        .O(\add_ln28_7_reg_689[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair30" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[7]_i_4 
       (.I0(mul_ln28_10_reg_644[4]),
        .I1(mul_ln28_8_reg_634[4]),
        .I2(mul_ln28_9_reg_639[4]),
        .O(\add_ln28_7_reg_689[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair29" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_7_reg_689[7]_i_5 
       (.I0(mul_ln28_10_reg_644[3]),
        .I1(mul_ln28_8_reg_634[3]),
        .I2(mul_ln28_9_reg_639[3]),
        .O(\add_ln28_7_reg_689[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair33" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[7]_i_6 
       (.I0(mul_ln28_10_reg_644[7]),
        .I1(mul_ln28_8_reg_634[7]),
        .I2(mul_ln28_9_reg_639[7]),
        .I3(\add_ln28_7_reg_689[7]_i_2_n_0 ),
        .O(\add_ln28_7_reg_689[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair32" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[7]_i_7 
       (.I0(mul_ln28_10_reg_644[6]),
        .I1(mul_ln28_8_reg_634[6]),
        .I2(mul_ln28_9_reg_639[6]),
        .I3(\add_ln28_7_reg_689[7]_i_3_n_0 ),
        .O(\add_ln28_7_reg_689[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair31" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[7]_i_8 
       (.I0(mul_ln28_10_reg_644[5]),
        .I1(mul_ln28_8_reg_634[5]),
        .I2(mul_ln28_9_reg_639[5]),
        .I3(\add_ln28_7_reg_689[7]_i_4_n_0 ),
        .O(\add_ln28_7_reg_689[7]_i_8_n_0 ));
  (* HLUTNM = "lutpair30" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_7_reg_689[7]_i_9 
       (.I0(mul_ln28_10_reg_644[4]),
        .I1(mul_ln28_8_reg_634[4]),
        .I2(mul_ln28_9_reg_639[4]),
        .I3(\add_ln28_7_reg_689[7]_i_5_n_0 ),
        .O(\add_ln28_7_reg_689[7]_i_9_n_0 ));
  FDRE \add_ln28_7_reg_689_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[0]),
        .Q(add_ln28_7_reg_689[0]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[10]),
        .Q(add_ln28_7_reg_689[10]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[11]),
        .Q(add_ln28_7_reg_689[11]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[11]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[7]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[11]_i_1_n_0 ,\add_ln28_7_reg_689_reg[11]_i_1_n_1 ,\add_ln28_7_reg_689_reg[11]_i_1_n_2 ,\add_ln28_7_reg_689_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[11]_i_2_n_0 ,\add_ln28_7_reg_689[11]_i_3_n_0 ,\add_ln28_7_reg_689[11]_i_4_n_0 ,\add_ln28_7_reg_689[11]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[11:8]),
        .S({\add_ln28_7_reg_689[11]_i_6_n_0 ,\add_ln28_7_reg_689[11]_i_7_n_0 ,\add_ln28_7_reg_689[11]_i_8_n_0 ,\add_ln28_7_reg_689[11]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[12]),
        .Q(add_ln28_7_reg_689[12]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[13]),
        .Q(add_ln28_7_reg_689[13]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[14]),
        .Q(add_ln28_7_reg_689[14]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[15]),
        .Q(add_ln28_7_reg_689[15]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[15]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[11]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[15]_i_1_n_0 ,\add_ln28_7_reg_689_reg[15]_i_1_n_1 ,\add_ln28_7_reg_689_reg[15]_i_1_n_2 ,\add_ln28_7_reg_689_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[15]_i_2_n_0 ,\add_ln28_7_reg_689[15]_i_3_n_0 ,\add_ln28_7_reg_689[15]_i_4_n_0 ,\add_ln28_7_reg_689[15]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[15:12]),
        .S({\add_ln28_7_reg_689[15]_i_6_n_0 ,\add_ln28_7_reg_689[15]_i_7_n_0 ,\add_ln28_7_reg_689[15]_i_8_n_0 ,\add_ln28_7_reg_689[15]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[16]),
        .Q(add_ln28_7_reg_689[16]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[17]),
        .Q(add_ln28_7_reg_689[17]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[18]),
        .Q(add_ln28_7_reg_689[18]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[19]),
        .Q(add_ln28_7_reg_689[19]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[19]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[15]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[19]_i_1_n_0 ,\add_ln28_7_reg_689_reg[19]_i_1_n_1 ,\add_ln28_7_reg_689_reg[19]_i_1_n_2 ,\add_ln28_7_reg_689_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[19]_i_2_n_0 ,\add_ln28_7_reg_689[19]_i_3_n_0 ,\add_ln28_7_reg_689[19]_i_4_n_0 ,\add_ln28_7_reg_689[19]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[19:16]),
        .S({\add_ln28_7_reg_689[19]_i_6_n_0 ,\add_ln28_7_reg_689[19]_i_7_n_0 ,\add_ln28_7_reg_689[19]_i_8_n_0 ,\add_ln28_7_reg_689[19]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[1]),
        .Q(add_ln28_7_reg_689[1]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[20]),
        .Q(add_ln28_7_reg_689[20]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[21]),
        .Q(add_ln28_7_reg_689[21]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[22]),
        .Q(add_ln28_7_reg_689[22]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[23]),
        .Q(add_ln28_7_reg_689[23]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[23]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[19]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[23]_i_1_n_0 ,\add_ln28_7_reg_689_reg[23]_i_1_n_1 ,\add_ln28_7_reg_689_reg[23]_i_1_n_2 ,\add_ln28_7_reg_689_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[23]_i_2_n_0 ,\add_ln28_7_reg_689[23]_i_3_n_0 ,\add_ln28_7_reg_689[23]_i_4_n_0 ,\add_ln28_7_reg_689[23]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[23:20]),
        .S({\add_ln28_7_reg_689[23]_i_6_n_0 ,\add_ln28_7_reg_689[23]_i_7_n_0 ,\add_ln28_7_reg_689[23]_i_8_n_0 ,\add_ln28_7_reg_689[23]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[24]),
        .Q(add_ln28_7_reg_689[24]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[25]),
        .Q(add_ln28_7_reg_689[25]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[26]),
        .Q(add_ln28_7_reg_689[26]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[27]),
        .Q(add_ln28_7_reg_689[27]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[27]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[23]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[27]_i_1_n_0 ,\add_ln28_7_reg_689_reg[27]_i_1_n_1 ,\add_ln28_7_reg_689_reg[27]_i_1_n_2 ,\add_ln28_7_reg_689_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[27]_i_2_n_0 ,\add_ln28_7_reg_689[27]_i_3_n_0 ,\add_ln28_7_reg_689[27]_i_4_n_0 ,\add_ln28_7_reg_689[27]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[27:24]),
        .S({\add_ln28_7_reg_689[27]_i_6_n_0 ,\add_ln28_7_reg_689[27]_i_7_n_0 ,\add_ln28_7_reg_689[27]_i_8_n_0 ,\add_ln28_7_reg_689[27]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[28]),
        .Q(add_ln28_7_reg_689[28]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[29]),
        .Q(add_ln28_7_reg_689[29]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[2]),
        .Q(add_ln28_7_reg_689[2]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[30]),
        .Q(add_ln28_7_reg_689[30]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[31]),
        .Q(add_ln28_7_reg_689[31]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[31]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[27]_i_1_n_0 ),
        .CO({\NLW_add_ln28_7_reg_689_reg[31]_i_1_CO_UNCONNECTED [3],\add_ln28_7_reg_689_reg[31]_i_1_n_1 ,\add_ln28_7_reg_689_reg[31]_i_1_n_2 ,\add_ln28_7_reg_689_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\add_ln28_7_reg_689[31]_i_2_n_0 ,\add_ln28_7_reg_689[31]_i_3_n_0 ,\add_ln28_7_reg_689[31]_i_4_n_0 }),
        .O(add_ln28_7_fu_448_p2[31:28]),
        .S({\add_ln28_7_reg_689[31]_i_5_n_0 ,\add_ln28_7_reg_689[31]_i_6_n_0 ,\add_ln28_7_reg_689[31]_i_7_n_0 ,\add_ln28_7_reg_689[31]_i_8_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[3]),
        .Q(add_ln28_7_reg_689[3]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\add_ln28_7_reg_689_reg[3]_i_1_n_0 ,\add_ln28_7_reg_689_reg[3]_i_1_n_1 ,\add_ln28_7_reg_689_reg[3]_i_1_n_2 ,\add_ln28_7_reg_689_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[3]_i_2_n_0 ,\add_ln28_7_reg_689[3]_i_3_n_0 ,\add_ln28_7_reg_689[3]_i_4_n_0 ,1'b0}),
        .O(add_ln28_7_fu_448_p2[3:0]),
        .S({\add_ln28_7_reg_689[3]_i_5_n_0 ,\add_ln28_7_reg_689[3]_i_6_n_0 ,\add_ln28_7_reg_689[3]_i_7_n_0 ,\add_ln28_7_reg_689[3]_i_8_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[4]),
        .Q(add_ln28_7_reg_689[4]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[5]),
        .Q(add_ln28_7_reg_689[5]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[6]),
        .Q(add_ln28_7_reg_689[6]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[7]),
        .Q(add_ln28_7_reg_689[7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_7_reg_689_reg[7]_i_1 
       (.CI(\add_ln28_7_reg_689_reg[3]_i_1_n_0 ),
        .CO({\add_ln28_7_reg_689_reg[7]_i_1_n_0 ,\add_ln28_7_reg_689_reg[7]_i_1_n_1 ,\add_ln28_7_reg_689_reg[7]_i_1_n_2 ,\add_ln28_7_reg_689_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_7_reg_689[7]_i_2_n_0 ,\add_ln28_7_reg_689[7]_i_3_n_0 ,\add_ln28_7_reg_689[7]_i_4_n_0 ,\add_ln28_7_reg_689[7]_i_5_n_0 }),
        .O(add_ln28_7_fu_448_p2[7:4]),
        .S({\add_ln28_7_reg_689[7]_i_6_n_0 ,\add_ln28_7_reg_689[7]_i_7_n_0 ,\add_ln28_7_reg_689[7]_i_8_n_0 ,\add_ln28_7_reg_689[7]_i_9_n_0 }));
  FDRE \add_ln28_7_reg_689_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[8]),
        .Q(add_ln28_7_reg_689[8]),
        .R(1'b0));
  FDRE \add_ln28_7_reg_689_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_7_fu_448_p2[9]),
        .Q(add_ln28_7_reg_689[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[11]_i_10 
       (.I0(mul_ln28_6_reg_679[10]),
        .I1(mul_ln28_7_reg_684[10]),
        .I2(mul_ln28_5_reg_674[10]),
        .O(\add_ln28_8_reg_704[11]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[11]_i_11 
       (.I0(mul_ln28_6_reg_679[9]),
        .I1(mul_ln28_7_reg_684[9]),
        .I2(mul_ln28_5_reg_674[9]),
        .O(\add_ln28_8_reg_704[11]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[11]_i_12 
       (.I0(mul_ln28_6_reg_679[8]),
        .I1(mul_ln28_7_reg_684[8]),
        .I2(mul_ln28_5_reg_674[8]),
        .O(\add_ln28_8_reg_704[11]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[11]_i_13 
       (.I0(mul_ln28_6_reg_679[7]),
        .I1(mul_ln28_7_reg_684[7]),
        .I2(mul_ln28_5_reg_674[7]),
        .O(\add_ln28_8_reg_704[11]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[11]_i_2 
       (.I0(add_ln28_7_reg_689[10]),
        .I1(\add_ln28_8_reg_704[11]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[9]),
        .I3(mul_ln28_5_reg_674[9]),
        .I4(mul_ln28_7_reg_684[9]),
        .O(\add_ln28_8_reg_704[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[11]_i_3 
       (.I0(add_ln28_7_reg_689[9]),
        .I1(\add_ln28_8_reg_704[11]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[8]),
        .I3(mul_ln28_5_reg_674[8]),
        .I4(mul_ln28_7_reg_684[8]),
        .O(\add_ln28_8_reg_704[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[11]_i_4 
       (.I0(add_ln28_7_reg_689[8]),
        .I1(\add_ln28_8_reg_704[11]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[7]),
        .I3(mul_ln28_5_reg_674[7]),
        .I4(mul_ln28_7_reg_684[7]),
        .O(\add_ln28_8_reg_704[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[11]_i_5 
       (.I0(add_ln28_7_reg_689[7]),
        .I1(\add_ln28_8_reg_704[11]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[6]),
        .I3(mul_ln28_5_reg_674[6]),
        .I4(mul_ln28_7_reg_684[6]),
        .O(\add_ln28_8_reg_704[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[11]_i_6 
       (.I0(\add_ln28_8_reg_704[11]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[15]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[11]),
        .I3(mul_ln28_7_reg_684[10]),
        .I4(mul_ln28_5_reg_674[10]),
        .I5(mul_ln28_6_reg_679[10]),
        .O(\add_ln28_8_reg_704[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[11]_i_7 
       (.I0(\add_ln28_8_reg_704[11]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[11]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[10]),
        .I3(mul_ln28_7_reg_684[9]),
        .I4(mul_ln28_5_reg_674[9]),
        .I5(mul_ln28_6_reg_679[9]),
        .O(\add_ln28_8_reg_704[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[11]_i_8 
       (.I0(\add_ln28_8_reg_704[11]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[11]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[9]),
        .I3(mul_ln28_7_reg_684[8]),
        .I4(mul_ln28_5_reg_674[8]),
        .I5(mul_ln28_6_reg_679[8]),
        .O(\add_ln28_8_reg_704[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[11]_i_9 
       (.I0(\add_ln28_8_reg_704[11]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[11]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[8]),
        .I3(mul_ln28_7_reg_684[7]),
        .I4(mul_ln28_5_reg_674[7]),
        .I5(mul_ln28_6_reg_679[7]),
        .O(\add_ln28_8_reg_704[11]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[15]_i_10 
       (.I0(mul_ln28_6_reg_679[14]),
        .I1(mul_ln28_7_reg_684[14]),
        .I2(mul_ln28_5_reg_674[14]),
        .O(\add_ln28_8_reg_704[15]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[15]_i_11 
       (.I0(mul_ln28_6_reg_679[13]),
        .I1(mul_ln28_7_reg_684[13]),
        .I2(mul_ln28_5_reg_674[13]),
        .O(\add_ln28_8_reg_704[15]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[15]_i_12 
       (.I0(mul_ln28_6_reg_679[12]),
        .I1(mul_ln28_7_reg_684[12]),
        .I2(mul_ln28_5_reg_674[12]),
        .O(\add_ln28_8_reg_704[15]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[15]_i_13 
       (.I0(mul_ln28_6_reg_679[11]),
        .I1(mul_ln28_7_reg_684[11]),
        .I2(mul_ln28_5_reg_674[11]),
        .O(\add_ln28_8_reg_704[15]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[15]_i_2 
       (.I0(add_ln28_7_reg_689[14]),
        .I1(\add_ln28_8_reg_704[15]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[13]),
        .I3(mul_ln28_5_reg_674[13]),
        .I4(mul_ln28_7_reg_684[13]),
        .O(\add_ln28_8_reg_704[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[15]_i_3 
       (.I0(add_ln28_7_reg_689[13]),
        .I1(\add_ln28_8_reg_704[15]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[12]),
        .I3(mul_ln28_5_reg_674[12]),
        .I4(mul_ln28_7_reg_684[12]),
        .O(\add_ln28_8_reg_704[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[15]_i_4 
       (.I0(add_ln28_7_reg_689[12]),
        .I1(\add_ln28_8_reg_704[15]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[11]),
        .I3(mul_ln28_5_reg_674[11]),
        .I4(mul_ln28_7_reg_684[11]),
        .O(\add_ln28_8_reg_704[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[15]_i_5 
       (.I0(add_ln28_7_reg_689[11]),
        .I1(\add_ln28_8_reg_704[15]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[10]),
        .I3(mul_ln28_5_reg_674[10]),
        .I4(mul_ln28_7_reg_684[10]),
        .O(\add_ln28_8_reg_704[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[15]_i_6 
       (.I0(\add_ln28_8_reg_704[15]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[19]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[15]),
        .I3(mul_ln28_7_reg_684[14]),
        .I4(mul_ln28_5_reg_674[14]),
        .I5(mul_ln28_6_reg_679[14]),
        .O(\add_ln28_8_reg_704[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[15]_i_7 
       (.I0(\add_ln28_8_reg_704[15]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[15]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[14]),
        .I3(mul_ln28_7_reg_684[13]),
        .I4(mul_ln28_5_reg_674[13]),
        .I5(mul_ln28_6_reg_679[13]),
        .O(\add_ln28_8_reg_704[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[15]_i_8 
       (.I0(\add_ln28_8_reg_704[15]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[15]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[13]),
        .I3(mul_ln28_7_reg_684[12]),
        .I4(mul_ln28_5_reg_674[12]),
        .I5(mul_ln28_6_reg_679[12]),
        .O(\add_ln28_8_reg_704[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[15]_i_9 
       (.I0(\add_ln28_8_reg_704[15]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[15]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[12]),
        .I3(mul_ln28_7_reg_684[11]),
        .I4(mul_ln28_5_reg_674[11]),
        .I5(mul_ln28_6_reg_679[11]),
        .O(\add_ln28_8_reg_704[15]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[19]_i_10 
       (.I0(mul_ln28_6_reg_679[18]),
        .I1(mul_ln28_7_reg_684[18]),
        .I2(mul_ln28_5_reg_674[18]),
        .O(\add_ln28_8_reg_704[19]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[19]_i_11 
       (.I0(mul_ln28_6_reg_679[17]),
        .I1(mul_ln28_7_reg_684[17]),
        .I2(mul_ln28_5_reg_674[17]),
        .O(\add_ln28_8_reg_704[19]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[19]_i_12 
       (.I0(mul_ln28_6_reg_679[16]),
        .I1(mul_ln28_7_reg_684[16]),
        .I2(mul_ln28_5_reg_674[16]),
        .O(\add_ln28_8_reg_704[19]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[19]_i_13 
       (.I0(mul_ln28_6_reg_679[15]),
        .I1(mul_ln28_7_reg_684[15]),
        .I2(mul_ln28_5_reg_674[15]),
        .O(\add_ln28_8_reg_704[19]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[19]_i_2 
       (.I0(add_ln28_7_reg_689[18]),
        .I1(\add_ln28_8_reg_704[19]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[17]),
        .I3(mul_ln28_5_reg_674[17]),
        .I4(mul_ln28_7_reg_684[17]),
        .O(\add_ln28_8_reg_704[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[19]_i_3 
       (.I0(add_ln28_7_reg_689[17]),
        .I1(\add_ln28_8_reg_704[19]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[16]),
        .I3(mul_ln28_5_reg_674[16]),
        .I4(mul_ln28_7_reg_684[16]),
        .O(\add_ln28_8_reg_704[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[19]_i_4 
       (.I0(add_ln28_7_reg_689[16]),
        .I1(\add_ln28_8_reg_704[19]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[15]),
        .I3(mul_ln28_5_reg_674[15]),
        .I4(mul_ln28_7_reg_684[15]),
        .O(\add_ln28_8_reg_704[19]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[19]_i_5 
       (.I0(add_ln28_7_reg_689[15]),
        .I1(\add_ln28_8_reg_704[19]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[14]),
        .I3(mul_ln28_5_reg_674[14]),
        .I4(mul_ln28_7_reg_684[14]),
        .O(\add_ln28_8_reg_704[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[19]_i_6 
       (.I0(\add_ln28_8_reg_704[19]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[23]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[19]),
        .I3(mul_ln28_7_reg_684[18]),
        .I4(mul_ln28_5_reg_674[18]),
        .I5(mul_ln28_6_reg_679[18]),
        .O(\add_ln28_8_reg_704[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[19]_i_7 
       (.I0(\add_ln28_8_reg_704[19]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[19]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[18]),
        .I3(mul_ln28_7_reg_684[17]),
        .I4(mul_ln28_5_reg_674[17]),
        .I5(mul_ln28_6_reg_679[17]),
        .O(\add_ln28_8_reg_704[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[19]_i_8 
       (.I0(\add_ln28_8_reg_704[19]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[19]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[17]),
        .I3(mul_ln28_7_reg_684[16]),
        .I4(mul_ln28_5_reg_674[16]),
        .I5(mul_ln28_6_reg_679[16]),
        .O(\add_ln28_8_reg_704[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[19]_i_9 
       (.I0(\add_ln28_8_reg_704[19]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[19]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[16]),
        .I3(mul_ln28_7_reg_684[15]),
        .I4(mul_ln28_5_reg_674[15]),
        .I5(mul_ln28_6_reg_679[15]),
        .O(\add_ln28_8_reg_704[19]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[23]_i_10 
       (.I0(mul_ln28_6_reg_679[22]),
        .I1(mul_ln28_7_reg_684[22]),
        .I2(mul_ln28_5_reg_674[22]),
        .O(\add_ln28_8_reg_704[23]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[23]_i_11 
       (.I0(mul_ln28_6_reg_679[21]),
        .I1(mul_ln28_7_reg_684[21]),
        .I2(mul_ln28_5_reg_674[21]),
        .O(\add_ln28_8_reg_704[23]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[23]_i_12 
       (.I0(mul_ln28_6_reg_679[20]),
        .I1(mul_ln28_7_reg_684[20]),
        .I2(mul_ln28_5_reg_674[20]),
        .O(\add_ln28_8_reg_704[23]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[23]_i_13 
       (.I0(mul_ln28_6_reg_679[19]),
        .I1(mul_ln28_7_reg_684[19]),
        .I2(mul_ln28_5_reg_674[19]),
        .O(\add_ln28_8_reg_704[23]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[23]_i_2 
       (.I0(add_ln28_7_reg_689[22]),
        .I1(\add_ln28_8_reg_704[23]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[21]),
        .I3(mul_ln28_5_reg_674[21]),
        .I4(mul_ln28_7_reg_684[21]),
        .O(\add_ln28_8_reg_704[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[23]_i_3 
       (.I0(add_ln28_7_reg_689[21]),
        .I1(\add_ln28_8_reg_704[23]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[20]),
        .I3(mul_ln28_5_reg_674[20]),
        .I4(mul_ln28_7_reg_684[20]),
        .O(\add_ln28_8_reg_704[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[23]_i_4 
       (.I0(add_ln28_7_reg_689[20]),
        .I1(\add_ln28_8_reg_704[23]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[19]),
        .I3(mul_ln28_5_reg_674[19]),
        .I4(mul_ln28_7_reg_684[19]),
        .O(\add_ln28_8_reg_704[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[23]_i_5 
       (.I0(add_ln28_7_reg_689[19]),
        .I1(\add_ln28_8_reg_704[23]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[18]),
        .I3(mul_ln28_5_reg_674[18]),
        .I4(mul_ln28_7_reg_684[18]),
        .O(\add_ln28_8_reg_704[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[23]_i_6 
       (.I0(\add_ln28_8_reg_704[23]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[27]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[23]),
        .I3(mul_ln28_7_reg_684[22]),
        .I4(mul_ln28_5_reg_674[22]),
        .I5(mul_ln28_6_reg_679[22]),
        .O(\add_ln28_8_reg_704[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[23]_i_7 
       (.I0(\add_ln28_8_reg_704[23]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[23]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[22]),
        .I3(mul_ln28_7_reg_684[21]),
        .I4(mul_ln28_5_reg_674[21]),
        .I5(mul_ln28_6_reg_679[21]),
        .O(\add_ln28_8_reg_704[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[23]_i_8 
       (.I0(\add_ln28_8_reg_704[23]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[23]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[21]),
        .I3(mul_ln28_7_reg_684[20]),
        .I4(mul_ln28_5_reg_674[20]),
        .I5(mul_ln28_6_reg_679[20]),
        .O(\add_ln28_8_reg_704[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[23]_i_9 
       (.I0(\add_ln28_8_reg_704[23]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[23]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[20]),
        .I3(mul_ln28_7_reg_684[19]),
        .I4(mul_ln28_5_reg_674[19]),
        .I5(mul_ln28_6_reg_679[19]),
        .O(\add_ln28_8_reg_704[23]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[27]_i_10 
       (.I0(mul_ln28_6_reg_679[26]),
        .I1(mul_ln28_7_reg_684[26]),
        .I2(mul_ln28_5_reg_674[26]),
        .O(\add_ln28_8_reg_704[27]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[27]_i_11 
       (.I0(mul_ln28_6_reg_679[25]),
        .I1(mul_ln28_7_reg_684[25]),
        .I2(mul_ln28_5_reg_674[25]),
        .O(\add_ln28_8_reg_704[27]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[27]_i_12 
       (.I0(mul_ln28_6_reg_679[24]),
        .I1(mul_ln28_7_reg_684[24]),
        .I2(mul_ln28_5_reg_674[24]),
        .O(\add_ln28_8_reg_704[27]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[27]_i_13 
       (.I0(mul_ln28_6_reg_679[23]),
        .I1(mul_ln28_7_reg_684[23]),
        .I2(mul_ln28_5_reg_674[23]),
        .O(\add_ln28_8_reg_704[27]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[27]_i_2 
       (.I0(add_ln28_7_reg_689[26]),
        .I1(\add_ln28_8_reg_704[27]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[25]),
        .I3(mul_ln28_5_reg_674[25]),
        .I4(mul_ln28_7_reg_684[25]),
        .O(\add_ln28_8_reg_704[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[27]_i_3 
       (.I0(add_ln28_7_reg_689[25]),
        .I1(\add_ln28_8_reg_704[27]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[24]),
        .I3(mul_ln28_5_reg_674[24]),
        .I4(mul_ln28_7_reg_684[24]),
        .O(\add_ln28_8_reg_704[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[27]_i_4 
       (.I0(add_ln28_7_reg_689[24]),
        .I1(\add_ln28_8_reg_704[27]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[23]),
        .I3(mul_ln28_5_reg_674[23]),
        .I4(mul_ln28_7_reg_684[23]),
        .O(\add_ln28_8_reg_704[27]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[27]_i_5 
       (.I0(add_ln28_7_reg_689[23]),
        .I1(\add_ln28_8_reg_704[27]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[22]),
        .I3(mul_ln28_5_reg_674[22]),
        .I4(mul_ln28_7_reg_684[22]),
        .O(\add_ln28_8_reg_704[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[27]_i_6 
       (.I0(\add_ln28_8_reg_704[27]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[31]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[27]),
        .I3(mul_ln28_7_reg_684[26]),
        .I4(mul_ln28_5_reg_674[26]),
        .I5(mul_ln28_6_reg_679[26]),
        .O(\add_ln28_8_reg_704[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[27]_i_7 
       (.I0(\add_ln28_8_reg_704[27]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[27]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[26]),
        .I3(mul_ln28_7_reg_684[25]),
        .I4(mul_ln28_5_reg_674[25]),
        .I5(mul_ln28_6_reg_679[25]),
        .O(\add_ln28_8_reg_704[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[27]_i_8 
       (.I0(\add_ln28_8_reg_704[27]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[27]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[25]),
        .I3(mul_ln28_7_reg_684[24]),
        .I4(mul_ln28_5_reg_674[24]),
        .I5(mul_ln28_6_reg_679[24]),
        .O(\add_ln28_8_reg_704[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[27]_i_9 
       (.I0(\add_ln28_8_reg_704[27]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[27]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[24]),
        .I3(mul_ln28_7_reg_684[23]),
        .I4(mul_ln28_5_reg_674[23]),
        .I5(mul_ln28_6_reg_679[23]),
        .O(\add_ln28_8_reg_704[27]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[31]_i_10 
       (.I0(mul_ln28_6_reg_679[28]),
        .I1(mul_ln28_7_reg_684[28]),
        .I2(mul_ln28_5_reg_674[28]),
        .O(\add_ln28_8_reg_704[31]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[31]_i_11 
       (.I0(mul_ln28_6_reg_679[27]),
        .I1(mul_ln28_7_reg_684[27]),
        .I2(mul_ln28_5_reg_674[27]),
        .O(\add_ln28_8_reg_704[31]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_8_reg_704[31]_i_12 
       (.I0(mul_ln28_7_reg_684[29]),
        .I1(mul_ln28_5_reg_674[29]),
        .I2(mul_ln28_6_reg_679[29]),
        .O(\add_ln28_8_reg_704[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_8_reg_704[31]_i_13 
       (.I0(mul_ln28_5_reg_674[31]),
        .I1(mul_ln28_7_reg_684[31]),
        .I2(mul_ln28_6_reg_679[31]),
        .I3(add_ln28_7_reg_689[31]),
        .O(\add_ln28_8_reg_704[31]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[31]_i_14 
       (.I0(mul_ln28_6_reg_679[30]),
        .I1(mul_ln28_7_reg_684[30]),
        .I2(mul_ln28_5_reg_674[30]),
        .O(\add_ln28_8_reg_704[31]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[31]_i_2 
       (.I0(add_ln28_7_reg_689[29]),
        .I1(\add_ln28_8_reg_704[31]_i_9_n_0 ),
        .I2(mul_ln28_6_reg_679[28]),
        .I3(mul_ln28_5_reg_674[28]),
        .I4(mul_ln28_7_reg_684[28]),
        .O(\add_ln28_8_reg_704[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[31]_i_3 
       (.I0(add_ln28_7_reg_689[28]),
        .I1(\add_ln28_8_reg_704[31]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[27]),
        .I3(mul_ln28_5_reg_674[27]),
        .I4(mul_ln28_7_reg_684[27]),
        .O(\add_ln28_8_reg_704[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[31]_i_4 
       (.I0(add_ln28_7_reg_689[27]),
        .I1(\add_ln28_8_reg_704[31]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[26]),
        .I3(mul_ln28_5_reg_674[26]),
        .I4(mul_ln28_7_reg_684[26]),
        .O(\add_ln28_8_reg_704[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hE187871E871E1E78)) 
    \add_ln28_8_reg_704[31]_i_5 
       (.I0(\add_ln28_8_reg_704[31]_i_12_n_0 ),
        .I1(add_ln28_7_reg_689[30]),
        .I2(\add_ln28_8_reg_704[31]_i_13_n_0 ),
        .I3(mul_ln28_7_reg_684[30]),
        .I4(mul_ln28_5_reg_674[30]),
        .I5(mul_ln28_6_reg_679[30]),
        .O(\add_ln28_8_reg_704[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[31]_i_6 
       (.I0(\add_ln28_8_reg_704[31]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[31]_i_14_n_0 ),
        .I2(add_ln28_7_reg_689[30]),
        .I3(mul_ln28_7_reg_684[29]),
        .I4(mul_ln28_5_reg_674[29]),
        .I5(mul_ln28_6_reg_679[29]),
        .O(\add_ln28_8_reg_704[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[31]_i_7 
       (.I0(\add_ln28_8_reg_704[31]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[31]_i_9_n_0 ),
        .I2(add_ln28_7_reg_689[29]),
        .I3(mul_ln28_7_reg_684[28]),
        .I4(mul_ln28_5_reg_674[28]),
        .I5(mul_ln28_6_reg_679[28]),
        .O(\add_ln28_8_reg_704[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[31]_i_8 
       (.I0(\add_ln28_8_reg_704[31]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[31]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[28]),
        .I3(mul_ln28_7_reg_684[27]),
        .I4(mul_ln28_5_reg_674[27]),
        .I5(mul_ln28_6_reg_679[27]),
        .O(\add_ln28_8_reg_704[31]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[31]_i_9 
       (.I0(mul_ln28_6_reg_679[29]),
        .I1(mul_ln28_7_reg_684[29]),
        .I2(mul_ln28_5_reg_674[29]),
        .O(\add_ln28_8_reg_704[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[3]_i_2 
       (.I0(add_ln28_7_reg_689[2]),
        .I1(\add_ln28_8_reg_704[3]_i_9_n_0 ),
        .I2(mul_ln28_6_reg_679[1]),
        .I3(mul_ln28_5_reg_674[1]),
        .I4(mul_ln28_7_reg_684[1]),
        .O(\add_ln28_8_reg_704[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    \add_ln28_8_reg_704[3]_i_3 
       (.I0(mul_ln28_6_reg_679[1]),
        .I1(mul_ln28_5_reg_674[1]),
        .I2(mul_ln28_7_reg_684[1]),
        .I3(add_ln28_7_reg_689[2]),
        .I4(\add_ln28_8_reg_704[3]_i_9_n_0 ),
        .O(\add_ln28_8_reg_704[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_8_reg_704[3]_i_4 
       (.I0(mul_ln28_5_reg_674[1]),
        .I1(mul_ln28_7_reg_684[1]),
        .I2(mul_ln28_6_reg_679[1]),
        .I3(add_ln28_7_reg_689[1]),
        .O(\add_ln28_8_reg_704[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[3]_i_5 
       (.I0(\add_ln28_8_reg_704[3]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[7]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[3]),
        .I3(mul_ln28_7_reg_684[2]),
        .I4(mul_ln28_5_reg_674[2]),
        .I5(mul_ln28_6_reg_679[2]),
        .O(\add_ln28_8_reg_704[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6999999699969666)) 
    \add_ln28_8_reg_704[3]_i_6 
       (.I0(\add_ln28_8_reg_704[3]_i_9_n_0 ),
        .I1(add_ln28_7_reg_689[2]),
        .I2(mul_ln28_6_reg_679[1]),
        .I3(mul_ln28_7_reg_684[1]),
        .I4(mul_ln28_5_reg_674[1]),
        .I5(add_ln28_7_reg_689[1]),
        .O(\add_ln28_8_reg_704[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h566A)) 
    \add_ln28_8_reg_704[3]_i_7 
       (.I0(\add_ln28_8_reg_704[3]_i_4_n_0 ),
        .I1(mul_ln28_6_reg_679[0]),
        .I2(mul_ln28_5_reg_674[0]),
        .I3(mul_ln28_7_reg_684[0]),
        .O(\add_ln28_8_reg_704[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_8_reg_704[3]_i_8 
       (.I0(mul_ln28_5_reg_674[0]),
        .I1(mul_ln28_7_reg_684[0]),
        .I2(mul_ln28_6_reg_679[0]),
        .I3(add_ln28_7_reg_689[0]),
        .O(\add_ln28_8_reg_704[3]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[3]_i_9 
       (.I0(mul_ln28_6_reg_679[2]),
        .I1(mul_ln28_7_reg_684[2]),
        .I2(mul_ln28_5_reg_674[2]),
        .O(\add_ln28_8_reg_704[3]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[7]_i_10 
       (.I0(mul_ln28_6_reg_679[6]),
        .I1(mul_ln28_7_reg_684[6]),
        .I2(mul_ln28_5_reg_674[6]),
        .O(\add_ln28_8_reg_704[7]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[7]_i_11 
       (.I0(mul_ln28_6_reg_679[5]),
        .I1(mul_ln28_7_reg_684[5]),
        .I2(mul_ln28_5_reg_674[5]),
        .O(\add_ln28_8_reg_704[7]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[7]_i_12 
       (.I0(mul_ln28_6_reg_679[4]),
        .I1(mul_ln28_7_reg_684[4]),
        .I2(mul_ln28_5_reg_674[4]),
        .O(\add_ln28_8_reg_704[7]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_8_reg_704[7]_i_13 
       (.I0(mul_ln28_6_reg_679[3]),
        .I1(mul_ln28_7_reg_684[3]),
        .I2(mul_ln28_5_reg_674[3]),
        .O(\add_ln28_8_reg_704[7]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[7]_i_2 
       (.I0(add_ln28_7_reg_689[6]),
        .I1(\add_ln28_8_reg_704[7]_i_10_n_0 ),
        .I2(mul_ln28_6_reg_679[5]),
        .I3(mul_ln28_5_reg_674[5]),
        .I4(mul_ln28_7_reg_684[5]),
        .O(\add_ln28_8_reg_704[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[7]_i_3 
       (.I0(add_ln28_7_reg_689[5]),
        .I1(\add_ln28_8_reg_704[7]_i_11_n_0 ),
        .I2(mul_ln28_6_reg_679[4]),
        .I3(mul_ln28_5_reg_674[4]),
        .I4(mul_ln28_7_reg_684[4]),
        .O(\add_ln28_8_reg_704[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[7]_i_4 
       (.I0(add_ln28_7_reg_689[4]),
        .I1(\add_ln28_8_reg_704[7]_i_12_n_0 ),
        .I2(mul_ln28_6_reg_679[3]),
        .I3(mul_ln28_5_reg_674[3]),
        .I4(mul_ln28_7_reg_684[3]),
        .O(\add_ln28_8_reg_704[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \add_ln28_8_reg_704[7]_i_5 
       (.I0(add_ln28_7_reg_689[3]),
        .I1(\add_ln28_8_reg_704[7]_i_13_n_0 ),
        .I2(mul_ln28_6_reg_679[2]),
        .I3(mul_ln28_5_reg_674[2]),
        .I4(mul_ln28_7_reg_684[2]),
        .O(\add_ln28_8_reg_704[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[7]_i_6 
       (.I0(\add_ln28_8_reg_704[7]_i_2_n_0 ),
        .I1(\add_ln28_8_reg_704[11]_i_13_n_0 ),
        .I2(add_ln28_7_reg_689[7]),
        .I3(mul_ln28_7_reg_684[6]),
        .I4(mul_ln28_5_reg_674[6]),
        .I5(mul_ln28_6_reg_679[6]),
        .O(\add_ln28_8_reg_704[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[7]_i_7 
       (.I0(\add_ln28_8_reg_704[7]_i_3_n_0 ),
        .I1(\add_ln28_8_reg_704[7]_i_10_n_0 ),
        .I2(add_ln28_7_reg_689[6]),
        .I3(mul_ln28_7_reg_684[5]),
        .I4(mul_ln28_5_reg_674[5]),
        .I5(mul_ln28_6_reg_679[5]),
        .O(\add_ln28_8_reg_704[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[7]_i_8 
       (.I0(\add_ln28_8_reg_704[7]_i_4_n_0 ),
        .I1(\add_ln28_8_reg_704[7]_i_11_n_0 ),
        .I2(add_ln28_7_reg_689[5]),
        .I3(mul_ln28_7_reg_684[4]),
        .I4(mul_ln28_5_reg_674[4]),
        .I5(mul_ln28_6_reg_679[4]),
        .O(\add_ln28_8_reg_704[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \add_ln28_8_reg_704[7]_i_9 
       (.I0(\add_ln28_8_reg_704[7]_i_5_n_0 ),
        .I1(\add_ln28_8_reg_704[7]_i_12_n_0 ),
        .I2(add_ln28_7_reg_689[4]),
        .I3(mul_ln28_7_reg_684[3]),
        .I4(mul_ln28_5_reg_674[3]),
        .I5(mul_ln28_6_reg_679[3]),
        .O(\add_ln28_8_reg_704[7]_i_9_n_0 ));
  FDRE \add_ln28_8_reg_704_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[0]),
        .Q(add_ln28_8_reg_704[0]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[10]),
        .Q(add_ln28_8_reg_704[10]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[11]),
        .Q(add_ln28_8_reg_704[11]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[11]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[7]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[11]_i_1_n_0 ,\add_ln28_8_reg_704_reg[11]_i_1_n_1 ,\add_ln28_8_reg_704_reg[11]_i_1_n_2 ,\add_ln28_8_reg_704_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[11]_i_2_n_0 ,\add_ln28_8_reg_704[11]_i_3_n_0 ,\add_ln28_8_reg_704[11]_i_4_n_0 ,\add_ln28_8_reg_704[11]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[11:8]),
        .S({\add_ln28_8_reg_704[11]_i_6_n_0 ,\add_ln28_8_reg_704[11]_i_7_n_0 ,\add_ln28_8_reg_704[11]_i_8_n_0 ,\add_ln28_8_reg_704[11]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[12]),
        .Q(add_ln28_8_reg_704[12]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[13]),
        .Q(add_ln28_8_reg_704[13]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[14]),
        .Q(add_ln28_8_reg_704[14]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[15]),
        .Q(add_ln28_8_reg_704[15]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[15]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[11]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[15]_i_1_n_0 ,\add_ln28_8_reg_704_reg[15]_i_1_n_1 ,\add_ln28_8_reg_704_reg[15]_i_1_n_2 ,\add_ln28_8_reg_704_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[15]_i_2_n_0 ,\add_ln28_8_reg_704[15]_i_3_n_0 ,\add_ln28_8_reg_704[15]_i_4_n_0 ,\add_ln28_8_reg_704[15]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[15:12]),
        .S({\add_ln28_8_reg_704[15]_i_6_n_0 ,\add_ln28_8_reg_704[15]_i_7_n_0 ,\add_ln28_8_reg_704[15]_i_8_n_0 ,\add_ln28_8_reg_704[15]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[16]),
        .Q(add_ln28_8_reg_704[16]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[17]),
        .Q(add_ln28_8_reg_704[17]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[18]),
        .Q(add_ln28_8_reg_704[18]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[19]),
        .Q(add_ln28_8_reg_704[19]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[19]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[15]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[19]_i_1_n_0 ,\add_ln28_8_reg_704_reg[19]_i_1_n_1 ,\add_ln28_8_reg_704_reg[19]_i_1_n_2 ,\add_ln28_8_reg_704_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[19]_i_2_n_0 ,\add_ln28_8_reg_704[19]_i_3_n_0 ,\add_ln28_8_reg_704[19]_i_4_n_0 ,\add_ln28_8_reg_704[19]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[19:16]),
        .S({\add_ln28_8_reg_704[19]_i_6_n_0 ,\add_ln28_8_reg_704[19]_i_7_n_0 ,\add_ln28_8_reg_704[19]_i_8_n_0 ,\add_ln28_8_reg_704[19]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[1]),
        .Q(add_ln28_8_reg_704[1]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[20]),
        .Q(add_ln28_8_reg_704[20]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[21]),
        .Q(add_ln28_8_reg_704[21]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[22]),
        .Q(add_ln28_8_reg_704[22]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[23]),
        .Q(add_ln28_8_reg_704[23]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[23]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[19]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[23]_i_1_n_0 ,\add_ln28_8_reg_704_reg[23]_i_1_n_1 ,\add_ln28_8_reg_704_reg[23]_i_1_n_2 ,\add_ln28_8_reg_704_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[23]_i_2_n_0 ,\add_ln28_8_reg_704[23]_i_3_n_0 ,\add_ln28_8_reg_704[23]_i_4_n_0 ,\add_ln28_8_reg_704[23]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[23:20]),
        .S({\add_ln28_8_reg_704[23]_i_6_n_0 ,\add_ln28_8_reg_704[23]_i_7_n_0 ,\add_ln28_8_reg_704[23]_i_8_n_0 ,\add_ln28_8_reg_704[23]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[24]),
        .Q(add_ln28_8_reg_704[24]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[25]),
        .Q(add_ln28_8_reg_704[25]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[26]),
        .Q(add_ln28_8_reg_704[26]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[27]),
        .Q(add_ln28_8_reg_704[27]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[27]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[23]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[27]_i_1_n_0 ,\add_ln28_8_reg_704_reg[27]_i_1_n_1 ,\add_ln28_8_reg_704_reg[27]_i_1_n_2 ,\add_ln28_8_reg_704_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[27]_i_2_n_0 ,\add_ln28_8_reg_704[27]_i_3_n_0 ,\add_ln28_8_reg_704[27]_i_4_n_0 ,\add_ln28_8_reg_704[27]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[27:24]),
        .S({\add_ln28_8_reg_704[27]_i_6_n_0 ,\add_ln28_8_reg_704[27]_i_7_n_0 ,\add_ln28_8_reg_704[27]_i_8_n_0 ,\add_ln28_8_reg_704[27]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[28]),
        .Q(add_ln28_8_reg_704[28]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[29]),
        .Q(add_ln28_8_reg_704[29]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[2]),
        .Q(add_ln28_8_reg_704[2]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[30]),
        .Q(add_ln28_8_reg_704[30]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[31]),
        .Q(add_ln28_8_reg_704[31]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[31]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[27]_i_1_n_0 ),
        .CO({\NLW_add_ln28_8_reg_704_reg[31]_i_1_CO_UNCONNECTED [3],\add_ln28_8_reg_704_reg[31]_i_1_n_1 ,\add_ln28_8_reg_704_reg[31]_i_1_n_2 ,\add_ln28_8_reg_704_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\add_ln28_8_reg_704[31]_i_2_n_0 ,\add_ln28_8_reg_704[31]_i_3_n_0 ,\add_ln28_8_reg_704[31]_i_4_n_0 }),
        .O(add_ln28_8_fu_475_p2[31:28]),
        .S({\add_ln28_8_reg_704[31]_i_5_n_0 ,\add_ln28_8_reg_704[31]_i_6_n_0 ,\add_ln28_8_reg_704[31]_i_7_n_0 ,\add_ln28_8_reg_704[31]_i_8_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[3]),
        .Q(add_ln28_8_reg_704[3]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\add_ln28_8_reg_704_reg[3]_i_1_n_0 ,\add_ln28_8_reg_704_reg[3]_i_1_n_1 ,\add_ln28_8_reg_704_reg[3]_i_1_n_2 ,\add_ln28_8_reg_704_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[3]_i_2_n_0 ,\add_ln28_8_reg_704[3]_i_3_n_0 ,\add_ln28_8_reg_704[3]_i_4_n_0 ,add_ln28_7_reg_689[0]}),
        .O(add_ln28_8_fu_475_p2[3:0]),
        .S({\add_ln28_8_reg_704[3]_i_5_n_0 ,\add_ln28_8_reg_704[3]_i_6_n_0 ,\add_ln28_8_reg_704[3]_i_7_n_0 ,\add_ln28_8_reg_704[3]_i_8_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[4]),
        .Q(add_ln28_8_reg_704[4]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[5]),
        .Q(add_ln28_8_reg_704[5]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[6]),
        .Q(add_ln28_8_reg_704[6]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[7]),
        .Q(add_ln28_8_reg_704[7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_8_reg_704_reg[7]_i_1 
       (.CI(\add_ln28_8_reg_704_reg[3]_i_1_n_0 ),
        .CO({\add_ln28_8_reg_704_reg[7]_i_1_n_0 ,\add_ln28_8_reg_704_reg[7]_i_1_n_1 ,\add_ln28_8_reg_704_reg[7]_i_1_n_2 ,\add_ln28_8_reg_704_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_8_reg_704[7]_i_2_n_0 ,\add_ln28_8_reg_704[7]_i_3_n_0 ,\add_ln28_8_reg_704[7]_i_4_n_0 ,\add_ln28_8_reg_704[7]_i_5_n_0 }),
        .O(add_ln28_8_fu_475_p2[7:4]),
        .S({\add_ln28_8_reg_704[7]_i_6_n_0 ,\add_ln28_8_reg_704[7]_i_7_n_0 ,\add_ln28_8_reg_704[7]_i_8_n_0 ,\add_ln28_8_reg_704[7]_i_9_n_0 }));
  FDRE \add_ln28_8_reg_704_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[8]),
        .Q(add_ln28_8_reg_704[8]),
        .R(1'b0));
  FDRE \add_ln28_8_reg_704_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_8_fu_475_p2[9]),
        .Q(add_ln28_8_reg_704[9]),
        .R(1'b0));
  (* HLUTNM = "lutpair64" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[11]_i_2 
       (.I0(add_ln28_reg_694[10]),
        .I1(add_ln28_2_reg_699[10]),
        .I2(add_ln28_8_reg_704[10]),
        .O(\add_ln28_9_reg_709[11]_i_2_n_0 ));
  (* HLUTNM = "lutpair63" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[11]_i_3 
       (.I0(add_ln28_reg_694[9]),
        .I1(add_ln28_2_reg_699[9]),
        .I2(add_ln28_8_reg_704[9]),
        .O(\add_ln28_9_reg_709[11]_i_3_n_0 ));
  (* HLUTNM = "lutpair62" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[11]_i_4 
       (.I0(add_ln28_reg_694[8]),
        .I1(add_ln28_2_reg_699[8]),
        .I2(add_ln28_8_reg_704[8]),
        .O(\add_ln28_9_reg_709[11]_i_4_n_0 ));
  (* HLUTNM = "lutpair61" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[11]_i_5 
       (.I0(add_ln28_reg_694[7]),
        .I1(add_ln28_2_reg_699[7]),
        .I2(add_ln28_8_reg_704[7]),
        .O(\add_ln28_9_reg_709[11]_i_5_n_0 ));
  (* HLUTNM = "lutpair65" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[11]_i_6 
       (.I0(add_ln28_reg_694[11]),
        .I1(add_ln28_2_reg_699[11]),
        .I2(add_ln28_8_reg_704[11]),
        .I3(\add_ln28_9_reg_709[11]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[11]_i_6_n_0 ));
  (* HLUTNM = "lutpair64" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[11]_i_7 
       (.I0(add_ln28_reg_694[10]),
        .I1(add_ln28_2_reg_699[10]),
        .I2(add_ln28_8_reg_704[10]),
        .I3(\add_ln28_9_reg_709[11]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[11]_i_7_n_0 ));
  (* HLUTNM = "lutpair63" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[11]_i_8 
       (.I0(add_ln28_reg_694[9]),
        .I1(add_ln28_2_reg_699[9]),
        .I2(add_ln28_8_reg_704[9]),
        .I3(\add_ln28_9_reg_709[11]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[11]_i_8_n_0 ));
  (* HLUTNM = "lutpair62" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[11]_i_9 
       (.I0(add_ln28_reg_694[8]),
        .I1(add_ln28_2_reg_699[8]),
        .I2(add_ln28_8_reg_704[8]),
        .I3(\add_ln28_9_reg_709[11]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[11]_i_9_n_0 ));
  (* HLUTNM = "lutpair68" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[15]_i_2 
       (.I0(add_ln28_reg_694[14]),
        .I1(add_ln28_2_reg_699[14]),
        .I2(add_ln28_8_reg_704[14]),
        .O(\add_ln28_9_reg_709[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair67" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[15]_i_3 
       (.I0(add_ln28_reg_694[13]),
        .I1(add_ln28_2_reg_699[13]),
        .I2(add_ln28_8_reg_704[13]),
        .O(\add_ln28_9_reg_709[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair66" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[15]_i_4 
       (.I0(add_ln28_reg_694[12]),
        .I1(add_ln28_2_reg_699[12]),
        .I2(add_ln28_8_reg_704[12]),
        .O(\add_ln28_9_reg_709[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair65" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[15]_i_5 
       (.I0(add_ln28_reg_694[11]),
        .I1(add_ln28_2_reg_699[11]),
        .I2(add_ln28_8_reg_704[11]),
        .O(\add_ln28_9_reg_709[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair69" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[15]_i_6 
       (.I0(add_ln28_reg_694[15]),
        .I1(add_ln28_2_reg_699[15]),
        .I2(add_ln28_8_reg_704[15]),
        .I3(\add_ln28_9_reg_709[15]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair68" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[15]_i_7 
       (.I0(add_ln28_reg_694[14]),
        .I1(add_ln28_2_reg_699[14]),
        .I2(add_ln28_8_reg_704[14]),
        .I3(\add_ln28_9_reg_709[15]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair67" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[15]_i_8 
       (.I0(add_ln28_reg_694[13]),
        .I1(add_ln28_2_reg_699[13]),
        .I2(add_ln28_8_reg_704[13]),
        .I3(\add_ln28_9_reg_709[15]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair66" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[15]_i_9 
       (.I0(add_ln28_reg_694[12]),
        .I1(add_ln28_2_reg_699[12]),
        .I2(add_ln28_8_reg_704[12]),
        .I3(\add_ln28_9_reg_709[15]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair72" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[19]_i_2 
       (.I0(add_ln28_reg_694[18]),
        .I1(add_ln28_2_reg_699[18]),
        .I2(add_ln28_8_reg_704[18]),
        .O(\add_ln28_9_reg_709[19]_i_2_n_0 ));
  (* HLUTNM = "lutpair71" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[19]_i_3 
       (.I0(add_ln28_reg_694[17]),
        .I1(add_ln28_2_reg_699[17]),
        .I2(add_ln28_8_reg_704[17]),
        .O(\add_ln28_9_reg_709[19]_i_3_n_0 ));
  (* HLUTNM = "lutpair70" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[19]_i_4 
       (.I0(add_ln28_reg_694[16]),
        .I1(add_ln28_2_reg_699[16]),
        .I2(add_ln28_8_reg_704[16]),
        .O(\add_ln28_9_reg_709[19]_i_4_n_0 ));
  (* HLUTNM = "lutpair69" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[19]_i_5 
       (.I0(add_ln28_reg_694[15]),
        .I1(add_ln28_2_reg_699[15]),
        .I2(add_ln28_8_reg_704[15]),
        .O(\add_ln28_9_reg_709[19]_i_5_n_0 ));
  (* HLUTNM = "lutpair73" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[19]_i_6 
       (.I0(add_ln28_reg_694[19]),
        .I1(add_ln28_2_reg_699[19]),
        .I2(add_ln28_8_reg_704[19]),
        .I3(\add_ln28_9_reg_709[19]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[19]_i_6_n_0 ));
  (* HLUTNM = "lutpair72" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[19]_i_7 
       (.I0(add_ln28_reg_694[18]),
        .I1(add_ln28_2_reg_699[18]),
        .I2(add_ln28_8_reg_704[18]),
        .I3(\add_ln28_9_reg_709[19]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[19]_i_7_n_0 ));
  (* HLUTNM = "lutpair71" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[19]_i_8 
       (.I0(add_ln28_reg_694[17]),
        .I1(add_ln28_2_reg_699[17]),
        .I2(add_ln28_8_reg_704[17]),
        .I3(\add_ln28_9_reg_709[19]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[19]_i_8_n_0 ));
  (* HLUTNM = "lutpair70" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[19]_i_9 
       (.I0(add_ln28_reg_694[16]),
        .I1(add_ln28_2_reg_699[16]),
        .I2(add_ln28_8_reg_704[16]),
        .I3(\add_ln28_9_reg_709[19]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[19]_i_9_n_0 ));
  (* HLUTNM = "lutpair76" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[23]_i_2 
       (.I0(add_ln28_reg_694[22]),
        .I1(add_ln28_2_reg_699[22]),
        .I2(add_ln28_8_reg_704[22]),
        .O(\add_ln28_9_reg_709[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair75" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[23]_i_3 
       (.I0(add_ln28_reg_694[21]),
        .I1(add_ln28_2_reg_699[21]),
        .I2(add_ln28_8_reg_704[21]),
        .O(\add_ln28_9_reg_709[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair74" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[23]_i_4 
       (.I0(add_ln28_reg_694[20]),
        .I1(add_ln28_2_reg_699[20]),
        .I2(add_ln28_8_reg_704[20]),
        .O(\add_ln28_9_reg_709[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair73" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[23]_i_5 
       (.I0(add_ln28_reg_694[19]),
        .I1(add_ln28_2_reg_699[19]),
        .I2(add_ln28_8_reg_704[19]),
        .O(\add_ln28_9_reg_709[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair77" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[23]_i_6 
       (.I0(add_ln28_reg_694[23]),
        .I1(add_ln28_2_reg_699[23]),
        .I2(add_ln28_8_reg_704[23]),
        .I3(\add_ln28_9_reg_709[23]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair76" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[23]_i_7 
       (.I0(add_ln28_reg_694[22]),
        .I1(add_ln28_2_reg_699[22]),
        .I2(add_ln28_8_reg_704[22]),
        .I3(\add_ln28_9_reg_709[23]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair75" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[23]_i_8 
       (.I0(add_ln28_reg_694[21]),
        .I1(add_ln28_2_reg_699[21]),
        .I2(add_ln28_8_reg_704[21]),
        .I3(\add_ln28_9_reg_709[23]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair74" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[23]_i_9 
       (.I0(add_ln28_reg_694[20]),
        .I1(add_ln28_2_reg_699[20]),
        .I2(add_ln28_8_reg_704[20]),
        .I3(\add_ln28_9_reg_709[23]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[23]_i_9_n_0 ));
  (* HLUTNM = "lutpair80" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[27]_i_2 
       (.I0(add_ln28_reg_694[26]),
        .I1(add_ln28_2_reg_699[26]),
        .I2(add_ln28_8_reg_704[26]),
        .O(\add_ln28_9_reg_709[27]_i_2_n_0 ));
  (* HLUTNM = "lutpair79" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[27]_i_3 
       (.I0(add_ln28_reg_694[25]),
        .I1(add_ln28_2_reg_699[25]),
        .I2(add_ln28_8_reg_704[25]),
        .O(\add_ln28_9_reg_709[27]_i_3_n_0 ));
  (* HLUTNM = "lutpair78" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[27]_i_4 
       (.I0(add_ln28_reg_694[24]),
        .I1(add_ln28_2_reg_699[24]),
        .I2(add_ln28_8_reg_704[24]),
        .O(\add_ln28_9_reg_709[27]_i_4_n_0 ));
  (* HLUTNM = "lutpair77" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[27]_i_5 
       (.I0(add_ln28_reg_694[23]),
        .I1(add_ln28_2_reg_699[23]),
        .I2(add_ln28_8_reg_704[23]),
        .O(\add_ln28_9_reg_709[27]_i_5_n_0 ));
  (* HLUTNM = "lutpair81" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[27]_i_6 
       (.I0(add_ln28_reg_694[27]),
        .I1(add_ln28_2_reg_699[27]),
        .I2(add_ln28_8_reg_704[27]),
        .I3(\add_ln28_9_reg_709[27]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[27]_i_6_n_0 ));
  (* HLUTNM = "lutpair80" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[27]_i_7 
       (.I0(add_ln28_reg_694[26]),
        .I1(add_ln28_2_reg_699[26]),
        .I2(add_ln28_8_reg_704[26]),
        .I3(\add_ln28_9_reg_709[27]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[27]_i_7_n_0 ));
  (* HLUTNM = "lutpair79" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[27]_i_8 
       (.I0(add_ln28_reg_694[25]),
        .I1(add_ln28_2_reg_699[25]),
        .I2(add_ln28_8_reg_704[25]),
        .I3(\add_ln28_9_reg_709[27]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[27]_i_8_n_0 ));
  (* HLUTNM = "lutpair78" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[27]_i_9 
       (.I0(add_ln28_reg_694[24]),
        .I1(add_ln28_2_reg_699[24]),
        .I2(add_ln28_8_reg_704[24]),
        .I3(\add_ln28_9_reg_709[27]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[27]_i_9_n_0 ));
  (* HLUTNM = "lutpair83" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[31]_i_2 
       (.I0(add_ln28_reg_694[29]),
        .I1(add_ln28_2_reg_699[29]),
        .I2(add_ln28_8_reg_704[29]),
        .O(\add_ln28_9_reg_709[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair82" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[31]_i_3 
       (.I0(add_ln28_reg_694[28]),
        .I1(add_ln28_2_reg_699[28]),
        .I2(add_ln28_8_reg_704[28]),
        .O(\add_ln28_9_reg_709[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair81" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[31]_i_4 
       (.I0(add_ln28_reg_694[27]),
        .I1(add_ln28_2_reg_699[27]),
        .I2(add_ln28_8_reg_704[27]),
        .O(\add_ln28_9_reg_709[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h17E8E817E81717E8)) 
    \add_ln28_9_reg_709[31]_i_5 
       (.I0(add_ln28_8_reg_704[30]),
        .I1(add_ln28_2_reg_699[30]),
        .I2(add_ln28_reg_694[30]),
        .I3(add_ln28_2_reg_699[31]),
        .I4(add_ln28_reg_694[31]),
        .I5(add_ln28_8_reg_704[31]),
        .O(\add_ln28_9_reg_709[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[31]_i_6 
       (.I0(\add_ln28_9_reg_709[31]_i_2_n_0 ),
        .I1(add_ln28_2_reg_699[30]),
        .I2(add_ln28_reg_694[30]),
        .I3(add_ln28_8_reg_704[30]),
        .O(\add_ln28_9_reg_709[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair83" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[31]_i_7 
       (.I0(add_ln28_reg_694[29]),
        .I1(add_ln28_2_reg_699[29]),
        .I2(add_ln28_8_reg_704[29]),
        .I3(\add_ln28_9_reg_709[31]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair82" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[31]_i_8 
       (.I0(add_ln28_reg_694[28]),
        .I1(add_ln28_2_reg_699[28]),
        .I2(add_ln28_8_reg_704[28]),
        .I3(\add_ln28_9_reg_709[31]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair56" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[3]_i_2 
       (.I0(add_ln28_reg_694[2]),
        .I1(add_ln28_2_reg_699[2]),
        .I2(add_ln28_8_reg_704[2]),
        .O(\add_ln28_9_reg_709[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[3]_i_3 
       (.I0(add_ln28_reg_694[1]),
        .I1(add_ln28_2_reg_699[1]),
        .I2(add_ln28_8_reg_704[1]),
        .O(\add_ln28_9_reg_709[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[3]_i_4 
       (.I0(add_ln28_reg_694[0]),
        .I1(add_ln28_2_reg_699[0]),
        .I2(add_ln28_8_reg_704[0]),
        .O(\add_ln28_9_reg_709[3]_i_4_n_0 ));
  (* HLUTNM = "lutpair57" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[3]_i_5 
       (.I0(add_ln28_reg_694[3]),
        .I1(add_ln28_2_reg_699[3]),
        .I2(add_ln28_8_reg_704[3]),
        .I3(\add_ln28_9_reg_709[3]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[3]_i_5_n_0 ));
  (* HLUTNM = "lutpair56" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[3]_i_6 
       (.I0(add_ln28_reg_694[2]),
        .I1(add_ln28_2_reg_699[2]),
        .I2(add_ln28_8_reg_704[2]),
        .I3(\add_ln28_9_reg_709[3]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[3]_i_7 
       (.I0(add_ln28_reg_694[1]),
        .I1(add_ln28_2_reg_699[1]),
        .I2(add_ln28_8_reg_704[1]),
        .I3(\add_ln28_9_reg_709[3]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[3]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \add_ln28_9_reg_709[3]_i_8 
       (.I0(add_ln28_reg_694[0]),
        .I1(add_ln28_2_reg_699[0]),
        .I2(add_ln28_8_reg_704[0]),
        .O(\add_ln28_9_reg_709[3]_i_8_n_0 ));
  (* HLUTNM = "lutpair60" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[7]_i_2 
       (.I0(add_ln28_reg_694[6]),
        .I1(add_ln28_2_reg_699[6]),
        .I2(add_ln28_8_reg_704[6]),
        .O(\add_ln28_9_reg_709[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair59" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[7]_i_3 
       (.I0(add_ln28_reg_694[5]),
        .I1(add_ln28_2_reg_699[5]),
        .I2(add_ln28_8_reg_704[5]),
        .O(\add_ln28_9_reg_709[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair58" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[7]_i_4 
       (.I0(add_ln28_reg_694[4]),
        .I1(add_ln28_2_reg_699[4]),
        .I2(add_ln28_8_reg_704[4]),
        .O(\add_ln28_9_reg_709[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair57" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \add_ln28_9_reg_709[7]_i_5 
       (.I0(add_ln28_reg_694[3]),
        .I1(add_ln28_2_reg_699[3]),
        .I2(add_ln28_8_reg_704[3]),
        .O(\add_ln28_9_reg_709[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair61" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[7]_i_6 
       (.I0(add_ln28_reg_694[7]),
        .I1(add_ln28_2_reg_699[7]),
        .I2(add_ln28_8_reg_704[7]),
        .I3(\add_ln28_9_reg_709[7]_i_2_n_0 ),
        .O(\add_ln28_9_reg_709[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair60" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[7]_i_7 
       (.I0(add_ln28_reg_694[6]),
        .I1(add_ln28_2_reg_699[6]),
        .I2(add_ln28_8_reg_704[6]),
        .I3(\add_ln28_9_reg_709[7]_i_3_n_0 ),
        .O(\add_ln28_9_reg_709[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair59" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[7]_i_8 
       (.I0(add_ln28_reg_694[5]),
        .I1(add_ln28_2_reg_699[5]),
        .I2(add_ln28_8_reg_704[5]),
        .I3(\add_ln28_9_reg_709[7]_i_4_n_0 ),
        .O(\add_ln28_9_reg_709[7]_i_8_n_0 ));
  (* HLUTNM = "lutpair58" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \add_ln28_9_reg_709[7]_i_9 
       (.I0(add_ln28_reg_694[4]),
        .I1(add_ln28_2_reg_699[4]),
        .I2(add_ln28_8_reg_704[4]),
        .I3(\add_ln28_9_reg_709[7]_i_5_n_0 ),
        .O(\add_ln28_9_reg_709[7]_i_9_n_0 ));
  FDRE \add_ln28_9_reg_709_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[0]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [0]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[10]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [10]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[11]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [11]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[11]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[7]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[11]_i_1_n_0 ,\add_ln28_9_reg_709_reg[11]_i_1_n_1 ,\add_ln28_9_reg_709_reg[11]_i_1_n_2 ,\add_ln28_9_reg_709_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[11]_i_2_n_0 ,\add_ln28_9_reg_709[11]_i_3_n_0 ,\add_ln28_9_reg_709[11]_i_4_n_0 ,\add_ln28_9_reg_709[11]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[11:8]),
        .S({\add_ln28_9_reg_709[11]_i_6_n_0 ,\add_ln28_9_reg_709[11]_i_7_n_0 ,\add_ln28_9_reg_709[11]_i_8_n_0 ,\add_ln28_9_reg_709[11]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[12]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [12]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[13]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [13]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[14]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [14]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[15]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [15]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[15]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[11]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[15]_i_1_n_0 ,\add_ln28_9_reg_709_reg[15]_i_1_n_1 ,\add_ln28_9_reg_709_reg[15]_i_1_n_2 ,\add_ln28_9_reg_709_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[15]_i_2_n_0 ,\add_ln28_9_reg_709[15]_i_3_n_0 ,\add_ln28_9_reg_709[15]_i_4_n_0 ,\add_ln28_9_reg_709[15]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[15:12]),
        .S({\add_ln28_9_reg_709[15]_i_6_n_0 ,\add_ln28_9_reg_709[15]_i_7_n_0 ,\add_ln28_9_reg_709[15]_i_8_n_0 ,\add_ln28_9_reg_709[15]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[16]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [16]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[17]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [17]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[18]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [18]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[19]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [19]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[19]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[15]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[19]_i_1_n_0 ,\add_ln28_9_reg_709_reg[19]_i_1_n_1 ,\add_ln28_9_reg_709_reg[19]_i_1_n_2 ,\add_ln28_9_reg_709_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[19]_i_2_n_0 ,\add_ln28_9_reg_709[19]_i_3_n_0 ,\add_ln28_9_reg_709[19]_i_4_n_0 ,\add_ln28_9_reg_709[19]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[19:16]),
        .S({\add_ln28_9_reg_709[19]_i_6_n_0 ,\add_ln28_9_reg_709[19]_i_7_n_0 ,\add_ln28_9_reg_709[19]_i_8_n_0 ,\add_ln28_9_reg_709[19]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[1]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [1]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[20]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [20]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[21]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [21]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[22]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [22]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[23]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [23]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[23]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[19]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[23]_i_1_n_0 ,\add_ln28_9_reg_709_reg[23]_i_1_n_1 ,\add_ln28_9_reg_709_reg[23]_i_1_n_2 ,\add_ln28_9_reg_709_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[23]_i_2_n_0 ,\add_ln28_9_reg_709[23]_i_3_n_0 ,\add_ln28_9_reg_709[23]_i_4_n_0 ,\add_ln28_9_reg_709[23]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[23:20]),
        .S({\add_ln28_9_reg_709[23]_i_6_n_0 ,\add_ln28_9_reg_709[23]_i_7_n_0 ,\add_ln28_9_reg_709[23]_i_8_n_0 ,\add_ln28_9_reg_709[23]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[24]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [24]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[25]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [25]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[26]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [26]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[27]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [27]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[27]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[23]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[27]_i_1_n_0 ,\add_ln28_9_reg_709_reg[27]_i_1_n_1 ,\add_ln28_9_reg_709_reg[27]_i_1_n_2 ,\add_ln28_9_reg_709_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[27]_i_2_n_0 ,\add_ln28_9_reg_709[27]_i_3_n_0 ,\add_ln28_9_reg_709[27]_i_4_n_0 ,\add_ln28_9_reg_709[27]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[27:24]),
        .S({\add_ln28_9_reg_709[27]_i_6_n_0 ,\add_ln28_9_reg_709[27]_i_7_n_0 ,\add_ln28_9_reg_709[27]_i_8_n_0 ,\add_ln28_9_reg_709[27]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[28]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [28]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[29]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [29]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[2]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [2]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[30]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [30]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[31]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [31]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[31]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[27]_i_1_n_0 ),
        .CO({\NLW_add_ln28_9_reg_709_reg[31]_i_1_CO_UNCONNECTED [3],\add_ln28_9_reg_709_reg[31]_i_1_n_1 ,\add_ln28_9_reg_709_reg[31]_i_1_n_2 ,\add_ln28_9_reg_709_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\add_ln28_9_reg_709[31]_i_2_n_0 ,\add_ln28_9_reg_709[31]_i_3_n_0 ,\add_ln28_9_reg_709[31]_i_4_n_0 }),
        .O(add_ln28_9_fu_484_p2[31:28]),
        .S({\add_ln28_9_reg_709[31]_i_5_n_0 ,\add_ln28_9_reg_709[31]_i_6_n_0 ,\add_ln28_9_reg_709[31]_i_7_n_0 ,\add_ln28_9_reg_709[31]_i_8_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[3]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [3]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\add_ln28_9_reg_709_reg[3]_i_1_n_0 ,\add_ln28_9_reg_709_reg[3]_i_1_n_1 ,\add_ln28_9_reg_709_reg[3]_i_1_n_2 ,\add_ln28_9_reg_709_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[3]_i_2_n_0 ,\add_ln28_9_reg_709[3]_i_3_n_0 ,\add_ln28_9_reg_709[3]_i_4_n_0 ,1'b0}),
        .O(add_ln28_9_fu_484_p2[3:0]),
        .S({\add_ln28_9_reg_709[3]_i_5_n_0 ,\add_ln28_9_reg_709[3]_i_6_n_0 ,\add_ln28_9_reg_709[3]_i_7_n_0 ,\add_ln28_9_reg_709[3]_i_8_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[4]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [4]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[5]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [5]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[6]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [6]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[7]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_9_reg_709_reg[7]_i_1 
       (.CI(\add_ln28_9_reg_709_reg[3]_i_1_n_0 ),
        .CO({\add_ln28_9_reg_709_reg[7]_i_1_n_0 ,\add_ln28_9_reg_709_reg[7]_i_1_n_1 ,\add_ln28_9_reg_709_reg[7]_i_1_n_2 ,\add_ln28_9_reg_709_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\add_ln28_9_reg_709[7]_i_2_n_0 ,\add_ln28_9_reg_709[7]_i_3_n_0 ,\add_ln28_9_reg_709[7]_i_4_n_0 ,\add_ln28_9_reg_709[7]_i_5_n_0 }),
        .O(add_ln28_9_fu_484_p2[7:4]),
        .S({\add_ln28_9_reg_709[7]_i_6_n_0 ,\add_ln28_9_reg_709[7]_i_7_n_0 ,\add_ln28_9_reg_709[7]_i_8_n_0 ,\add_ln28_9_reg_709[7]_i_9_n_0 }));
  FDRE \add_ln28_9_reg_709_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[8]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [8]),
        .R(1'b0));
  FDRE \add_ln28_9_reg_709_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_9_fu_484_p2[9]),
        .Q(\add_ln28_9_reg_709_reg[31]_0 [9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[11]_i_2 
       (.I0(mul_ln28_1_reg_654[11]),
        .I1(mul_ln28_reg_649[11]),
        .O(\add_ln28_reg_694[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[11]_i_3 
       (.I0(mul_ln28_1_reg_654[10]),
        .I1(mul_ln28_reg_649[10]),
        .O(\add_ln28_reg_694[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[11]_i_4 
       (.I0(mul_ln28_1_reg_654[9]),
        .I1(mul_ln28_reg_649[9]),
        .O(\add_ln28_reg_694[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[11]_i_5 
       (.I0(mul_ln28_1_reg_654[8]),
        .I1(mul_ln28_reg_649[8]),
        .O(\add_ln28_reg_694[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[15]_i_2 
       (.I0(mul_ln28_1_reg_654[15]),
        .I1(mul_ln28_reg_649[15]),
        .O(\add_ln28_reg_694[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[15]_i_3 
       (.I0(mul_ln28_1_reg_654[14]),
        .I1(mul_ln28_reg_649[14]),
        .O(\add_ln28_reg_694[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[15]_i_4 
       (.I0(mul_ln28_1_reg_654[13]),
        .I1(mul_ln28_reg_649[13]),
        .O(\add_ln28_reg_694[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[15]_i_5 
       (.I0(mul_ln28_1_reg_654[12]),
        .I1(mul_ln28_reg_649[12]),
        .O(\add_ln28_reg_694[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[19]_i_2 
       (.I0(mul_ln28_1_reg_654[19]),
        .I1(mul_ln28_reg_649[19]),
        .O(\add_ln28_reg_694[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[19]_i_3 
       (.I0(mul_ln28_1_reg_654[18]),
        .I1(mul_ln28_reg_649[18]),
        .O(\add_ln28_reg_694[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[19]_i_4 
       (.I0(mul_ln28_1_reg_654[17]),
        .I1(mul_ln28_reg_649[17]),
        .O(\add_ln28_reg_694[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[19]_i_5 
       (.I0(mul_ln28_1_reg_654[16]),
        .I1(mul_ln28_reg_649[16]),
        .O(\add_ln28_reg_694[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[23]_i_2 
       (.I0(mul_ln28_1_reg_654[23]),
        .I1(mul_ln28_reg_649[23]),
        .O(\add_ln28_reg_694[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[23]_i_3 
       (.I0(mul_ln28_1_reg_654[22]),
        .I1(mul_ln28_reg_649[22]),
        .O(\add_ln28_reg_694[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[23]_i_4 
       (.I0(mul_ln28_1_reg_654[21]),
        .I1(mul_ln28_reg_649[21]),
        .O(\add_ln28_reg_694[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[23]_i_5 
       (.I0(mul_ln28_1_reg_654[20]),
        .I1(mul_ln28_reg_649[20]),
        .O(\add_ln28_reg_694[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[27]_i_2 
       (.I0(mul_ln28_1_reg_654[27]),
        .I1(mul_ln28_reg_649[27]),
        .O(\add_ln28_reg_694[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[27]_i_3 
       (.I0(mul_ln28_1_reg_654[26]),
        .I1(mul_ln28_reg_649[26]),
        .O(\add_ln28_reg_694[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[27]_i_4 
       (.I0(mul_ln28_1_reg_654[25]),
        .I1(mul_ln28_reg_649[25]),
        .O(\add_ln28_reg_694[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[27]_i_5 
       (.I0(mul_ln28_1_reg_654[24]),
        .I1(mul_ln28_reg_649[24]),
        .O(\add_ln28_reg_694[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[31]_i_2 
       (.I0(mul_ln28_1_reg_654[31]),
        .I1(mul_ln28_reg_649[31]),
        .O(\add_ln28_reg_694[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[31]_i_3 
       (.I0(mul_ln28_1_reg_654[30]),
        .I1(mul_ln28_reg_649[30]),
        .O(\add_ln28_reg_694[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[31]_i_4 
       (.I0(mul_ln28_1_reg_654[29]),
        .I1(mul_ln28_reg_649[29]),
        .O(\add_ln28_reg_694[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[31]_i_5 
       (.I0(mul_ln28_1_reg_654[28]),
        .I1(mul_ln28_reg_649[28]),
        .O(\add_ln28_reg_694[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[3]_i_2 
       (.I0(mul_ln28_1_reg_654[3]),
        .I1(mul_ln28_reg_649[3]),
        .O(\add_ln28_reg_694[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[3]_i_3 
       (.I0(mul_ln28_1_reg_654[2]),
        .I1(mul_ln28_reg_649[2]),
        .O(\add_ln28_reg_694[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[3]_i_4 
       (.I0(mul_ln28_1_reg_654[1]),
        .I1(mul_ln28_reg_649[1]),
        .O(\add_ln28_reg_694[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[3]_i_5 
       (.I0(mul_ln28_1_reg_654[0]),
        .I1(mul_ln28_reg_649[0]),
        .O(\add_ln28_reg_694[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[7]_i_2 
       (.I0(mul_ln28_1_reg_654[7]),
        .I1(mul_ln28_reg_649[7]),
        .O(\add_ln28_reg_694[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[7]_i_3 
       (.I0(mul_ln28_1_reg_654[6]),
        .I1(mul_ln28_reg_649[6]),
        .O(\add_ln28_reg_694[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[7]_i_4 
       (.I0(mul_ln28_1_reg_654[5]),
        .I1(mul_ln28_reg_649[5]),
        .O(\add_ln28_reg_694[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \add_ln28_reg_694[7]_i_5 
       (.I0(mul_ln28_1_reg_654[4]),
        .I1(mul_ln28_reg_649[4]),
        .O(\add_ln28_reg_694[7]_i_5_n_0 ));
  FDRE \add_ln28_reg_694_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[0]),
        .Q(add_ln28_reg_694[0]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[10]),
        .Q(add_ln28_reg_694[10]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[11]),
        .Q(add_ln28_reg_694[11]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[11]_i_1 
       (.CI(\add_ln28_reg_694_reg[7]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[11]_i_1_n_0 ,\add_ln28_reg_694_reg[11]_i_1_n_1 ,\add_ln28_reg_694_reg[11]_i_1_n_2 ,\add_ln28_reg_694_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[11:8]),
        .O(add_ln28_fu_453_p2[11:8]),
        .S({\add_ln28_reg_694[11]_i_2_n_0 ,\add_ln28_reg_694[11]_i_3_n_0 ,\add_ln28_reg_694[11]_i_4_n_0 ,\add_ln28_reg_694[11]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[12]),
        .Q(add_ln28_reg_694[12]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[13]),
        .Q(add_ln28_reg_694[13]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[14]),
        .Q(add_ln28_reg_694[14]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[15]),
        .Q(add_ln28_reg_694[15]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[15]_i_1 
       (.CI(\add_ln28_reg_694_reg[11]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[15]_i_1_n_0 ,\add_ln28_reg_694_reg[15]_i_1_n_1 ,\add_ln28_reg_694_reg[15]_i_1_n_2 ,\add_ln28_reg_694_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[15:12]),
        .O(add_ln28_fu_453_p2[15:12]),
        .S({\add_ln28_reg_694[15]_i_2_n_0 ,\add_ln28_reg_694[15]_i_3_n_0 ,\add_ln28_reg_694[15]_i_4_n_0 ,\add_ln28_reg_694[15]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[16]),
        .Q(add_ln28_reg_694[16]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[17]),
        .Q(add_ln28_reg_694[17]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[18]),
        .Q(add_ln28_reg_694[18]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[19]),
        .Q(add_ln28_reg_694[19]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[19]_i_1 
       (.CI(\add_ln28_reg_694_reg[15]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[19]_i_1_n_0 ,\add_ln28_reg_694_reg[19]_i_1_n_1 ,\add_ln28_reg_694_reg[19]_i_1_n_2 ,\add_ln28_reg_694_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[19:16]),
        .O(add_ln28_fu_453_p2[19:16]),
        .S({\add_ln28_reg_694[19]_i_2_n_0 ,\add_ln28_reg_694[19]_i_3_n_0 ,\add_ln28_reg_694[19]_i_4_n_0 ,\add_ln28_reg_694[19]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[1]),
        .Q(add_ln28_reg_694[1]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[20]),
        .Q(add_ln28_reg_694[20]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[21]),
        .Q(add_ln28_reg_694[21]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[22]),
        .Q(add_ln28_reg_694[22]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[23]),
        .Q(add_ln28_reg_694[23]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[23]_i_1 
       (.CI(\add_ln28_reg_694_reg[19]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[23]_i_1_n_0 ,\add_ln28_reg_694_reg[23]_i_1_n_1 ,\add_ln28_reg_694_reg[23]_i_1_n_2 ,\add_ln28_reg_694_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[23:20]),
        .O(add_ln28_fu_453_p2[23:20]),
        .S({\add_ln28_reg_694[23]_i_2_n_0 ,\add_ln28_reg_694[23]_i_3_n_0 ,\add_ln28_reg_694[23]_i_4_n_0 ,\add_ln28_reg_694[23]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[24]),
        .Q(add_ln28_reg_694[24]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[25]),
        .Q(add_ln28_reg_694[25]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[26]),
        .Q(add_ln28_reg_694[26]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[27]),
        .Q(add_ln28_reg_694[27]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[27]_i_1 
       (.CI(\add_ln28_reg_694_reg[23]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[27]_i_1_n_0 ,\add_ln28_reg_694_reg[27]_i_1_n_1 ,\add_ln28_reg_694_reg[27]_i_1_n_2 ,\add_ln28_reg_694_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[27:24]),
        .O(add_ln28_fu_453_p2[27:24]),
        .S({\add_ln28_reg_694[27]_i_2_n_0 ,\add_ln28_reg_694[27]_i_3_n_0 ,\add_ln28_reg_694[27]_i_4_n_0 ,\add_ln28_reg_694[27]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[28]),
        .Q(add_ln28_reg_694[28]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[29]),
        .Q(add_ln28_reg_694[29]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[2]),
        .Q(add_ln28_reg_694[2]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[30]),
        .Q(add_ln28_reg_694[30]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[31]),
        .Q(add_ln28_reg_694[31]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[31]_i_1 
       (.CI(\add_ln28_reg_694_reg[27]_i_1_n_0 ),
        .CO({\NLW_add_ln28_reg_694_reg[31]_i_1_CO_UNCONNECTED [3],\add_ln28_reg_694_reg[31]_i_1_n_1 ,\add_ln28_reg_694_reg[31]_i_1_n_2 ,\add_ln28_reg_694_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,mul_ln28_1_reg_654[30:28]}),
        .O(add_ln28_fu_453_p2[31:28]),
        .S({\add_ln28_reg_694[31]_i_2_n_0 ,\add_ln28_reg_694[31]_i_3_n_0 ,\add_ln28_reg_694[31]_i_4_n_0 ,\add_ln28_reg_694[31]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[3]),
        .Q(add_ln28_reg_694[3]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\add_ln28_reg_694_reg[3]_i_1_n_0 ,\add_ln28_reg_694_reg[3]_i_1_n_1 ,\add_ln28_reg_694_reg[3]_i_1_n_2 ,\add_ln28_reg_694_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[3:0]),
        .O(add_ln28_fu_453_p2[3:0]),
        .S({\add_ln28_reg_694[3]_i_2_n_0 ,\add_ln28_reg_694[3]_i_3_n_0 ,\add_ln28_reg_694[3]_i_4_n_0 ,\add_ln28_reg_694[3]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[4]),
        .Q(add_ln28_reg_694[4]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[5]),
        .Q(add_ln28_reg_694[5]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[6]),
        .Q(add_ln28_reg_694[6]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[7]),
        .Q(add_ln28_reg_694[7]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \add_ln28_reg_694_reg[7]_i_1 
       (.CI(\add_ln28_reg_694_reg[3]_i_1_n_0 ),
        .CO({\add_ln28_reg_694_reg[7]_i_1_n_0 ,\add_ln28_reg_694_reg[7]_i_1_n_1 ,\add_ln28_reg_694_reg[7]_i_1_n_2 ,\add_ln28_reg_694_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(mul_ln28_1_reg_654[7:4]),
        .O(add_ln28_fu_453_p2[7:4]),
        .S({\add_ln28_reg_694[7]_i_2_n_0 ,\add_ln28_reg_694[7]_i_3_n_0 ,\add_ln28_reg_694[7]_i_4_n_0 ,\add_ln28_reg_694[7]_i_5_n_0 }));
  FDRE \add_ln28_reg_694_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[8]),
        .Q(add_ln28_reg_694[8]),
        .R(1'b0));
  FDRE \add_ln28_reg_694_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(add_ln28_fu_453_p2[9]),
        .Q(add_ln28_reg_694[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[0]),
        .Q(an32ShiftReg_0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[10]),
        .Q(an32ShiftReg_0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[11]),
        .Q(an32ShiftReg_0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[12]),
        .Q(an32ShiftReg_0[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[13]),
        .Q(an32ShiftReg_0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[14]),
        .Q(an32ShiftReg_0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[15]),
        .Q(an32ShiftReg_0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[16]),
        .Q(an32ShiftReg_0[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[17]),
        .Q(an32ShiftReg_0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[18]),
        .Q(an32ShiftReg_0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[19]),
        .Q(an32ShiftReg_0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[1]),
        .Q(an32ShiftReg_0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[20]),
        .Q(an32ShiftReg_0[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[21]),
        .Q(an32ShiftReg_0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[22]),
        .Q(an32ShiftReg_0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[23]),
        .Q(an32ShiftReg_0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[24]),
        .Q(an32ShiftReg_0[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[25]),
        .Q(an32ShiftReg_0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[26]),
        .Q(an32ShiftReg_0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[27]),
        .Q(an32ShiftReg_0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[28]),
        .Q(an32ShiftReg_0[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[29]),
        .Q(an32ShiftReg_0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[2]),
        .Q(an32ShiftReg_0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[30]),
        .Q(an32ShiftReg_0[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[31]),
        .Q(an32ShiftReg_0[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[3]),
        .Q(an32ShiftReg_0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[4]),
        .Q(an32ShiftReg_0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[5]),
        .Q(an32ShiftReg_0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[6]),
        .Q(an32ShiftReg_0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[7]),
        .Q(an32ShiftReg_0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[8]),
        .Q(an32ShiftReg_0[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_0_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(n32Temp_reg_577[9]),
        .Q(an32ShiftReg_0[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[0]),
        .Q(an32ShiftReg_1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[10]),
        .Q(an32ShiftReg_1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[11]),
        .Q(an32ShiftReg_1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[12]),
        .Q(an32ShiftReg_1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[13]),
        .Q(an32ShiftReg_1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[14]),
        .Q(an32ShiftReg_1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[15]),
        .Q(an32ShiftReg_1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[16]),
        .Q(an32ShiftReg_1[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[17]),
        .Q(an32ShiftReg_1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[18]),
        .Q(an32ShiftReg_1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[19]),
        .Q(an32ShiftReg_1[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[1]),
        .Q(an32ShiftReg_1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[20]),
        .Q(an32ShiftReg_1[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[21]),
        .Q(an32ShiftReg_1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[22]),
        .Q(an32ShiftReg_1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[23]),
        .Q(an32ShiftReg_1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[24]),
        .Q(an32ShiftReg_1[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[25]),
        .Q(an32ShiftReg_1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[26]),
        .Q(an32ShiftReg_1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[27]),
        .Q(an32ShiftReg_1[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[28]),
        .Q(an32ShiftReg_1[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[29]),
        .Q(an32ShiftReg_1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[2]),
        .Q(an32ShiftReg_1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[30]),
        .Q(an32ShiftReg_1[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[31]),
        .Q(an32ShiftReg_1[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[3]),
        .Q(an32ShiftReg_1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[4]),
        .Q(an32ShiftReg_1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[5]),
        .Q(an32ShiftReg_1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[6]),
        .Q(an32ShiftReg_1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[7]),
        .Q(an32ShiftReg_1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[8]),
        .Q(an32ShiftReg_1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_1_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_0[9]),
        .Q(an32ShiftReg_1[9]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[0]),
        .Q(an32ShiftReg_2_load_reg_583[0]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[10]),
        .Q(an32ShiftReg_2_load_reg_583[10]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[11]),
        .Q(an32ShiftReg_2_load_reg_583[11]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[12]),
        .Q(an32ShiftReg_2_load_reg_583[12]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[13]),
        .Q(an32ShiftReg_2_load_reg_583[13]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[14]),
        .Q(an32ShiftReg_2_load_reg_583[14]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[15]),
        .Q(an32ShiftReg_2_load_reg_583[15]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[16]),
        .Q(an32ShiftReg_2_load_reg_583[16]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[17]),
        .Q(an32ShiftReg_2_load_reg_583[17]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[18]),
        .Q(an32ShiftReg_2_load_reg_583[18]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[19]),
        .Q(an32ShiftReg_2_load_reg_583[19]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[1]),
        .Q(an32ShiftReg_2_load_reg_583[1]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[20]),
        .Q(an32ShiftReg_2_load_reg_583[20]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[21]),
        .Q(an32ShiftReg_2_load_reg_583[21]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[22]),
        .Q(an32ShiftReg_2_load_reg_583[22]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[23]),
        .Q(an32ShiftReg_2_load_reg_583[23]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[24]),
        .Q(an32ShiftReg_2_load_reg_583[24]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[25]),
        .Q(an32ShiftReg_2_load_reg_583[25]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[26]),
        .Q(an32ShiftReg_2_load_reg_583[26]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[27]),
        .Q(an32ShiftReg_2_load_reg_583[27]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[28]),
        .Q(an32ShiftReg_2_load_reg_583[28]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[29]),
        .Q(an32ShiftReg_2_load_reg_583[29]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[2]),
        .Q(an32ShiftReg_2_load_reg_583[2]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[30]),
        .Q(an32ShiftReg_2_load_reg_583[30]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[31]),
        .Q(an32ShiftReg_2_load_reg_583[31]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[3]),
        .Q(an32ShiftReg_2_load_reg_583[3]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[4]),
        .Q(an32ShiftReg_2_load_reg_583[4]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[5]),
        .Q(an32ShiftReg_2_load_reg_583[5]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[6]),
        .Q(an32ShiftReg_2_load_reg_583[6]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[7]),
        .Q(an32ShiftReg_2_load_reg_583[7]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[8]),
        .Q(an32ShiftReg_2_load_reg_583[8]),
        .R(1'b0));
  FDRE \an32ShiftReg_2_load_reg_583_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(an32ShiftReg_2[9]),
        .Q(an32ShiftReg_2_load_reg_583[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[0]),
        .Q(an32ShiftReg_2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[10]),
        .Q(an32ShiftReg_2[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[11]),
        .Q(an32ShiftReg_2[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[12]),
        .Q(an32ShiftReg_2[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[13]),
        .Q(an32ShiftReg_2[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[14]),
        .Q(an32ShiftReg_2[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[15]),
        .Q(an32ShiftReg_2[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[16]),
        .Q(an32ShiftReg_2[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[17]),
        .Q(an32ShiftReg_2[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[18]),
        .Q(an32ShiftReg_2[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[19]),
        .Q(an32ShiftReg_2[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[1]),
        .Q(an32ShiftReg_2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[20]),
        .Q(an32ShiftReg_2[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[21]),
        .Q(an32ShiftReg_2[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[22]),
        .Q(an32ShiftReg_2[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[23]),
        .Q(an32ShiftReg_2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[24]),
        .Q(an32ShiftReg_2[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[25]),
        .Q(an32ShiftReg_2[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[26]),
        .Q(an32ShiftReg_2[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[27]),
        .Q(an32ShiftReg_2[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[28]),
        .Q(an32ShiftReg_2[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[29]),
        .Q(an32ShiftReg_2[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[2]),
        .Q(an32ShiftReg_2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[30]),
        .Q(an32ShiftReg_2[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[31]),
        .Q(an32ShiftReg_2[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[3]),
        .Q(an32ShiftReg_2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[4]),
        .Q(an32ShiftReg_2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[5]),
        .Q(an32ShiftReg_2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[6]),
        .Q(an32ShiftReg_2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[7]),
        .Q(an32ShiftReg_2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[8]),
        .Q(an32ShiftReg_2[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_2_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_00),
        .D(an32ShiftReg_1[9]),
        .Q(an32ShiftReg_2[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[0]),
        .Q(an32ShiftReg_3[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[10]),
        .Q(an32ShiftReg_3[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[11]),
        .Q(an32ShiftReg_3[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[12]),
        .Q(an32ShiftReg_3[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[13]),
        .Q(an32ShiftReg_3[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[14]),
        .Q(an32ShiftReg_3[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[15]),
        .Q(an32ShiftReg_3[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[16]),
        .Q(an32ShiftReg_3[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[17]),
        .Q(an32ShiftReg_3[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[18]),
        .Q(an32ShiftReg_3[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[19]),
        .Q(an32ShiftReg_3[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[1]),
        .Q(an32ShiftReg_3[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[20]),
        .Q(an32ShiftReg_3[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[21]),
        .Q(an32ShiftReg_3[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[22]),
        .Q(an32ShiftReg_3[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[23]),
        .Q(an32ShiftReg_3[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[24]),
        .Q(an32ShiftReg_3[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[25]),
        .Q(an32ShiftReg_3[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[26]),
        .Q(an32ShiftReg_3[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[27]),
        .Q(an32ShiftReg_3[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[28]),
        .Q(an32ShiftReg_3[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[29]),
        .Q(an32ShiftReg_3[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[2]),
        .Q(an32ShiftReg_3[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[30]),
        .Q(an32ShiftReg_3[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[31]),
        .Q(an32ShiftReg_3[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[3]),
        .Q(an32ShiftReg_3[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[4]),
        .Q(an32ShiftReg_3[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[5]),
        .Q(an32ShiftReg_3[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[6]),
        .Q(an32ShiftReg_3[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[7]),
        .Q(an32ShiftReg_3[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[8]),
        .Q(an32ShiftReg_3[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_3_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_2_load_reg_583[9]),
        .Q(an32ShiftReg_3[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[0]),
        .Q(an32ShiftReg_4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[10]),
        .Q(an32ShiftReg_4[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[11]),
        .Q(an32ShiftReg_4[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[12]),
        .Q(an32ShiftReg_4[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[13]),
        .Q(an32ShiftReg_4[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[14]),
        .Q(an32ShiftReg_4[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[15]),
        .Q(an32ShiftReg_4[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[16]),
        .Q(an32ShiftReg_4[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[17]),
        .Q(an32ShiftReg_4[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[18]),
        .Q(an32ShiftReg_4[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[19]),
        .Q(an32ShiftReg_4[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[1]),
        .Q(an32ShiftReg_4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[20]),
        .Q(an32ShiftReg_4[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[21]),
        .Q(an32ShiftReg_4[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[22]),
        .Q(an32ShiftReg_4[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[23]),
        .Q(an32ShiftReg_4[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[24]),
        .Q(an32ShiftReg_4[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[25]),
        .Q(an32ShiftReg_4[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[26]),
        .Q(an32ShiftReg_4[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[27]),
        .Q(an32ShiftReg_4[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[28]),
        .Q(an32ShiftReg_4[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[29]),
        .Q(an32ShiftReg_4[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[2]),
        .Q(an32ShiftReg_4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[30]),
        .Q(an32ShiftReg_4[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[31]),
        .Q(an32ShiftReg_4[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[3]),
        .Q(an32ShiftReg_4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[4]),
        .Q(an32ShiftReg_4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[5]),
        .Q(an32ShiftReg_4[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[6]),
        .Q(an32ShiftReg_4[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[7]),
        .Q(an32ShiftReg_4[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[8]),
        .Q(an32ShiftReg_4[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_4_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_3[9]),
        .Q(an32ShiftReg_4[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[0]),
        .Q(an32ShiftReg_5[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[10]),
        .Q(an32ShiftReg_5[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[11]),
        .Q(an32ShiftReg_5[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[12]),
        .Q(an32ShiftReg_5[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[13]),
        .Q(an32ShiftReg_5[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[14]),
        .Q(an32ShiftReg_5[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[15]),
        .Q(an32ShiftReg_5[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[16]),
        .Q(an32ShiftReg_5[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[17]),
        .Q(an32ShiftReg_5[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[18]),
        .Q(an32ShiftReg_5[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[19]),
        .Q(an32ShiftReg_5[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[1]),
        .Q(an32ShiftReg_5[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[20]),
        .Q(an32ShiftReg_5[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[21]),
        .Q(an32ShiftReg_5[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[22]),
        .Q(an32ShiftReg_5[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[23]),
        .Q(an32ShiftReg_5[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[24]),
        .Q(an32ShiftReg_5[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[25]),
        .Q(an32ShiftReg_5[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[26]),
        .Q(an32ShiftReg_5[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[27]),
        .Q(an32ShiftReg_5[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[28]),
        .Q(an32ShiftReg_5[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[29]),
        .Q(an32ShiftReg_5[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[2]),
        .Q(an32ShiftReg_5[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[30]),
        .Q(an32ShiftReg_5[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[31]),
        .Q(an32ShiftReg_5[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[3]),
        .Q(an32ShiftReg_5[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[4]),
        .Q(an32ShiftReg_5[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[5]),
        .Q(an32ShiftReg_5[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[6]),
        .Q(an32ShiftReg_5[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[7]),
        .Q(an32ShiftReg_5[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[8]),
        .Q(an32ShiftReg_5[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_5_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_4[9]),
        .Q(an32ShiftReg_5[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[0]),
        .Q(an32ShiftReg_6[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[10]),
        .Q(an32ShiftReg_6[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[11]),
        .Q(an32ShiftReg_6[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[12]),
        .Q(an32ShiftReg_6[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[13]),
        .Q(an32ShiftReg_6[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[14]),
        .Q(an32ShiftReg_6[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[15]),
        .Q(an32ShiftReg_6[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[16]),
        .Q(an32ShiftReg_6[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[17]),
        .Q(an32ShiftReg_6[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[18]),
        .Q(an32ShiftReg_6[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[19]),
        .Q(an32ShiftReg_6[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[1]),
        .Q(an32ShiftReg_6[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[20]),
        .Q(an32ShiftReg_6[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[21]),
        .Q(an32ShiftReg_6[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[22]),
        .Q(an32ShiftReg_6[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[23]),
        .Q(an32ShiftReg_6[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[24]),
        .Q(an32ShiftReg_6[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[25]),
        .Q(an32ShiftReg_6[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[26]),
        .Q(an32ShiftReg_6[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[27]),
        .Q(an32ShiftReg_6[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[28]),
        .Q(an32ShiftReg_6[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[29]),
        .Q(an32ShiftReg_6[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[2]),
        .Q(an32ShiftReg_6[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[30]),
        .Q(an32ShiftReg_6[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[31]),
        .Q(an32ShiftReg_6[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[3]),
        .Q(an32ShiftReg_6[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[4]),
        .Q(an32ShiftReg_6[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[5]),
        .Q(an32ShiftReg_6[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[6]),
        .Q(an32ShiftReg_6[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[7]),
        .Q(an32ShiftReg_6[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[8]),
        .Q(an32ShiftReg_6[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_6_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_5[9]),
        .Q(an32ShiftReg_6[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[0] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[0]),
        .Q(an32ShiftReg_7[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[10] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[10]),
        .Q(an32ShiftReg_7[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[11] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[11]),
        .Q(an32ShiftReg_7[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[12] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[12]),
        .Q(an32ShiftReg_7[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[13] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[13]),
        .Q(an32ShiftReg_7[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[14] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[14]),
        .Q(an32ShiftReg_7[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[15] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[15]),
        .Q(an32ShiftReg_7[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[16] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[16]),
        .Q(an32ShiftReg_7[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[17] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[17]),
        .Q(an32ShiftReg_7[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[18] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[18]),
        .Q(an32ShiftReg_7[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[19] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[19]),
        .Q(an32ShiftReg_7[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[1] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[1]),
        .Q(an32ShiftReg_7[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[20] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[20]),
        .Q(an32ShiftReg_7[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[21] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[21]),
        .Q(an32ShiftReg_7[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[22] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[22]),
        .Q(an32ShiftReg_7[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[23] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[23]),
        .Q(an32ShiftReg_7[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[24] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[24]),
        .Q(an32ShiftReg_7[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[25] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[25]),
        .Q(an32ShiftReg_7[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[26] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[26]),
        .Q(an32ShiftReg_7[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[27] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[27]),
        .Q(an32ShiftReg_7[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[28] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[28]),
        .Q(an32ShiftReg_7[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[29] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[29]),
        .Q(an32ShiftReg_7[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[2] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[2]),
        .Q(an32ShiftReg_7[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[30] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[30]),
        .Q(an32ShiftReg_7[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[31] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[31]),
        .Q(an32ShiftReg_7[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[3] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[3]),
        .Q(an32ShiftReg_7[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[4] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[4]),
        .Q(an32ShiftReg_7[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[5] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[5]),
        .Q(an32ShiftReg_7[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[6] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[6]),
        .Q(an32ShiftReg_7[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[7] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[7]),
        .Q(an32ShiftReg_7[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[8] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[8]),
        .Q(an32ShiftReg_7[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \an32ShiftReg_7_reg[9] 
       (.C(ap_clk),
        .CE(an32ShiftReg_30),
        .D(an32ShiftReg_6[9]),
        .Q(an32ShiftReg_7[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    \ap_CS_fsm[0]_i_1 
       (.I0(\ap_CS_fsm_reg[12]_0 [2]),
        .I1(gmem_BVALID),
        .I2(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I3(gmem_ARREADY),
        .I4(\ap_CS_fsm_reg[12]_0 [0]),
        .O(ap_NS_fsm[0]));
  LUT5 #(
    .INIT(32'hAA080808)) 
    \ap_CS_fsm[0]_i_2 
       (.I0(Q[12]),
        .I1(\ap_CS_fsm_reg[12]_0 [0]),
        .I2(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I3(gmem_BVALID),
        .I4(\ap_CS_fsm_reg[12]_0 [2]),
        .O(ap_done));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \ap_CS_fsm[12]_i_1 
       (.I0(\ap_CS_fsm_reg_n_0_[11] ),
        .I1(gmem_BVALID),
        .I2(\ap_CS_fsm_reg[12]_0 [2]),
        .O(ap_NS_fsm[12]));
  LUT6 #(
    .INIT(64'hBFAABFBFAAAAAAAA)) 
    \ap_CS_fsm[13]_i_1 
       (.I0(Q[11]),
        .I1(\ap_CS_fsm_reg[12]_0 [2]),
        .I2(gmem_BVALID),
        .I3(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I4(\ap_CS_fsm_reg[12]_0 [0]),
        .I5(Q[12]),
        .O(D));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \ap_CS_fsm[1]_i_1 
       (.I0(\ap_CS_fsm[1]_i_2__0_n_0 ),
        .I1(\ap_CS_fsm_reg_n_0_[10] ),
        .I2(\ap_CS_fsm_reg_n_0_[8] ),
        .I3(\ap_CS_fsm_reg_n_0_[11] ),
        .I4(\ap_CS_fsm_reg_n_0_[9] ),
        .I5(\ap_CS_fsm[1]_i_3_n_0 ),
        .O(ap_NS_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \ap_CS_fsm[1]_i_2__0 
       (.I0(\ap_CS_fsm_reg_n_0_[1] ),
        .I1(\ap_CS_fsm_reg_n_0_[4] ),
        .I2(\ap_CS_fsm_reg_n_0_[5] ),
        .I3(ap_CS_fsm_pp0_stage0),
        .O(\ap_CS_fsm[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \ap_CS_fsm[1]_i_3 
       (.I0(\ap_CS_fsm_reg[1]_0 ),
        .I1(\ap_CS_fsm_reg[12]_0 [1]),
        .I2(\ap_CS_fsm_reg[12]_0 [2]),
        .I3(\ap_CS_fsm_reg_n_0_[2] ),
        .I4(\ap_CS_fsm_reg_n_0_[3] ),
        .O(\ap_CS_fsm[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \ap_CS_fsm[6]_i_1 
       (.I0(\ap_CS_fsm_reg_n_0_[5] ),
        .I1(gmem_AWREADY),
        .I2(\ap_CS_fsm_reg[12]_0 [1]),
        .O(ap_NS_fsm[6]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \ap_CS_fsm[7]_i_1 
       (.I0(gmem_AWREADY),
        .I1(\ap_CS_fsm_reg[12]_0 [1]),
        .I2(ap_CS_fsm_pp0_stage0),
        .I3(\ap_CS_fsm[8]_i_2_n_0 ),
        .O(ap_NS_fsm[7]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ap_CS_fsm[8]_i_1 
       (.I0(ap_CS_fsm_pp0_stage0),
        .I1(\ap_CS_fsm[8]_i_2_n_0 ),
        .O(ap_NS_fsm[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0DDDDDD)) 
    \ap_CS_fsm[8]_i_2 
       (.I0(ap_enable_reg_pp0_iter7_reg_0),
        .I1(ap_enable_reg_pp0_iter6),
        .I2(ap_enable_reg_pp0_iter1_reg_0),
        .I3(ap_enable_reg_pp0_iter0),
        .I4(ap_condition_pp0_exit_iter0_state8),
        .I5(ap_enable_reg_pp0_iter1_reg_1),
        .O(\ap_CS_fsm[8]_i_2_n_0 ));
  (* FSM_ENCODING = "none" *) 
  FDSE #(
    .INIT(1'b1)) 
    \ap_CS_fsm_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[0]),
        .Q(\ap_CS_fsm_reg[12]_0 [0]),
        .S(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[10] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[9] ),
        .Q(\ap_CS_fsm_reg_n_0_[10] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[11] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[10] ),
        .Q(\ap_CS_fsm_reg_n_0_[11] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[12] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[12]),
        .Q(\ap_CS_fsm_reg[12]_0 [2]),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[1]),
        .Q(\ap_CS_fsm_reg_n_0_[1] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[1] ),
        .Q(\ap_CS_fsm_reg_n_0_[2] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[2] ),
        .Q(\ap_CS_fsm_reg_n_0_[3] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[4] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[3] ),
        .Q(\ap_CS_fsm_reg_n_0_[4] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[5] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[4] ),
        .Q(\ap_CS_fsm_reg_n_0_[5] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[6] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[6]),
        .Q(\ap_CS_fsm_reg[12]_0 [1]),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[7] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[7]),
        .Q(ap_CS_fsm_pp0_stage0),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[8] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_NS_fsm[8]),
        .Q(\ap_CS_fsm_reg_n_0_[8] ),
        .R(SR));
  (* FSM_ENCODING = "none" *) 
  FDRE #(
    .INIT(1'b0)) 
    \ap_CS_fsm_reg[9] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\ap_CS_fsm_reg_n_0_[8] ),
        .Q(\ap_CS_fsm_reg_n_0_[9] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h7777700000000000)) 
    ap_enable_reg_pp0_iter0_i_1
       (.I0(p_5_in),
        .I1(ap_condition_pp0_exit_iter0_state8),
        .I2(\ap_CS_fsm_reg[12]_0 [1]),
        .I3(gmem_AWREADY),
        .I4(ap_enable_reg_pp0_iter0),
        .I5(ap_rst_n),
        .O(ap_enable_reg_pp0_iter0_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter0_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_enable_reg_pp0_iter0_i_1_n_0),
        .Q(ap_enable_reg_pp0_iter0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hA000A0C0)) 
    ap_enable_reg_pp0_iter1_i_1
       (.I0(ap_enable_reg_pp0_iter1_reg_0),
        .I1(ap_enable_reg_pp0_iter0),
        .I2(ap_rst_n),
        .I3(ap_enable_reg_pp0_iter1_reg_1),
        .I4(ap_condition_pp0_exit_iter0_state8),
        .O(ap_enable_reg_pp0_iter1_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter1_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_enable_reg_pp0_iter1_i_1_n_0),
        .Q(ap_enable_reg_pp0_iter1_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter2_reg
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(ap_enable_reg_pp0_iter1_reg_0),
        .Q(ap_enable_reg_pp0_iter2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter3_reg
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(ap_enable_reg_pp0_iter2),
        .Q(ap_enable_reg_pp0_iter3),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter4_reg
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(ap_enable_reg_pp0_iter3),
        .Q(ap_enable_reg_pp0_iter4),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter5_reg
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(ap_enable_reg_pp0_iter4),
        .Q(ap_enable_reg_pp0_iter5),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter6_reg
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(ap_enable_reg_pp0_iter5),
        .Q(ap_enable_reg_pp0_iter6),
        .R(SR));
  LUT6 #(
    .INIT(64'h70FF700000000000)) 
    ap_enable_reg_pp0_iter7_i_1
       (.I0(gmem_AWREADY),
        .I1(\ap_CS_fsm_reg[12]_0 [1]),
        .I2(ap_enable_reg_pp0_iter7_reg_0),
        .I3(ap_enable_reg_pp0_iter1_reg_1),
        .I4(ap_enable_reg_pp0_iter6),
        .I5(ap_rst_n),
        .O(ap_enable_reg_pp0_iter7_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ap_enable_reg_pp0_iter7_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(ap_enable_reg_pp0_iter7_i_1_n_0),
        .Q(ap_enable_reg_pp0_iter7_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'hBFAA)) 
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg_i_1
       (.I0(Q[11]),
        .I1(\ap_CS_fsm_reg[12]_0 [2]),
        .I2(gmem_BVALID),
        .I3(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .O(\ap_CS_fsm_reg[12]_1 ));
  CARRY4 icmp_ln16_fu_277_p2_carry
       (.CI(1'b0),
        .CO({icmp_ln16_fu_277_p2_carry_n_0,icmp_ln16_fu_277_p2_carry_n_1,icmp_ln16_fu_277_p2_carry_n_2,icmp_ln16_fu_277_p2_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_icmp_ln16_fu_277_p2_carry_O_UNCONNECTED[3:0]),
        .S({icmp_ln16_fu_277_p2_carry_i_1_n_0,icmp_ln16_fu_277_p2_carry_i_2_n_0,icmp_ln16_fu_277_p2_carry_i_3_n_0,icmp_ln16_fu_277_p2_carry_i_4_n_0}));
  CARRY4 icmp_ln16_fu_277_p2_carry__0
       (.CI(icmp_ln16_fu_277_p2_carry_n_0),
        .CO({icmp_ln16_fu_277_p2_carry__0_n_0,icmp_ln16_fu_277_p2_carry__0_n_1,icmp_ln16_fu_277_p2_carry__0_n_2,icmp_ln16_fu_277_p2_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_icmp_ln16_fu_277_p2_carry__0_O_UNCONNECTED[3:0]),
        .S({icmp_ln16_fu_277_p2_carry__0_i_1_n_0,icmp_ln16_fu_277_p2_carry__0_i_2_n_0,icmp_ln16_fu_277_p2_carry__0_i_3_n_0,icmp_ln16_fu_277_p2_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__0_i_1
       (.I0(n32XferCnt_fu_110_reg[21]),
        .I1(\p_cast_reg_496_reg[30]_1 [21]),
        .I2(n32XferCnt_fu_110_reg[22]),
        .I3(\p_cast_reg_496_reg[30]_1 [22]),
        .I4(\p_cast_reg_496_reg[30]_1 [23]),
        .I5(n32XferCnt_fu_110_reg[23]),
        .O(icmp_ln16_fu_277_p2_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__0_i_2
       (.I0(n32XferCnt_fu_110_reg[18]),
        .I1(\p_cast_reg_496_reg[30]_1 [18]),
        .I2(n32XferCnt_fu_110_reg[19]),
        .I3(\p_cast_reg_496_reg[30]_1 [19]),
        .I4(\p_cast_reg_496_reg[30]_1 [20]),
        .I5(n32XferCnt_fu_110_reg[20]),
        .O(icmp_ln16_fu_277_p2_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__0_i_3
       (.I0(n32XferCnt_fu_110_reg[15]),
        .I1(\p_cast_reg_496_reg[30]_1 [15]),
        .I2(n32XferCnt_fu_110_reg[16]),
        .I3(\p_cast_reg_496_reg[30]_1 [16]),
        .I4(\p_cast_reg_496_reg[30]_1 [17]),
        .I5(n32XferCnt_fu_110_reg[17]),
        .O(icmp_ln16_fu_277_p2_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__0_i_4
       (.I0(n32XferCnt_fu_110_reg[12]),
        .I1(\p_cast_reg_496_reg[30]_1 [12]),
        .I2(n32XferCnt_fu_110_reg[13]),
        .I3(\p_cast_reg_496_reg[30]_1 [13]),
        .I4(\p_cast_reg_496_reg[30]_1 [14]),
        .I5(n32XferCnt_fu_110_reg[14]),
        .O(icmp_ln16_fu_277_p2_carry__0_i_4_n_0));
  CARRY4 icmp_ln16_fu_277_p2_carry__1
       (.CI(icmp_ln16_fu_277_p2_carry__0_n_0),
        .CO({NLW_icmp_ln16_fu_277_p2_carry__1_CO_UNCONNECTED[3],ap_condition_pp0_exit_iter0_state8,icmp_ln16_fu_277_p2_carry__1_n_2,icmp_ln16_fu_277_p2_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_icmp_ln16_fu_277_p2_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,icmp_ln16_fu_277_p2_carry__1_i_1_n_0,icmp_ln16_fu_277_p2_carry__1_i_2_n_0,icmp_ln16_fu_277_p2_carry__1_i_3_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    icmp_ln16_fu_277_p2_carry__1_i_1
       (.I0(\p_cast_reg_496_reg[30]_1 [30]),
        .I1(n32XferCnt_fu_110_reg[30]),
        .O(icmp_ln16_fu_277_p2_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__1_i_2
       (.I0(n32XferCnt_fu_110_reg[27]),
        .I1(\p_cast_reg_496_reg[30]_1 [27]),
        .I2(n32XferCnt_fu_110_reg[28]),
        .I3(\p_cast_reg_496_reg[30]_1 [28]),
        .I4(\p_cast_reg_496_reg[30]_1 [29]),
        .I5(n32XferCnt_fu_110_reg[29]),
        .O(icmp_ln16_fu_277_p2_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry__1_i_3
       (.I0(n32XferCnt_fu_110_reg[26]),
        .I1(\p_cast_reg_496_reg[30]_1 [26]),
        .I2(n32XferCnt_fu_110_reg[24]),
        .I3(\p_cast_reg_496_reg[30]_1 [24]),
        .I4(\p_cast_reg_496_reg[30]_1 [25]),
        .I5(n32XferCnt_fu_110_reg[25]),
        .O(icmp_ln16_fu_277_p2_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry_i_1
       (.I0(n32XferCnt_fu_110_reg[9]),
        .I1(\p_cast_reg_496_reg[30]_1 [9]),
        .I2(n32XferCnt_fu_110_reg[10]),
        .I3(\p_cast_reg_496_reg[30]_1 [10]),
        .I4(\p_cast_reg_496_reg[30]_1 [11]),
        .I5(n32XferCnt_fu_110_reg[11]),
        .O(icmp_ln16_fu_277_p2_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry_i_2
       (.I0(n32XferCnt_fu_110_reg[6]),
        .I1(\p_cast_reg_496_reg[30]_1 [6]),
        .I2(n32XferCnt_fu_110_reg[7]),
        .I3(\p_cast_reg_496_reg[30]_1 [7]),
        .I4(\p_cast_reg_496_reg[30]_1 [8]),
        .I5(n32XferCnt_fu_110_reg[8]),
        .O(icmp_ln16_fu_277_p2_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry_i_3
       (.I0(n32XferCnt_fu_110_reg[3]),
        .I1(\p_cast_reg_496_reg[30]_1 [3]),
        .I2(n32XferCnt_fu_110_reg[4]),
        .I3(\p_cast_reg_496_reg[30]_1 [4]),
        .I4(\p_cast_reg_496_reg[30]_1 [5]),
        .I5(n32XferCnt_fu_110_reg[5]),
        .O(icmp_ln16_fu_277_p2_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    icmp_ln16_fu_277_p2_carry_i_4
       (.I0(n32XferCnt_fu_110_reg[2]),
        .I1(\p_cast_reg_496_reg[30]_1 [2]),
        .I2(n32XferCnt_fu_110_reg[0]),
        .I3(\p_cast_reg_496_reg[30]_1 [0]),
        .I4(\p_cast_reg_496_reg[30]_1 [1]),
        .I5(n32XferCnt_fu_110_reg[1]),
        .O(icmp_ln16_fu_277_p2_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h000000008F880000)) 
    int_ap_ready_i_2
       (.I0(\ap_CS_fsm_reg[12]_0 [2]),
        .I1(gmem_BVALID),
        .I2(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I3(\ap_CS_fsm_reg[12]_0 [0]),
        .I4(Q[12]),
        .I5(int_ap_ready_reg),
        .O(task_ap_ready));
  LUT2 #(
    .INIT(4'hB)) 
    mem_reg_i_1__0
       (.I0(pop),
        .I1(ap_rst_n),
        .O(ap_rst_n_0));
  LUT6 #(
    .INIT(64'hA800FFFF00000000)) 
    mem_reg_i_4__0
       (.I0(p_5_in),
        .I1(Q[12]),
        .I2(Q[11]),
        .I3(ap_enable_reg_pp0_iter1_reg_0),
        .I4(gmem_RVALID),
        .I5(mem_reg),
        .O(pop));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1 mul_32s_32s_32_2_1_U1
       (.D({dout_reg__1,mul_32s_32s_32_2_1_U1_n_17,mul_32s_32s_32_2_1_U1_n_18,mul_32s_32s_32_2_1_U1_n_19,mul_32s_32s_32_2_1_U1_n_20,mul_32s_32s_32_2_1_U1_n_21,mul_32s_32s_32_2_1_U1_n_22,mul_32s_32s_32_2_1_U1_n_23,mul_32s_32s_32_2_1_U1_n_24,mul_32s_32s_32_2_1_U1_n_25,mul_32s_32s_32_2_1_U1_n_26,mul_32s_32s_32_2_1_U1_n_27,mul_32s_32s_32_2_1_U1_n_28,mul_32s_32s_32_2_1_U1_n_29,mul_32s_32s_32_2_1_U1_n_30,mul_32s_32s_32_2_1_U1_n_31,mul_32s_32s_32_2_1_U1_n_32}),
        .E(p_5_in),
        .Q(Q[8]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_00(an32ShiftReg_00),
        .ap_clk(ap_clk),
        .ap_enable_reg_pp0_iter2(ap_enable_reg_pp0_iter2),
        .dout_reg_0(n32Temp_reg_577),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .q00(q00),
        .tmp_product_0(ap_enable_reg_pp0_iter7_reg_0),
        .tmp_product_1(ap_enable_reg_pp0_iter1_reg_0));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_0 mul_32s_32s_32_2_1_U10
       (.D({dout_reg__1_0,mul_32s_32s_32_2_1_U10_n_17,mul_32s_32s_32_2_1_U10_n_18,mul_32s_32s_32_2_1_U10_n_19,mul_32s_32s_32_2_1_U10_n_20,mul_32s_32s_32_2_1_U10_n_21,mul_32s_32s_32_2_1_U10_n_22,mul_32s_32s_32_2_1_U10_n_23,mul_32s_32s_32_2_1_U10_n_24,mul_32s_32s_32_2_1_U10_n_25,mul_32s_32s_32_2_1_U10_n_26,mul_32s_32s_32_2_1_U10_n_27,mul_32s_32s_32_2_1_U10_n_28,mul_32s_32s_32_2_1_U10_n_29,mul_32s_32s_32_2_1_U10_n_30,mul_32s_32s_32_2_1_U10_n_31,mul_32s_32s_32_2_1_U10_n_32}),
        .E(p_5_in),
        .Q(Q[6]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_block_pp0_stage0_subdone(ap_block_pp0_stage0_subdone),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_2),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .q00(q00),
        .tmp_product_0(ap_enable_reg_pp0_iter7_reg_0),
        .tmp_product_1(ap_enable_reg_pp0_iter1_reg_0));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_1 mul_32s_32s_32_2_1_U11
       (.D({dout_reg__1_1,mul_32s_32s_32_2_1_U11_n_16,mul_32s_32s_32_2_1_U11_n_17,mul_32s_32s_32_2_1_U11_n_18,mul_32s_32s_32_2_1_U11_n_19,mul_32s_32s_32_2_1_U11_n_20,mul_32s_32s_32_2_1_U11_n_21,mul_32s_32s_32_2_1_U11_n_22,mul_32s_32s_32_2_1_U11_n_23,mul_32s_32s_32_2_1_U11_n_24,mul_32s_32s_32_2_1_U11_n_25,mul_32s_32s_32_2_1_U11_n_26,mul_32s_32s_32_2_1_U11_n_27,mul_32s_32s_32_2_1_U11_n_28,mul_32s_32s_32_2_1_U11_n_29,mul_32s_32s_32_2_1_U11_n_30,mul_32s_32s_32_2_1_U11_n_31}),
        .E(p_5_in),
        .Q(Q[7]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_00(an32ShiftReg_00),
        .ap_block_pp0_stage0_subdone(ap_block_pp0_stage0_subdone),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_1),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_2 mul_32s_32s_32_2_1_U2
       (.D({dout_reg__1_2,mul_32s_32s_32_2_1_U2_n_17,mul_32s_32s_32_2_1_U2_n_18,mul_32s_32s_32_2_1_U2_n_19,mul_32s_32s_32_2_1_U2_n_20,mul_32s_32s_32_2_1_U2_n_21,mul_32s_32s_32_2_1_U2_n_22,mul_32s_32s_32_2_1_U2_n_23,mul_32s_32s_32_2_1_U2_n_24,mul_32s_32s_32_2_1_U2_n_25,mul_32s_32s_32_2_1_U2_n_26,mul_32s_32s_32_2_1_U2_n_27,mul_32s_32s_32_2_1_U2_n_28,mul_32s_32s_32_2_1_U2_n_29,mul_32s_32s_32_2_1_U2_n_30,mul_32s_32s_32_2_1_U2_n_31,mul_32s_32s_32_2_1_U2_n_32}),
        .E(p_5_in),
        .Q(Q[9]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_00(an32ShiftReg_00),
        .ap_clk(ap_clk),
        .dout(dout[31:0]),
        .dout_reg_0(ap_CS_fsm_pp0_stage0),
        .dout_reg_1(ap_enable_reg_pp0_iter7_reg_0),
        .dout_reg_2(ap_enable_reg_pp0_iter1_reg_0),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_3 mul_32s_32s_32_2_1_U3
       (.D({dout_reg__1_3,mul_32s_32s_32_2_1_U3_n_16,mul_32s_32s_32_2_1_U3_n_17,mul_32s_32s_32_2_1_U3_n_18,mul_32s_32s_32_2_1_U3_n_19,mul_32s_32s_32_2_1_U3_n_20,mul_32s_32s_32_2_1_U3_n_21,mul_32s_32s_32_2_1_U3_n_22,mul_32s_32s_32_2_1_U3_n_23,mul_32s_32s_32_2_1_U3_n_24,mul_32s_32s_32_2_1_U3_n_25,mul_32s_32s_32_2_1_U3_n_26,mul_32s_32s_32_2_1_U3_n_27,mul_32s_32s_32_2_1_U3_n_28,mul_32s_32s_32_2_1_U3_n_29,mul_32s_32s_32_2_1_U3_n_30,mul_32s_32s_32_2_1_U3_n_31}),
        .E(p_5_in),
        .Q(Q[10]),
        .an32Coef_ce0(an32Coef_ce0),
        .ap_clk(ap_clk),
        .dout(dout[31:0]),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_4 mul_32s_32s_32_2_1_U4
       (.D({dout_reg__1_4,mul_32s_32s_32_2_1_U4_n_16,mul_32s_32s_32_2_1_U4_n_17,mul_32s_32s_32_2_1_U4_n_18,mul_32s_32s_32_2_1_U4_n_19,mul_32s_32s_32_2_1_U4_n_20,mul_32s_32s_32_2_1_U4_n_21,mul_32s_32s_32_2_1_U4_n_22,mul_32s_32s_32_2_1_U4_n_23,mul_32s_32s_32_2_1_U4_n_24,mul_32s_32s_32_2_1_U4_n_25,mul_32s_32s_32_2_1_U4_n_26,mul_32s_32s_32_2_1_U4_n_27,mul_32s_32s_32_2_1_U4_n_28,mul_32s_32s_32_2_1_U4_n_29,mul_32s_32s_32_2_1_U4_n_30,mul_32s_32s_32_2_1_U4_n_31}),
        .E(p_5_in),
        .Q(Q[0]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_7),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_5 mul_32s_32s_32_2_1_U5
       (.D({dout_reg__1_5,mul_32s_32s_32_2_1_U5_n_16,mul_32s_32s_32_2_1_U5_n_17,mul_32s_32s_32_2_1_U5_n_18,mul_32s_32s_32_2_1_U5_n_19,mul_32s_32s_32_2_1_U5_n_20,mul_32s_32s_32_2_1_U5_n_21,mul_32s_32s_32_2_1_U5_n_22,mul_32s_32s_32_2_1_U5_n_23,mul_32s_32s_32_2_1_U5_n_24,mul_32s_32s_32_2_1_U5_n_25,mul_32s_32s_32_2_1_U5_n_26,mul_32s_32s_32_2_1_U5_n_27,mul_32s_32s_32_2_1_U5_n_28,mul_32s_32s_32_2_1_U5_n_29,mul_32s_32s_32_2_1_U5_n_30,mul_32s_32s_32_2_1_U5_n_31}),
        .E(p_5_in),
        .Q(Q[1]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_6),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_6 mul_32s_32s_32_2_1_U6
       (.D({dout_reg__1_6,mul_32s_32s_32_2_1_U6_n_16,mul_32s_32s_32_2_1_U6_n_17,mul_32s_32s_32_2_1_U6_n_18,mul_32s_32s_32_2_1_U6_n_19,mul_32s_32s_32_2_1_U6_n_20,mul_32s_32s_32_2_1_U6_n_21,mul_32s_32s_32_2_1_U6_n_22,mul_32s_32s_32_2_1_U6_n_23,mul_32s_32s_32_2_1_U6_n_24,mul_32s_32s_32_2_1_U6_n_25,mul_32s_32s_32_2_1_U6_n_26,mul_32s_32s_32_2_1_U6_n_27,mul_32s_32s_32_2_1_U6_n_28,mul_32s_32s_32_2_1_U6_n_29,mul_32s_32s_32_2_1_U6_n_30,mul_32s_32s_32_2_1_U6_n_31}),
        .E(p_5_in),
        .Q(Q[2]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_5),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_7 mul_32s_32s_32_2_1_U7
       (.D({dout_reg__1_7,mul_32s_32s_32_2_1_U7_n_16,mul_32s_32s_32_2_1_U7_n_17,mul_32s_32s_32_2_1_U7_n_18,mul_32s_32s_32_2_1_U7_n_19,mul_32s_32s_32_2_1_U7_n_20,mul_32s_32s_32_2_1_U7_n_21,mul_32s_32s_32_2_1_U7_n_22,mul_32s_32s_32_2_1_U7_n_23,mul_32s_32s_32_2_1_U7_n_24,mul_32s_32s_32_2_1_U7_n_25,mul_32s_32s_32_2_1_U7_n_26,mul_32s_32s_32_2_1_U7_n_27,mul_32s_32s_32_2_1_U7_n_28,mul_32s_32s_32_2_1_U7_n_29,mul_32s_32s_32_2_1_U7_n_30,mul_32s_32s_32_2_1_U7_n_31}),
        .E(p_5_in),
        .Q(Q[3]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_4),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_8 mul_32s_32s_32_2_1_U8
       (.D({dout_reg__1_8,mul_32s_32s_32_2_1_U8_n_16,mul_32s_32s_32_2_1_U8_n_17,mul_32s_32s_32_2_1_U8_n_18,mul_32s_32s_32_2_1_U8_n_19,mul_32s_32s_32_2_1_U8_n_20,mul_32s_32s_32_2_1_U8_n_21,mul_32s_32s_32_2_1_U8_n_22,mul_32s_32s_32_2_1_U8_n_23,mul_32s_32s_32_2_1_U8_n_24,mul_32s_32s_32_2_1_U8_n_25,mul_32s_32s_32_2_1_U8_n_26,mul_32s_32s_32_2_1_U8_n_27,mul_32s_32s_32_2_1_U8_n_28,mul_32s_32s_32_2_1_U8_n_29,mul_32s_32s_32_2_1_U8_n_30,mul_32s_32s_32_2_1_U8_n_31}),
        .E(p_5_in),
        .Q(Q[4]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .dout_reg_0(an32ShiftReg_3),
        .q00(q00));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_9 mul_32s_32s_32_2_1_U9
       (.D({dout_reg__1_9,mul_32s_32s_32_2_1_U9_n_17,mul_32s_32s_32_2_1_U9_n_18,mul_32s_32s_32_2_1_U9_n_19,mul_32s_32s_32_2_1_U9_n_20,mul_32s_32s_32_2_1_U9_n_21,mul_32s_32s_32_2_1_U9_n_22,mul_32s_32s_32_2_1_U9_n_23,mul_32s_32s_32_2_1_U9_n_24,mul_32s_32s_32_2_1_U9_n_25,mul_32s_32s_32_2_1_U9_n_26,mul_32s_32s_32_2_1_U9_n_27,mul_32s_32s_32_2_1_U9_n_28,mul_32s_32s_32_2_1_U9_n_29,mul_32s_32s_32_2_1_U9_n_30,mul_32s_32s_32_2_1_U9_n_31,mul_32s_32s_32_2_1_U9_n_32}),
        .E(p_5_in),
        .Q(Q[5]),
        .an32Coef_ce0(an32Coef_ce0),
        .an32ShiftReg_30(an32ShiftReg_30),
        .ap_clk(ap_clk),
        .ap_enable_reg_pp0_iter3(ap_enable_reg_pp0_iter3),
        .dout_reg_0(an32ShiftReg_2_load_reg_583),
        .gmem_RVALID(gmem_RVALID),
        .gmem_WREADY(gmem_WREADY),
        .q00(q00),
        .tmp_product_0(ap_enable_reg_pp0_iter7_reg_0),
        .tmp_product_1(ap_enable_reg_pp0_iter1_reg_0));
  FDRE \mul_ln28_10_reg_644_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_31),
        .Q(mul_ln28_10_reg_644[0]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_21),
        .Q(mul_ln28_10_reg_644[10]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_20),
        .Q(mul_ln28_10_reg_644[11]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_19),
        .Q(mul_ln28_10_reg_644[12]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_18),
        .Q(mul_ln28_10_reg_644[13]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_17),
        .Q(mul_ln28_10_reg_644[14]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_16),
        .Q(mul_ln28_10_reg_644[15]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[16]),
        .Q(mul_ln28_10_reg_644[16]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[17]),
        .Q(mul_ln28_10_reg_644[17]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[18]),
        .Q(mul_ln28_10_reg_644[18]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[19]),
        .Q(mul_ln28_10_reg_644[19]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_30),
        .Q(mul_ln28_10_reg_644[1]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[20]),
        .Q(mul_ln28_10_reg_644[20]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[21]),
        .Q(mul_ln28_10_reg_644[21]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[22]),
        .Q(mul_ln28_10_reg_644[22]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[23]),
        .Q(mul_ln28_10_reg_644[23]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[24]),
        .Q(mul_ln28_10_reg_644[24]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[25]),
        .Q(mul_ln28_10_reg_644[25]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[26]),
        .Q(mul_ln28_10_reg_644[26]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[27]),
        .Q(mul_ln28_10_reg_644[27]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[28]),
        .Q(mul_ln28_10_reg_644[28]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[29]),
        .Q(mul_ln28_10_reg_644[29]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_29),
        .Q(mul_ln28_10_reg_644[2]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[30]),
        .Q(mul_ln28_10_reg_644[30]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_3[31]),
        .Q(mul_ln28_10_reg_644[31]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_28),
        .Q(mul_ln28_10_reg_644[3]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_27),
        .Q(mul_ln28_10_reg_644[4]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_26),
        .Q(mul_ln28_10_reg_644[5]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_25),
        .Q(mul_ln28_10_reg_644[6]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_24),
        .Q(mul_ln28_10_reg_644[7]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_23),
        .Q(mul_ln28_10_reg_644[8]),
        .R(1'b0));
  FDRE \mul_ln28_10_reg_644_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U3_n_22),
        .Q(mul_ln28_10_reg_644[9]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_31),
        .Q(mul_ln28_1_reg_654[0]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_21),
        .Q(mul_ln28_1_reg_654[10]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_20),
        .Q(mul_ln28_1_reg_654[11]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_19),
        .Q(mul_ln28_1_reg_654[12]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_18),
        .Q(mul_ln28_1_reg_654[13]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_17),
        .Q(mul_ln28_1_reg_654[14]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_16),
        .Q(mul_ln28_1_reg_654[15]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[16]),
        .Q(mul_ln28_1_reg_654[16]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[17]),
        .Q(mul_ln28_1_reg_654[17]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[18]),
        .Q(mul_ln28_1_reg_654[18]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[19]),
        .Q(mul_ln28_1_reg_654[19]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_30),
        .Q(mul_ln28_1_reg_654[1]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[20]),
        .Q(mul_ln28_1_reg_654[20]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[21]),
        .Q(mul_ln28_1_reg_654[21]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[22]),
        .Q(mul_ln28_1_reg_654[22]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[23]),
        .Q(mul_ln28_1_reg_654[23]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[24]),
        .Q(mul_ln28_1_reg_654[24]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[25]),
        .Q(mul_ln28_1_reg_654[25]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[26]),
        .Q(mul_ln28_1_reg_654[26]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[27]),
        .Q(mul_ln28_1_reg_654[27]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[28]),
        .Q(mul_ln28_1_reg_654[28]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[29]),
        .Q(mul_ln28_1_reg_654[29]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_29),
        .Q(mul_ln28_1_reg_654[2]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[30]),
        .Q(mul_ln28_1_reg_654[30]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_5[31]),
        .Q(mul_ln28_1_reg_654[31]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_28),
        .Q(mul_ln28_1_reg_654[3]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_27),
        .Q(mul_ln28_1_reg_654[4]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_26),
        .Q(mul_ln28_1_reg_654[5]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_25),
        .Q(mul_ln28_1_reg_654[6]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_24),
        .Q(mul_ln28_1_reg_654[7]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_23),
        .Q(mul_ln28_1_reg_654[8]),
        .R(1'b0));
  FDRE \mul_ln28_1_reg_654_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U5_n_22),
        .Q(mul_ln28_1_reg_654[9]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_31),
        .Q(mul_ln28_2_reg_659[0]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_21),
        .Q(mul_ln28_2_reg_659[10]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_20),
        .Q(mul_ln28_2_reg_659[11]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_19),
        .Q(mul_ln28_2_reg_659[12]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_18),
        .Q(mul_ln28_2_reg_659[13]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_17),
        .Q(mul_ln28_2_reg_659[14]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_16),
        .Q(mul_ln28_2_reg_659[15]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[16]),
        .Q(mul_ln28_2_reg_659[16]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[17]),
        .Q(mul_ln28_2_reg_659[17]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[18]),
        .Q(mul_ln28_2_reg_659[18]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[19]),
        .Q(mul_ln28_2_reg_659[19]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_30),
        .Q(mul_ln28_2_reg_659[1]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[20]),
        .Q(mul_ln28_2_reg_659[20]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[21]),
        .Q(mul_ln28_2_reg_659[21]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[22]),
        .Q(mul_ln28_2_reg_659[22]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[23]),
        .Q(mul_ln28_2_reg_659[23]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[24]),
        .Q(mul_ln28_2_reg_659[24]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[25]),
        .Q(mul_ln28_2_reg_659[25]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[26]),
        .Q(mul_ln28_2_reg_659[26]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[27]),
        .Q(mul_ln28_2_reg_659[27]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[28]),
        .Q(mul_ln28_2_reg_659[28]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[29]),
        .Q(mul_ln28_2_reg_659[29]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_29),
        .Q(mul_ln28_2_reg_659[2]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[30]),
        .Q(mul_ln28_2_reg_659[30]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_6[31]),
        .Q(mul_ln28_2_reg_659[31]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_28),
        .Q(mul_ln28_2_reg_659[3]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_27),
        .Q(mul_ln28_2_reg_659[4]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_26),
        .Q(mul_ln28_2_reg_659[5]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_25),
        .Q(mul_ln28_2_reg_659[6]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_24),
        .Q(mul_ln28_2_reg_659[7]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_23),
        .Q(mul_ln28_2_reg_659[8]),
        .R(1'b0));
  FDRE \mul_ln28_2_reg_659_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U6_n_22),
        .Q(mul_ln28_2_reg_659[9]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_31),
        .Q(mul_ln28_3_reg_664[0]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_21),
        .Q(mul_ln28_3_reg_664[10]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_20),
        .Q(mul_ln28_3_reg_664[11]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_19),
        .Q(mul_ln28_3_reg_664[12]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_18),
        .Q(mul_ln28_3_reg_664[13]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_17),
        .Q(mul_ln28_3_reg_664[14]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_16),
        .Q(mul_ln28_3_reg_664[15]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[16]),
        .Q(mul_ln28_3_reg_664[16]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[17]),
        .Q(mul_ln28_3_reg_664[17]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[18]),
        .Q(mul_ln28_3_reg_664[18]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[19]),
        .Q(mul_ln28_3_reg_664[19]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_30),
        .Q(mul_ln28_3_reg_664[1]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[20]),
        .Q(mul_ln28_3_reg_664[20]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[21]),
        .Q(mul_ln28_3_reg_664[21]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[22]),
        .Q(mul_ln28_3_reg_664[22]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[23]),
        .Q(mul_ln28_3_reg_664[23]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[24]),
        .Q(mul_ln28_3_reg_664[24]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[25]),
        .Q(mul_ln28_3_reg_664[25]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[26]),
        .Q(mul_ln28_3_reg_664[26]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[27]),
        .Q(mul_ln28_3_reg_664[27]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[28]),
        .Q(mul_ln28_3_reg_664[28]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[29]),
        .Q(mul_ln28_3_reg_664[29]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_29),
        .Q(mul_ln28_3_reg_664[2]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[30]),
        .Q(mul_ln28_3_reg_664[30]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_7[31]),
        .Q(mul_ln28_3_reg_664[31]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_28),
        .Q(mul_ln28_3_reg_664[3]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_27),
        .Q(mul_ln28_3_reg_664[4]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_26),
        .Q(mul_ln28_3_reg_664[5]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_25),
        .Q(mul_ln28_3_reg_664[6]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_24),
        .Q(mul_ln28_3_reg_664[7]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_23),
        .Q(mul_ln28_3_reg_664[8]),
        .R(1'b0));
  FDRE \mul_ln28_3_reg_664_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U7_n_22),
        .Q(mul_ln28_3_reg_664[9]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_31),
        .Q(mul_ln28_4_reg_669[0]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_21),
        .Q(mul_ln28_4_reg_669[10]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_20),
        .Q(mul_ln28_4_reg_669[11]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_19),
        .Q(mul_ln28_4_reg_669[12]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_18),
        .Q(mul_ln28_4_reg_669[13]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_17),
        .Q(mul_ln28_4_reg_669[14]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_16),
        .Q(mul_ln28_4_reg_669[15]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[16]),
        .Q(mul_ln28_4_reg_669[16]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[17]),
        .Q(mul_ln28_4_reg_669[17]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[18]),
        .Q(mul_ln28_4_reg_669[18]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[19]),
        .Q(mul_ln28_4_reg_669[19]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_30),
        .Q(mul_ln28_4_reg_669[1]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[20]),
        .Q(mul_ln28_4_reg_669[20]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[21]),
        .Q(mul_ln28_4_reg_669[21]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[22]),
        .Q(mul_ln28_4_reg_669[22]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[23]),
        .Q(mul_ln28_4_reg_669[23]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[24]),
        .Q(mul_ln28_4_reg_669[24]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[25]),
        .Q(mul_ln28_4_reg_669[25]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[26]),
        .Q(mul_ln28_4_reg_669[26]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[27]),
        .Q(mul_ln28_4_reg_669[27]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[28]),
        .Q(mul_ln28_4_reg_669[28]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[29]),
        .Q(mul_ln28_4_reg_669[29]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_29),
        .Q(mul_ln28_4_reg_669[2]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[30]),
        .Q(mul_ln28_4_reg_669[30]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_8[31]),
        .Q(mul_ln28_4_reg_669[31]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_28),
        .Q(mul_ln28_4_reg_669[3]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_27),
        .Q(mul_ln28_4_reg_669[4]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_26),
        .Q(mul_ln28_4_reg_669[5]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_25),
        .Q(mul_ln28_4_reg_669[6]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_24),
        .Q(mul_ln28_4_reg_669[7]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_23),
        .Q(mul_ln28_4_reg_669[8]),
        .R(1'b0));
  FDRE \mul_ln28_4_reg_669_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U8_n_22),
        .Q(mul_ln28_4_reg_669[9]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_32),
        .Q(mul_ln28_5_reg_674[0]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_22),
        .Q(mul_ln28_5_reg_674[10]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_21),
        .Q(mul_ln28_5_reg_674[11]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_20),
        .Q(mul_ln28_5_reg_674[12]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_19),
        .Q(mul_ln28_5_reg_674[13]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_18),
        .Q(mul_ln28_5_reg_674[14]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_17),
        .Q(mul_ln28_5_reg_674[15]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[16]),
        .Q(mul_ln28_5_reg_674[16]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[17]),
        .Q(mul_ln28_5_reg_674[17]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[18]),
        .Q(mul_ln28_5_reg_674[18]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[19]),
        .Q(mul_ln28_5_reg_674[19]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_31),
        .Q(mul_ln28_5_reg_674[1]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[20]),
        .Q(mul_ln28_5_reg_674[20]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[21]),
        .Q(mul_ln28_5_reg_674[21]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[22]),
        .Q(mul_ln28_5_reg_674[22]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[23]),
        .Q(mul_ln28_5_reg_674[23]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[24]),
        .Q(mul_ln28_5_reg_674[24]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[25]),
        .Q(mul_ln28_5_reg_674[25]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[26]),
        .Q(mul_ln28_5_reg_674[26]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[27]),
        .Q(mul_ln28_5_reg_674[27]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[28]),
        .Q(mul_ln28_5_reg_674[28]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[29]),
        .Q(mul_ln28_5_reg_674[29]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_30),
        .Q(mul_ln28_5_reg_674[2]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[30]),
        .Q(mul_ln28_5_reg_674[30]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_9[31]),
        .Q(mul_ln28_5_reg_674[31]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_29),
        .Q(mul_ln28_5_reg_674[3]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_28),
        .Q(mul_ln28_5_reg_674[4]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_27),
        .Q(mul_ln28_5_reg_674[5]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_26),
        .Q(mul_ln28_5_reg_674[6]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_25),
        .Q(mul_ln28_5_reg_674[7]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_24),
        .Q(mul_ln28_5_reg_674[8]),
        .R(1'b0));
  FDRE \mul_ln28_5_reg_674_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U9_n_23),
        .Q(mul_ln28_5_reg_674[9]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_32),
        .Q(mul_ln28_6_reg_679[0]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_22),
        .Q(mul_ln28_6_reg_679[10]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_21),
        .Q(mul_ln28_6_reg_679[11]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_20),
        .Q(mul_ln28_6_reg_679[12]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_19),
        .Q(mul_ln28_6_reg_679[13]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_18),
        .Q(mul_ln28_6_reg_679[14]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_17),
        .Q(mul_ln28_6_reg_679[15]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[16]),
        .Q(mul_ln28_6_reg_679[16]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[17]),
        .Q(mul_ln28_6_reg_679[17]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[18]),
        .Q(mul_ln28_6_reg_679[18]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[19]),
        .Q(mul_ln28_6_reg_679[19]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_31),
        .Q(mul_ln28_6_reg_679[1]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[20]),
        .Q(mul_ln28_6_reg_679[20]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[21]),
        .Q(mul_ln28_6_reg_679[21]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[22]),
        .Q(mul_ln28_6_reg_679[22]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[23]),
        .Q(mul_ln28_6_reg_679[23]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[24]),
        .Q(mul_ln28_6_reg_679[24]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[25]),
        .Q(mul_ln28_6_reg_679[25]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[26]),
        .Q(mul_ln28_6_reg_679[26]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[27]),
        .Q(mul_ln28_6_reg_679[27]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[28]),
        .Q(mul_ln28_6_reg_679[28]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[29]),
        .Q(mul_ln28_6_reg_679[29]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_30),
        .Q(mul_ln28_6_reg_679[2]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[30]),
        .Q(mul_ln28_6_reg_679[30]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_0[31]),
        .Q(mul_ln28_6_reg_679[31]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_29),
        .Q(mul_ln28_6_reg_679[3]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_28),
        .Q(mul_ln28_6_reg_679[4]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_27),
        .Q(mul_ln28_6_reg_679[5]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_26),
        .Q(mul_ln28_6_reg_679[6]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_25),
        .Q(mul_ln28_6_reg_679[7]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_24),
        .Q(mul_ln28_6_reg_679[8]),
        .R(1'b0));
  FDRE \mul_ln28_6_reg_679_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U10_n_23),
        .Q(mul_ln28_6_reg_679[9]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_31),
        .Q(mul_ln28_7_reg_684[0]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_21),
        .Q(mul_ln28_7_reg_684[10]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_20),
        .Q(mul_ln28_7_reg_684[11]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_19),
        .Q(mul_ln28_7_reg_684[12]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_18),
        .Q(mul_ln28_7_reg_684[13]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_17),
        .Q(mul_ln28_7_reg_684[14]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_16),
        .Q(mul_ln28_7_reg_684[15]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[16]),
        .Q(mul_ln28_7_reg_684[16]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[17]),
        .Q(mul_ln28_7_reg_684[17]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[18]),
        .Q(mul_ln28_7_reg_684[18]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[19]),
        .Q(mul_ln28_7_reg_684[19]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_30),
        .Q(mul_ln28_7_reg_684[1]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[20]),
        .Q(mul_ln28_7_reg_684[20]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[21]),
        .Q(mul_ln28_7_reg_684[21]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[22]),
        .Q(mul_ln28_7_reg_684[22]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[23]),
        .Q(mul_ln28_7_reg_684[23]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[24]),
        .Q(mul_ln28_7_reg_684[24]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[25]),
        .Q(mul_ln28_7_reg_684[25]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[26]),
        .Q(mul_ln28_7_reg_684[26]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[27]),
        .Q(mul_ln28_7_reg_684[27]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[28]),
        .Q(mul_ln28_7_reg_684[28]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[29]),
        .Q(mul_ln28_7_reg_684[29]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_29),
        .Q(mul_ln28_7_reg_684[2]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[30]),
        .Q(mul_ln28_7_reg_684[30]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_1[31]),
        .Q(mul_ln28_7_reg_684[31]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_28),
        .Q(mul_ln28_7_reg_684[3]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_27),
        .Q(mul_ln28_7_reg_684[4]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_26),
        .Q(mul_ln28_7_reg_684[5]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_25),
        .Q(mul_ln28_7_reg_684[6]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_24),
        .Q(mul_ln28_7_reg_684[7]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_23),
        .Q(mul_ln28_7_reg_684[8]),
        .R(1'b0));
  FDRE \mul_ln28_7_reg_684_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U11_n_22),
        .Q(mul_ln28_7_reg_684[9]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_32),
        .Q(mul_ln28_8_reg_634[0]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_22),
        .Q(mul_ln28_8_reg_634[10]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_21),
        .Q(mul_ln28_8_reg_634[11]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_20),
        .Q(mul_ln28_8_reg_634[12]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_19),
        .Q(mul_ln28_8_reg_634[13]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_18),
        .Q(mul_ln28_8_reg_634[14]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_17),
        .Q(mul_ln28_8_reg_634[15]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[16]),
        .Q(mul_ln28_8_reg_634[16]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[17]),
        .Q(mul_ln28_8_reg_634[17]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[18]),
        .Q(mul_ln28_8_reg_634[18]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[19]),
        .Q(mul_ln28_8_reg_634[19]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_31),
        .Q(mul_ln28_8_reg_634[1]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[20]),
        .Q(mul_ln28_8_reg_634[20]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[21]),
        .Q(mul_ln28_8_reg_634[21]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[22]),
        .Q(mul_ln28_8_reg_634[22]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[23]),
        .Q(mul_ln28_8_reg_634[23]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[24]),
        .Q(mul_ln28_8_reg_634[24]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[25]),
        .Q(mul_ln28_8_reg_634[25]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[26]),
        .Q(mul_ln28_8_reg_634[26]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[27]),
        .Q(mul_ln28_8_reg_634[27]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[28]),
        .Q(mul_ln28_8_reg_634[28]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[29]),
        .Q(mul_ln28_8_reg_634[29]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_30),
        .Q(mul_ln28_8_reg_634[2]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[30]),
        .Q(mul_ln28_8_reg_634[30]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1[31]),
        .Q(mul_ln28_8_reg_634[31]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_29),
        .Q(mul_ln28_8_reg_634[3]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_28),
        .Q(mul_ln28_8_reg_634[4]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_27),
        .Q(mul_ln28_8_reg_634[5]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_26),
        .Q(mul_ln28_8_reg_634[6]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_25),
        .Q(mul_ln28_8_reg_634[7]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_24),
        .Q(mul_ln28_8_reg_634[8]),
        .R(1'b0));
  FDRE \mul_ln28_8_reg_634_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U1_n_23),
        .Q(mul_ln28_8_reg_634[9]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_32),
        .Q(mul_ln28_9_reg_639[0]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_22),
        .Q(mul_ln28_9_reg_639[10]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_21),
        .Q(mul_ln28_9_reg_639[11]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_20),
        .Q(mul_ln28_9_reg_639[12]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_19),
        .Q(mul_ln28_9_reg_639[13]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_18),
        .Q(mul_ln28_9_reg_639[14]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_17),
        .Q(mul_ln28_9_reg_639[15]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[16]),
        .Q(mul_ln28_9_reg_639[16]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[17]),
        .Q(mul_ln28_9_reg_639[17]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[18]),
        .Q(mul_ln28_9_reg_639[18]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[19]),
        .Q(mul_ln28_9_reg_639[19]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_31),
        .Q(mul_ln28_9_reg_639[1]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[20]),
        .Q(mul_ln28_9_reg_639[20]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[21]),
        .Q(mul_ln28_9_reg_639[21]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[22]),
        .Q(mul_ln28_9_reg_639[22]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[23]),
        .Q(mul_ln28_9_reg_639[23]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[24]),
        .Q(mul_ln28_9_reg_639[24]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[25]),
        .Q(mul_ln28_9_reg_639[25]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[26]),
        .Q(mul_ln28_9_reg_639[26]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[27]),
        .Q(mul_ln28_9_reg_639[27]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[28]),
        .Q(mul_ln28_9_reg_639[28]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[29]),
        .Q(mul_ln28_9_reg_639[29]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_30),
        .Q(mul_ln28_9_reg_639[2]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[30]),
        .Q(mul_ln28_9_reg_639[30]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_2[31]),
        .Q(mul_ln28_9_reg_639[31]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_29),
        .Q(mul_ln28_9_reg_639[3]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_28),
        .Q(mul_ln28_9_reg_639[4]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_27),
        .Q(mul_ln28_9_reg_639[5]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_26),
        .Q(mul_ln28_9_reg_639[6]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_25),
        .Q(mul_ln28_9_reg_639[7]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_24),
        .Q(mul_ln28_9_reg_639[8]),
        .R(1'b0));
  FDRE \mul_ln28_9_reg_639_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U2_n_23),
        .Q(mul_ln28_9_reg_639[9]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[0] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_31),
        .Q(mul_ln28_reg_649[0]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[10] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_21),
        .Q(mul_ln28_reg_649[10]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[11] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_20),
        .Q(mul_ln28_reg_649[11]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[12] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_19),
        .Q(mul_ln28_reg_649[12]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[13] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_18),
        .Q(mul_ln28_reg_649[13]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[14] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_17),
        .Q(mul_ln28_reg_649[14]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[15] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_16),
        .Q(mul_ln28_reg_649[15]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[16] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[16]),
        .Q(mul_ln28_reg_649[16]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[17] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[17]),
        .Q(mul_ln28_reg_649[17]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[18] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[18]),
        .Q(mul_ln28_reg_649[18]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[19] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[19]),
        .Q(mul_ln28_reg_649[19]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[1] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_30),
        .Q(mul_ln28_reg_649[1]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[20] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[20]),
        .Q(mul_ln28_reg_649[20]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[21] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[21]),
        .Q(mul_ln28_reg_649[21]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[22] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[22]),
        .Q(mul_ln28_reg_649[22]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[23] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[23]),
        .Q(mul_ln28_reg_649[23]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[24] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[24]),
        .Q(mul_ln28_reg_649[24]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[25] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[25]),
        .Q(mul_ln28_reg_649[25]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[26] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[26]),
        .Q(mul_ln28_reg_649[26]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[27] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[27]),
        .Q(mul_ln28_reg_649[27]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[28] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[28]),
        .Q(mul_ln28_reg_649[28]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[29] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[29]),
        .Q(mul_ln28_reg_649[29]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[2] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_29),
        .Q(mul_ln28_reg_649[2]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[30] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[30]),
        .Q(mul_ln28_reg_649[30]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[31] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(dout_reg__1_4[31]),
        .Q(mul_ln28_reg_649[31]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[3] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_28),
        .Q(mul_ln28_reg_649[3]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[4] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_27),
        .Q(mul_ln28_reg_649[4]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[5] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_26),
        .Q(mul_ln28_reg_649[5]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[6] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_25),
        .Q(mul_ln28_reg_649[6]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[7] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_24),
        .Q(mul_ln28_reg_649[7]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[8] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_23),
        .Q(mul_ln28_reg_649[8]),
        .R(1'b0));
  FDRE \mul_ln28_reg_649_reg[9] 
       (.C(ap_clk),
        .CE(ap_block_pp0_stage0_subdone),
        .D(mul_32s_32s_32_2_1_U4_n_22),
        .Q(mul_ln28_reg_649[9]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[0] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[0]),
        .Q(n32Temp_reg_577[0]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[10] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[10]),
        .Q(n32Temp_reg_577[10]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[11] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[11]),
        .Q(n32Temp_reg_577[11]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[12] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[12]),
        .Q(n32Temp_reg_577[12]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[13] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[13]),
        .Q(n32Temp_reg_577[13]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[14] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[14]),
        .Q(n32Temp_reg_577[14]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[15] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[15]),
        .Q(n32Temp_reg_577[15]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[16] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[16]),
        .Q(n32Temp_reg_577[16]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[17] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[17]),
        .Q(n32Temp_reg_577[17]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[18] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[18]),
        .Q(n32Temp_reg_577[18]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[19] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[19]),
        .Q(n32Temp_reg_577[19]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[1] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[1]),
        .Q(n32Temp_reg_577[1]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[20] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[20]),
        .Q(n32Temp_reg_577[20]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[21] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[21]),
        .Q(n32Temp_reg_577[21]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[22] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[22]),
        .Q(n32Temp_reg_577[22]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[23] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[23]),
        .Q(n32Temp_reg_577[23]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[24] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[24]),
        .Q(n32Temp_reg_577[24]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[25] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[25]),
        .Q(n32Temp_reg_577[25]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[26] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[26]),
        .Q(n32Temp_reg_577[26]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[27] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[27]),
        .Q(n32Temp_reg_577[27]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[28] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[28]),
        .Q(n32Temp_reg_577[28]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[29] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[29]),
        .Q(n32Temp_reg_577[29]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[2] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[2]),
        .Q(n32Temp_reg_577[2]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[30] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[30]),
        .Q(n32Temp_reg_577[30]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[31] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[31]),
        .Q(n32Temp_reg_577[31]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[3] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[3]),
        .Q(n32Temp_reg_577[3]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[4] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[4]),
        .Q(n32Temp_reg_577[4]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[5] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[5]),
        .Q(n32Temp_reg_577[5]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[6] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[6]),
        .Q(n32Temp_reg_577[6]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[7] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[7]),
        .Q(n32Temp_reg_577[7]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[8] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[8]),
        .Q(n32Temp_reg_577[8]),
        .R(1'b0));
  FDRE \n32Temp_reg_577_reg[9] 
       (.C(ap_clk),
        .CE(p_5_in),
        .D(dout[9]),
        .Q(n32Temp_reg_577[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    \n32XferCnt_fu_110[0]_i_1 
       (.I0(\ap_CS_fsm_reg[12]_0 [0]),
        .I1(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I2(gmem_ARREADY),
        .O(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  LUT3 #(
    .INIT(8'h08)) 
    \n32XferCnt_fu_110[0]_i_2 
       (.I0(p_5_in),
        .I1(ap_enable_reg_pp0_iter0),
        .I2(ap_condition_pp0_exit_iter0_state8),
        .O(n32XferCnt_fu_1100));
  LUT1 #(
    .INIT(2'h1)) 
    \n32XferCnt_fu_110[0]_i_4 
       (.I0(n32XferCnt_fu_110_reg[0]),
        .O(\n32XferCnt_fu_110[0]_i_4_n_0 ));
  FDRE \n32XferCnt_fu_110_reg[0] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[0]_i_3_n_7 ),
        .Q(n32XferCnt_fu_110_reg[0]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\n32XferCnt_fu_110_reg[0]_i_3_n_0 ,\n32XferCnt_fu_110_reg[0]_i_3_n_1 ,\n32XferCnt_fu_110_reg[0]_i_3_n_2 ,\n32XferCnt_fu_110_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\n32XferCnt_fu_110_reg[0]_i_3_n_4 ,\n32XferCnt_fu_110_reg[0]_i_3_n_5 ,\n32XferCnt_fu_110_reg[0]_i_3_n_6 ,\n32XferCnt_fu_110_reg[0]_i_3_n_7 }),
        .S({n32XferCnt_fu_110_reg[3:1],\n32XferCnt_fu_110[0]_i_4_n_0 }));
  FDRE \n32XferCnt_fu_110_reg[10] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[8]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[10]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[11] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[8]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[11]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[12] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[12]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[12]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[12]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[8]_i_1_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[12]_i_1_n_0 ,\n32XferCnt_fu_110_reg[12]_i_1_n_1 ,\n32XferCnt_fu_110_reg[12]_i_1_n_2 ,\n32XferCnt_fu_110_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[12]_i_1_n_4 ,\n32XferCnt_fu_110_reg[12]_i_1_n_5 ,\n32XferCnt_fu_110_reg[12]_i_1_n_6 ,\n32XferCnt_fu_110_reg[12]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[15:12]));
  FDRE \n32XferCnt_fu_110_reg[13] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[12]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[13]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[14] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[12]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[14]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[15] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[12]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[15]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[16] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[16]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[16]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[16]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[12]_i_1_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[16]_i_1_n_0 ,\n32XferCnt_fu_110_reg[16]_i_1_n_1 ,\n32XferCnt_fu_110_reg[16]_i_1_n_2 ,\n32XferCnt_fu_110_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[16]_i_1_n_4 ,\n32XferCnt_fu_110_reg[16]_i_1_n_5 ,\n32XferCnt_fu_110_reg[16]_i_1_n_6 ,\n32XferCnt_fu_110_reg[16]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[19:16]));
  FDRE \n32XferCnt_fu_110_reg[17] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[16]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[17]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[18] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[16]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[18]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[19] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[16]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[19]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[1] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[0]_i_3_n_6 ),
        .Q(n32XferCnt_fu_110_reg[1]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[20] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[20]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[20]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[20]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[16]_i_1_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[20]_i_1_n_0 ,\n32XferCnt_fu_110_reg[20]_i_1_n_1 ,\n32XferCnt_fu_110_reg[20]_i_1_n_2 ,\n32XferCnt_fu_110_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[20]_i_1_n_4 ,\n32XferCnt_fu_110_reg[20]_i_1_n_5 ,\n32XferCnt_fu_110_reg[20]_i_1_n_6 ,\n32XferCnt_fu_110_reg[20]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[23:20]));
  FDRE \n32XferCnt_fu_110_reg[21] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[20]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[21]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[22] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[20]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[22]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[23] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[20]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[23]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[24] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[24]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[24]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[24]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[20]_i_1_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[24]_i_1_n_0 ,\n32XferCnt_fu_110_reg[24]_i_1_n_1 ,\n32XferCnt_fu_110_reg[24]_i_1_n_2 ,\n32XferCnt_fu_110_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[24]_i_1_n_4 ,\n32XferCnt_fu_110_reg[24]_i_1_n_5 ,\n32XferCnt_fu_110_reg[24]_i_1_n_6 ,\n32XferCnt_fu_110_reg[24]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[27:24]));
  FDRE \n32XferCnt_fu_110_reg[25] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[24]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[25]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[26] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[24]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[26]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[27] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[24]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[27]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[28] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[28]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[28]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[28]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[24]_i_1_n_0 ),
        .CO({\NLW_n32XferCnt_fu_110_reg[28]_i_1_CO_UNCONNECTED [3:2],\n32XferCnt_fu_110_reg[28]_i_1_n_2 ,\n32XferCnt_fu_110_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_n32XferCnt_fu_110_reg[28]_i_1_O_UNCONNECTED [3],\n32XferCnt_fu_110_reg[28]_i_1_n_5 ,\n32XferCnt_fu_110_reg[28]_i_1_n_6 ,\n32XferCnt_fu_110_reg[28]_i_1_n_7 }),
        .S({1'b0,n32XferCnt_fu_110_reg[30:28]}));
  FDRE \n32XferCnt_fu_110_reg[29] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[28]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[29]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[2] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[0]_i_3_n_5 ),
        .Q(n32XferCnt_fu_110_reg[2]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[30] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[28]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[30]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[3] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[0]_i_3_n_4 ),
        .Q(n32XferCnt_fu_110_reg[3]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[4] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[4]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[4]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[4]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[0]_i_3_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[4]_i_1_n_0 ,\n32XferCnt_fu_110_reg[4]_i_1_n_1 ,\n32XferCnt_fu_110_reg[4]_i_1_n_2 ,\n32XferCnt_fu_110_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[4]_i_1_n_4 ,\n32XferCnt_fu_110_reg[4]_i_1_n_5 ,\n32XferCnt_fu_110_reg[4]_i_1_n_6 ,\n32XferCnt_fu_110_reg[4]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[7:4]));
  FDRE \n32XferCnt_fu_110_reg[5] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[4]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[5]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[6] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[4]_i_1_n_5 ),
        .Q(n32XferCnt_fu_110_reg[6]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[7] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[4]_i_1_n_4 ),
        .Q(n32XferCnt_fu_110_reg[7]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \n32XferCnt_fu_110_reg[8] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[8]_i_1_n_7 ),
        .Q(n32XferCnt_fu_110_reg[8]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \n32XferCnt_fu_110_reg[8]_i_1 
       (.CI(\n32XferCnt_fu_110_reg[4]_i_1_n_0 ),
        .CO({\n32XferCnt_fu_110_reg[8]_i_1_n_0 ,\n32XferCnt_fu_110_reg[8]_i_1_n_1 ,\n32XferCnt_fu_110_reg[8]_i_1_n_2 ,\n32XferCnt_fu_110_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\n32XferCnt_fu_110_reg[8]_i_1_n_4 ,\n32XferCnt_fu_110_reg[8]_i_1_n_5 ,\n32XferCnt_fu_110_reg[8]_i_1_n_6 ,\n32XferCnt_fu_110_reg[8]_i_1_n_7 }),
        .S(n32XferCnt_fu_110_reg[11:8]));
  FDRE \n32XferCnt_fu_110_reg[9] 
       (.C(ap_clk),
        .CE(n32XferCnt_fu_1100),
        .D(\n32XferCnt_fu_110_reg[8]_i_1_n_6 ),
        .Q(n32XferCnt_fu_110_reg[9]),
        .R(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_m_axi_gmem_ARVALID));
  FDRE \p_cast_reg_496_reg[0] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [0]),
        .Q(\p_cast_reg_496_reg[30]_0 [0]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[10] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [10]),
        .Q(\p_cast_reg_496_reg[30]_0 [10]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[11] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [11]),
        .Q(\p_cast_reg_496_reg[30]_0 [11]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[12] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [12]),
        .Q(\p_cast_reg_496_reg[30]_0 [12]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[13] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [13]),
        .Q(\p_cast_reg_496_reg[30]_0 [13]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[14] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [14]),
        .Q(\p_cast_reg_496_reg[30]_0 [14]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[15] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [15]),
        .Q(\p_cast_reg_496_reg[30]_0 [15]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[16] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [16]),
        .Q(\p_cast_reg_496_reg[30]_0 [16]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[17] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [17]),
        .Q(\p_cast_reg_496_reg[30]_0 [17]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[18] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [18]),
        .Q(\p_cast_reg_496_reg[30]_0 [18]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[19] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [19]),
        .Q(\p_cast_reg_496_reg[30]_0 [19]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[1] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [1]),
        .Q(\p_cast_reg_496_reg[30]_0 [1]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[20] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [20]),
        .Q(\p_cast_reg_496_reg[30]_0 [20]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[21] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [21]),
        .Q(\p_cast_reg_496_reg[30]_0 [21]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[22] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [22]),
        .Q(\p_cast_reg_496_reg[30]_0 [22]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[23] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [23]),
        .Q(\p_cast_reg_496_reg[30]_0 [23]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[24] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [24]),
        .Q(\p_cast_reg_496_reg[30]_0 [24]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[25] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [25]),
        .Q(\p_cast_reg_496_reg[30]_0 [25]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[26] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [26]),
        .Q(\p_cast_reg_496_reg[30]_0 [26]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[27] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [27]),
        .Q(\p_cast_reg_496_reg[30]_0 [27]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[28] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [28]),
        .Q(\p_cast_reg_496_reg[30]_0 [28]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[29] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [29]),
        .Q(\p_cast_reg_496_reg[30]_0 [29]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[2] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [2]),
        .Q(\p_cast_reg_496_reg[30]_0 [2]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[30] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [30]),
        .Q(\p_cast_reg_496_reg[30]_0 [30]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[3] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [3]),
        .Q(\p_cast_reg_496_reg[30]_0 [3]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[4] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [4]),
        .Q(\p_cast_reg_496_reg[30]_0 [4]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[5] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [5]),
        .Q(\p_cast_reg_496_reg[30]_0 [5]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[6] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [6]),
        .Q(\p_cast_reg_496_reg[30]_0 [6]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[7] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [7]),
        .Q(\p_cast_reg_496_reg[30]_0 [7]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[8] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [8]),
        .Q(\p_cast_reg_496_reg[30]_0 [8]),
        .R(1'b0));
  FDRE \p_cast_reg_496_reg[9] 
       (.C(ap_clk),
        .CE(\ap_CS_fsm_reg[12]_0 [0]),
        .D(\p_cast_reg_496_reg[30]_1 [9]),
        .Q(\p_cast_reg_496_reg[30]_0 [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hA8000000)) 
    ready_for_outstanding_i_1
       (.I0(ap_enable_reg_pp0_iter1_reg_0),
        .I1(Q[11]),
        .I2(Q[12]),
        .I3(p_5_in),
        .I4(dout[32]),
        .O(ready_for_outstanding));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi
   (SR,
    gmem_AWREADY,
    gmem_WREADY,
    gmem_BVALID,
    gmem_ARREADY,
    gmem_RVALID,
    s_ready_t_reg,
    s_ready_t_reg_0,
    \could_multi_bursts.ARVALID_Dummy_reg ,
    \dout_reg[36] ,
    m_axi_gmem_WVALID,
    m_axi_gmem_ARADDR,
    empty_n_reg,
    full_n_reg,
    dout_vld_reg,
    \could_multi_bursts.arlen_buf_reg[3] ,
    m_axi_gmem_AWVALID,
    \data_p1_reg[67] ,
    dout,
    ap_clk,
    ready_for_outstanding,
    ap_rst_n,
    pop,
    Q,
    dout_vld_reg_0,
    mem_reg,
    mem_reg_0,
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg,
    m_axi_gmem_WREADY,
    m_axi_gmem_BVALID,
    m_axi_gmem_ARREADY,
    m_axi_gmem_RVALID,
    D,
    p_5_in,
    m_axi_gmem_AWREADY,
    in,
    \dout_reg[94] ,
    mem_reg_1,
    mem_reg_2);
  output [0:0]SR;
  output gmem_AWREADY;
  output gmem_WREADY;
  output gmem_BVALID;
  output gmem_ARREADY;
  output gmem_RVALID;
  output s_ready_t_reg;
  output s_ready_t_reg_0;
  output \could_multi_bursts.ARVALID_Dummy_reg ;
  output [36:0]\dout_reg[36] ;
  output m_axi_gmem_WVALID;
  output [61:0]m_axi_gmem_ARADDR;
  output empty_n_reg;
  output full_n_reg;
  output dout_vld_reg;
  output [3:0]\could_multi_bursts.arlen_buf_reg[3] ;
  output m_axi_gmem_AWVALID;
  output [65:0]\data_p1_reg[67] ;
  output [32:0]dout;
  input ap_clk;
  input ready_for_outstanding;
  input ap_rst_n;
  input pop;
  input [1:0]Q;
  input [2:0]dout_vld_reg_0;
  input mem_reg;
  input mem_reg_0;
  input grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  input m_axi_gmem_WREADY;
  input m_axi_gmem_BVALID;
  input m_axi_gmem_ARREADY;
  input m_axi_gmem_RVALID;
  input [32:0]D;
  input p_5_in;
  input m_axi_gmem_AWREADY;
  input [92:0]in;
  input [92:0]\dout_reg[94] ;
  input [31:0]mem_reg_1;
  input mem_reg_2;

  wire [63:2]ARADDR_Dummy;
  wire [31:2]ARLEN_Dummy;
  wire ARREADY_Dummy;
  wire ARVALID_Dummy;
  wire [63:2]AWADDR_Dummy;
  wire [31:2]AWLEN_Dummy;
  wire AWREADY_Dummy;
  wire AWVALID_Dummy;
  wire [32:0]D;
  wire [1:0]Q;
  wire RBURST_READY_Dummy;
  wire [31:0]RDATA_Dummy;
  wire [0:0]RLAST_Dummy;
  wire RREADY_Dummy;
  wire RVALID_Dummy;
  wire [0:0]SR;
  wire [31:0]WDATA_Dummy;
  wire WREADY_Dummy;
  wire WVALID_Dummy;
  wire ap_clk;
  wire ap_rst_n;
  wire \buff_rdata/mOutPtr18_out ;
  wire \buff_rdata/push ;
  wire \buff_wdata/pop ;
  wire burst_end;
  wire burst_valid;
  wire bus_write_n_48;
  wire bus_write_n_49;
  wire bus_write_n_50;
  wire bus_write_n_51;
  wire bus_write_n_7;
  wire \could_multi_bursts.ARVALID_Dummy_reg ;
  wire [3:0]\could_multi_bursts.arlen_buf_reg[3] ;
  wire [65:0]\data_p1_reg[67] ;
  wire [32:0]dout;
  wire [36:0]\dout_reg[36] ;
  wire [92:0]\dout_reg[94] ;
  wire dout_vld_reg;
  wire [2:0]dout_vld_reg_0;
  wire empty_n_reg;
  wire full_n_reg;
  wire gmem_ARREADY;
  wire gmem_AWREADY;
  wire gmem_BVALID;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire [92:0]in;
  wire last_resp;
  wire [61:0]m_axi_gmem_ARADDR;
  wire m_axi_gmem_ARREADY;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire m_axi_gmem_BVALID;
  wire m_axi_gmem_RVALID;
  wire m_axi_gmem_WREADY;
  wire m_axi_gmem_WVALID;
  wire mem_reg;
  wire mem_reg_0;
  wire [31:0]mem_reg_1;
  wire mem_reg_2;
  wire need_wrsp;
  wire p_5_in;
  wire pop;
  wire ready_for_outstanding;
  wire resp_ready__1;
  wire resp_valid;
  wire \rs_rreq/load_p2 ;
  wire \rs_wreq/load_p2 ;
  wire s_ready_t_reg;
  wire s_ready_t_reg_0;
  wire store_unit_n_7;
  wire [3:0]strb_buf;
  wire ursp_ready;
  wire wrsp_type;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_read bus_read
       (.ARREADY_Dummy(ARREADY_Dummy),
        .ARVALID_Dummy(ARVALID_Dummy),
        .D({ARLEN_Dummy,ARADDR_Dummy}),
        .E(\rs_rreq/load_p2 ),
        .Q(RVALID_Dummy),
        .RBURST_READY_Dummy(RBURST_READY_Dummy),
        .RREADY_Dummy(RREADY_Dummy),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\could_multi_bursts.ARVALID_Dummy_reg_0 (\could_multi_bursts.ARVALID_Dummy_reg ),
        .\could_multi_bursts.arlen_buf_reg[3]_0 (\could_multi_bursts.arlen_buf_reg[3] ),
        .\data_p1_reg[32] ({burst_end,RDATA_Dummy}),
        .\data_p2_reg[32] (D),
        .din(RLAST_Dummy),
        .mOutPtr18_out(\buff_rdata/mOutPtr18_out ),
        .m_axi_gmem_ARADDR(m_axi_gmem_ARADDR),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
        .pop(pop),
        .push(\buff_rdata/push ),
        .s_ready_t_reg(s_ready_t_reg_0));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_write bus_write
       (.AWREADY_Dummy(AWREADY_Dummy),
        .AWVALID_Dummy(AWVALID_Dummy),
        .D({AWLEN_Dummy,AWADDR_Dummy}),
        .E(\rs_wreq/load_p2 ),
        .Q(resp_valid),
        .SR(SR),
        .WREADY_Dummy(WREADY_Dummy),
        .WVALID_Dummy(WVALID_Dummy),
        .WVALID_Dummy_reg_0(bus_write_n_7),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(bus_write_n_49),
        .burst_valid(burst_valid),
        .\data_p1_reg[67] (\data_p1_reg[67] ),
        .dout({strb_buf,WDATA_Dummy}),
        .\dout_reg[36] (\dout_reg[36] ),
        .dout_vld_reg(bus_write_n_50),
        .dout_vld_reg_0(store_unit_n_7),
        .empty_n_reg(bus_write_n_48),
        .empty_n_reg_0(bus_write_n_51),
        .last_resp(last_resp),
        .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
        .m_axi_gmem_AWVALID(m_axi_gmem_AWVALID),
        .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .m_axi_gmem_WVALID(m_axi_gmem_WVALID),
        .need_wrsp(need_wrsp),
        .pop(\buff_wdata/pop ),
        .resp_ready__1(resp_ready__1),
        .s_ready_t_reg(s_ready_t_reg),
        .ursp_ready(ursp_ready),
        .wrsp_type(wrsp_type));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_load load_unit
       (.ARREADY_Dummy(ARREADY_Dummy),
        .ARVALID_Dummy(ARVALID_Dummy),
        .D({ARLEN_Dummy,ARADDR_Dummy}),
        .E(\rs_rreq/load_p2 ),
        .Q(RVALID_Dummy),
        .RBURST_READY_Dummy(RBURST_READY_Dummy),
        .RREADY_Dummy(RREADY_Dummy),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_enable_reg_pp0_iter1_reg(gmem_WREADY),
        .ap_enable_reg_pp0_iter1_reg_0(mem_reg_0),
        .ap_rst_n(ap_rst_n),
        .din({burst_end,RLAST_Dummy,RDATA_Dummy}),
        .dout(dout),
        .\dout_reg[94] (dout_vld_reg_0[0]),
        .\dout_reg[94]_0 (\dout_reg[94] ),
        .dout_vld_reg(gmem_RVALID),
        .dout_vld_reg_0(dout_vld_reg),
        .dout_vld_reg_1(Q),
        .dout_vld_reg_2(mem_reg),
        .empty_n_reg(empty_n_reg),
        .full_n_reg(gmem_ARREADY),
        .full_n_reg_0(full_n_reg),
        .grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .mOutPtr18_out(\buff_rdata/mOutPtr18_out ),
        .mem_reg(mem_reg_2),
        .p_5_in(p_5_in),
        .pop(pop),
        .push(\buff_rdata/push ),
        .ready_for_outstanding(ready_for_outstanding));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_store store_unit
       (.AWREADY_Dummy(AWREADY_Dummy),
        .AWVALID_Dummy(AWVALID_Dummy),
        .D({AWLEN_Dummy,AWADDR_Dummy}),
        .E(\rs_wreq/load_p2 ),
        .Q(Q),
        .SR(SR),
        .WREADY_Dummy(WREADY_Dummy),
        .WVALID_Dummy(WVALID_Dummy),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .burst_valid(burst_valid),
        .dout({strb_buf,WDATA_Dummy}),
        .dout_vld_reg(gmem_BVALID),
        .dout_vld_reg_0(bus_write_n_48),
        .dout_vld_reg_1(dout_vld_reg_0[2:1]),
        .dout_vld_reg_2(resp_valid),
        .empty_n_reg(store_unit_n_7),
        .full_n_reg(gmem_AWREADY),
        .full_n_reg_0(gmem_WREADY),
        .gmem_RVALID(gmem_RVALID),
        .in(in),
        .last_resp(last_resp),
        .\mOutPtr_reg[0] (bus_write_n_7),
        .mem_reg(mem_reg),
        .mem_reg_0(mem_reg_0),
        .mem_reg_1(bus_write_n_51),
        .mem_reg_2(bus_write_n_50),
        .mem_reg_3(bus_write_n_49),
        .mem_reg_4(mem_reg_1),
        .need_wrsp(need_wrsp),
        .pop(\buff_wdata/pop ),
        .resp_ready__1(resp_ready__1),
        .ursp_ready(ursp_ready),
        .wrsp_type(wrsp_type));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo
   (wreq_valid,
    full_n_reg_0,
    push,
    valid_length,
    \dout_reg[92] ,
    S,
    \dout_reg[70] ,
    \dout_reg[66] ,
    \dout_reg[78] ,
    \dout_reg[82] ,
    \dout_reg[86] ,
    \dout_reg[90] ,
    \dout_reg[93] ,
    full_n_reg_1,
    SR,
    ap_clk,
    ap_rst_n,
    Q,
    \mOutPtr_reg[0]_0 ,
    wrsp_ready,
    tmp_valid_reg,
    AWREADY_Dummy,
    in);
  output wreq_valid;
  output full_n_reg_0;
  output push;
  output valid_length;
  output [90:0]\dout_reg[92] ;
  output [3:0]S;
  output [3:0]\dout_reg[70] ;
  output [2:0]\dout_reg[66] ;
  output [3:0]\dout_reg[78] ;
  output [3:0]\dout_reg[82] ;
  output [3:0]\dout_reg[86] ;
  output [3:0]\dout_reg[90] ;
  output [2:0]\dout_reg[93] ;
  output full_n_reg_1;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input [1:0]Q;
  input [0:0]\mOutPtr_reg[0]_0 ;
  input wrsp_ready;
  input tmp_valid_reg;
  input AWREADY_Dummy;
  input [92:0]in;

  wire AWREADY_Dummy;
  wire [1:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire [2:0]\dout_reg[66] ;
  wire [3:0]\dout_reg[70] ;
  wire [3:0]\dout_reg[78] ;
  wire [3:0]\dout_reg[82] ;
  wire [3:0]\dout_reg[86] ;
  wire [3:0]\dout_reg[90] ;
  wire [90:0]\dout_reg[92] ;
  wire [2:0]\dout_reg[93] ;
  wire dout_vld_i_1_n_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2_n_0;
  wire empty_n_reg_n_0;
  wire full_n_i_1_n_0;
  wire full_n_i_2_n_0;
  wire full_n_reg_0;
  wire full_n_reg_1;
  wire [92:0]in;
  wire \mOutPtr[0]_i_1_n_0 ;
  wire \mOutPtr[1]_i_1_n_0 ;
  wire \mOutPtr[2]_i_1_n_0 ;
  wire \mOutPtr[3]_i_1_n_0 ;
  wire \mOutPtr[3]_i_2_n_0 ;
  wire [0:0]\mOutPtr_reg[0]_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire pop;
  wire push;
  wire push_0;
  wire \raddr[0]_i_1_n_0 ;
  wire \raddr[1]_i_1_n_0 ;
  wire \raddr[2]_i_1_n_0 ;
  wire \raddr_reg_n_0_[0] ;
  wire \raddr_reg_n_0_[1] ;
  wire \raddr_reg_n_0_[2] ;
  wire tmp_valid_reg;
  wire valid_length;
  wire wreq_valid;
  wire wrsp_ready;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl U_fifo_srl
       (.AWREADY_Dummy(AWREADY_Dummy),
        .Q(Q),
        .S(S),
        .SR(SR),
        .ap_clk(ap_clk),
        .\dout_reg[0]_0 (wreq_valid),
        .\dout_reg[0]_1 (empty_n_reg_n_0),
        .\dout_reg[66]_0 (\dout_reg[66] ),
        .\dout_reg[70]_0 (\dout_reg[70] ),
        .\dout_reg[78]_0 (\dout_reg[78] ),
        .\dout_reg[82]_0 (\dout_reg[82] ),
        .\dout_reg[86]_0 (\dout_reg[86] ),
        .\dout_reg[90]_0 (\dout_reg[90] ),
        .\dout_reg[92]_0 (\dout_reg[92] ),
        .\dout_reg[93]_0 (\dout_reg[93] ),
        .\dout_reg[94]_0 (full_n_reg_0),
        .\dout_reg[94]_1 (\mOutPtr_reg[0]_0 ),
        .\dout_reg[94]_2 (\raddr_reg_n_0_[0] ),
        .\dout_reg[94]_3 (\raddr_reg_n_0_[1] ),
        .full_n_reg(full_n_reg_1),
        .in(in),
        .pop(pop),
        .push(push),
        .push_0(push_0),
        .tmp_valid_reg(tmp_valid_reg),
        .valid_length(valid_length),
        .wrsp_ready(wrsp_ready));
  LUT5 #(
    .INIT(32'hBAAAFFAA)) 
    dout_vld_i_1
       (.I0(empty_n_reg_n_0),
        .I1(AWREADY_Dummy),
        .I2(tmp_valid_reg),
        .I3(wreq_valid),
        .I4(wrsp_ready),
        .O(dout_vld_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1_n_0),
        .Q(wreq_valid),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFBFF00FFFB00)) 
    empty_n_i_1
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(empty_n_i_2_n_0),
        .I3(pop),
        .I4(push_0),
        .I5(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    empty_n_i_2
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[2] ),
        .O(empty_n_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFF55FFFFFDFDFF55)) 
    full_n_i_1
       (.I0(ap_rst_n),
        .I1(empty_n_i_2_n_0),
        .I2(full_n_i_2_n_0),
        .I3(full_n_reg_0),
        .I4(push_0),
        .I5(pop),
        .O(full_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h7)) 
    full_n_i_2
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .O(full_n_i_2_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \mOutPtr[1]_i_1 
       (.I0(pop),
        .I1(push_0),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .O(\mOutPtr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT5 #(
    .INIT(32'hE7EE1811)) 
    \mOutPtr[2]_i_1 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(pop),
        .I3(push_0),
        .I4(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h1FFFE000)) 
    \mOutPtr[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(full_n_reg_0),
        .I3(\mOutPtr_reg[0]_0 ),
        .I4(pop),
        .O(\mOutPtr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE7FFEFE01800101)) 
    \mOutPtr[3]_i_2 
       (.I0(\mOutPtr_reg_n_0_[2] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .I3(pop),
        .I4(push_0),
        .I5(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1_n_0 ),
        .D(\mOutPtr[0]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1_n_0 ),
        .D(\mOutPtr[1]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1_n_0 ),
        .D(\mOutPtr[2]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1_n_0 ),
        .D(\mOutPtr[3]_i_2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h9D9D9D9D62626240)) 
    \raddr[0]_i_1 
       (.I0(pop),
        .I1(push_0),
        .I2(empty_n_reg_n_0),
        .I3(\raddr_reg_n_0_[2] ),
        .I4(\raddr_reg_n_0_[1] ),
        .I5(\raddr_reg_n_0_[0] ),
        .O(\raddr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCC989866CCCCCC)) 
    \raddr[1]_i_1 
       (.I0(\raddr_reg_n_0_[0] ),
        .I1(\raddr_reg_n_0_[1] ),
        .I2(\raddr_reg_n_0_[2] ),
        .I3(empty_n_reg_n_0),
        .I4(push_0),
        .I5(pop),
        .O(\raddr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0E0E078F0F0F0)) 
    \raddr[2]_i_1 
       (.I0(\raddr_reg_n_0_[0] ),
        .I1(\raddr_reg_n_0_[1] ),
        .I2(\raddr_reg_n_0_[2] ),
        .I3(empty_n_reg_n_0),
        .I4(push_0),
        .I5(pop),
        .O(\raddr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[0]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[1]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[2]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[2] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo_10
   (full_n_reg_0,
    E,
    Q,
    S,
    \dout_reg[70] ,
    \dout_reg[66] ,
    \dout_reg[78] ,
    \dout_reg[82] ,
    \dout_reg[86] ,
    \dout_reg[90] ,
    \dout_reg[93] ,
    s_ready_t_reg,
    full_n_reg_1,
    SR,
    ap_clk,
    ap_rst_n,
    tmp_valid_reg,
    ARREADY_Dummy,
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg,
    \dout_reg[94] ,
    \dout_reg[94]_0 ,
    \dout_reg[94]_1 );
  output full_n_reg_0;
  output [0:0]E;
  output [90:0]Q;
  output [3:0]S;
  output [3:0]\dout_reg[70] ;
  output [2:0]\dout_reg[66] ;
  output [3:0]\dout_reg[78] ;
  output [3:0]\dout_reg[82] ;
  output [3:0]\dout_reg[86] ;
  output [3:0]\dout_reg[90] ;
  output [2:0]\dout_reg[93] ;
  output s_ready_t_reg;
  output full_n_reg_1;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input tmp_valid_reg;
  input ARREADY_Dummy;
  input grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  input [0:0]\dout_reg[94] ;
  input [1:0]\dout_reg[94]_0 ;
  input [92:0]\dout_reg[94]_1 ;

  wire ARREADY_Dummy;
  wire [0:0]E;
  wire [90:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire [2:0]\dout_reg[66] ;
  wire [3:0]\dout_reg[70] ;
  wire [3:0]\dout_reg[78] ;
  wire [3:0]\dout_reg[82] ;
  wire [3:0]\dout_reg[86] ;
  wire [3:0]\dout_reg[90] ;
  wire [2:0]\dout_reg[93] ;
  wire [0:0]\dout_reg[94] ;
  wire [1:0]\dout_reg[94]_0 ;
  wire [92:0]\dout_reg[94]_1 ;
  wire dout_vld_i_1__3_n_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__3_n_0;
  wire empty_n_reg_n_0;
  wire full_n_i_1__3_n_0;
  wire full_n_i_2__3_n_0;
  wire full_n_reg_0;
  wire full_n_reg_1;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire \mOutPtr[0]_i_1__3_n_0 ;
  wire \mOutPtr[1]_i_1__4_n_0 ;
  wire \mOutPtr[2]_i_1__4_n_0 ;
  wire \mOutPtr[3]_i_1__4_n_0 ;
  wire \mOutPtr[3]_i_2__1_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire pop;
  wire push;
  wire \raddr[0]_i_1_n_0 ;
  wire \raddr[1]_i_1_n_0 ;
  wire \raddr[2]_i_1_n_0 ;
  wire \raddr_reg_n_0_[0] ;
  wire \raddr_reg_n_0_[1] ;
  wire \raddr_reg_n_0_[2] ;
  wire rreq_valid;
  wire s_ready_t_reg;
  wire tmp_valid_reg;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl_11 U_fifo_srl
       (.ARREADY_Dummy(ARREADY_Dummy),
        .E(E),
        .Q(Q),
        .S(S),
        .SR(SR),
        .ap_clk(ap_clk),
        .\dout_reg[0]_0 (empty_n_reg_n_0),
        .\dout_reg[66]_0 (\dout_reg[66] ),
        .\dout_reg[70]_0 (\dout_reg[70] ),
        .\dout_reg[78]_0 (\dout_reg[78] ),
        .\dout_reg[82]_0 (\dout_reg[82] ),
        .\dout_reg[86]_0 (\dout_reg[86] ),
        .\dout_reg[90]_0 (\dout_reg[90] ),
        .\dout_reg[93]_0 (\dout_reg[93] ),
        .\dout_reg[94]_0 (full_n_reg_0),
        .\dout_reg[94]_1 (\dout_reg[94] ),
        .\dout_reg[94]_2 (\dout_reg[94]_0 ),
        .\dout_reg[94]_3 (\dout_reg[94]_1 ),
        .\dout_reg[94]_4 (\raddr_reg_n_0_[0] ),
        .\dout_reg[94]_5 (\raddr_reg_n_0_[1] ),
        .grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .pop(pop),
        .push(push),
        .rreq_valid(rreq_valid),
        .s_ready_t_reg(s_ready_t_reg),
        .tmp_valid_reg(tmp_valid_reg));
  LUT3 #(
    .INIT(8'h7F)) 
    \ap_CS_fsm[1]_i_4 
       (.I0(full_n_reg_0),
        .I1(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I2(\dout_reg[94] ),
        .O(full_n_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hAEAA)) 
    dout_vld_i_1__3
       (.I0(empty_n_reg_n_0),
        .I1(rreq_valid),
        .I2(ARREADY_Dummy),
        .I3(tmp_valid_reg),
        .O(dout_vld_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__3_n_0),
        .Q(rreq_valid),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFBFF00FFFB00)) 
    empty_n_i_1
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(empty_n_i_2__3_n_0),
        .I3(pop),
        .I4(push),
        .I5(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    empty_n_i_2__3
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[2] ),
        .O(empty_n_i_2__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFF55FFFFFDFDFF55)) 
    full_n_i_1__3
       (.I0(ap_rst_n),
        .I1(empty_n_i_2__3_n_0),
        .I2(full_n_i_2__3_n_0),
        .I3(full_n_reg_0),
        .I4(push),
        .I5(pop),
        .O(full_n_i_1__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT2 #(
    .INIT(4'h7)) 
    full_n_i_2__3
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .O(full_n_i_2__3_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__3_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__3 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \mOutPtr[1]_i_1__4 
       (.I0(pop),
        .I1(push),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .O(\mOutPtr[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT5 #(
    .INIT(32'hE7EE1811)) 
    \mOutPtr[2]_i_1__4 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(pop),
        .I3(push),
        .I4(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h5955AAAA)) 
    \mOutPtr[3]_i_1__4 
       (.I0(push),
        .I1(tmp_valid_reg),
        .I2(ARREADY_Dummy),
        .I3(rreq_valid),
        .I4(empty_n_reg_n_0),
        .O(\mOutPtr[3]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hFE7FFEFE01800101)) 
    \mOutPtr[3]_i_2__1 
       (.I0(\mOutPtr_reg_n_0_[2] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .I3(pop),
        .I4(push),
        .I5(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__4_n_0 ),
        .D(\mOutPtr[0]_i_1__3_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__4_n_0 ),
        .D(\mOutPtr[1]_i_1__4_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__4_n_0 ),
        .D(\mOutPtr[2]_i_1__4_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__4_n_0 ),
        .D(\mOutPtr[3]_i_2__1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h9D9D9D9D62626240)) 
    \raddr[0]_i_1 
       (.I0(pop),
        .I1(push),
        .I2(empty_n_reg_n_0),
        .I3(\raddr_reg_n_0_[2] ),
        .I4(\raddr_reg_n_0_[1] ),
        .I5(\raddr_reg_n_0_[0] ),
        .O(\raddr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCC989866CCCCCC)) 
    \raddr[1]_i_1 
       (.I0(\raddr_reg_n_0_[0] ),
        .I1(\raddr_reg_n_0_[1] ),
        .I2(\raddr_reg_n_0_[2] ),
        .I3(empty_n_reg_n_0),
        .I4(push),
        .I5(pop),
        .O(\raddr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0E0E078F0F0F0)) 
    \raddr[2]_i_1 
       (.I0(\raddr_reg_n_0_[0] ),
        .I1(\raddr_reg_n_0_[1] ),
        .I2(\raddr_reg_n_0_[2] ),
        .I3(empty_n_reg_n_0),
        .I4(push),
        .I5(pop),
        .O(\raddr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[0]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[1]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\raddr[2]_i_1_n_0 ),
        .Q(\raddr_reg_n_0_[2] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \tmp_addr[63]_i_1__0 
       (.I0(tmp_valid_reg),
        .I1(ARREADY_Dummy),
        .I2(rreq_valid),
        .O(E));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized0
   (WVALID_Dummy,
    full_n_reg_0,
    empty_n_reg_0,
    dout,
    SR,
    dout_vld_reg_0,
    ap_clk,
    ap_rst_n,
    pop,
    burst_valid,
    \mOutPtr_reg[0]_0 ,
    WREADY_Dummy,
    mem_reg,
    gmem_RVALID,
    mem_reg_0,
    Q,
    mem_reg_1,
    mem_reg_2,
    mem_reg_3,
    mem_reg_4);
  output WVALID_Dummy;
  output full_n_reg_0;
  output empty_n_reg_0;
  output [35:0]dout;
  input [0:0]SR;
  input dout_vld_reg_0;
  input ap_clk;
  input ap_rst_n;
  input pop;
  input burst_valid;
  input \mOutPtr_reg[0]_0 ;
  input WREADY_Dummy;
  input mem_reg;
  input gmem_RVALID;
  input mem_reg_0;
  input [1:0]Q;
  input mem_reg_1;
  input mem_reg_2;
  input mem_reg_3;
  input [31:0]mem_reg_4;

  wire [1:0]Q;
  wire [0:0]SR;
  wire WREADY_Dummy;
  wire WVALID_Dummy;
  wire ap_clk;
  wire ap_rst_n;
  wire burst_valid;
  wire [35:0]dout;
  wire dout_vld_reg_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__0_n_0;
  wire empty_n_reg_0;
  wire full_n_i_1__0_n_0;
  wire full_n_i_2__1_n_0;
  wire full_n_reg_0;
  wire gmem_RVALID;
  wire mOutPtr18_out;
  wire \mOutPtr[0]_i_1__0_n_0 ;
  wire \mOutPtr[1]_i_1__2_n_0 ;
  wire \mOutPtr[2]_i_1__2_n_0 ;
  wire \mOutPtr[3]_i_1__2_n_0 ;
  wire \mOutPtr[4]_i_1__1_n_0 ;
  wire \mOutPtr[4]_i_2__1_n_0 ;
  wire \mOutPtr_reg[0]_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire mem_reg;
  wire mem_reg_0;
  wire mem_reg_1;
  wire mem_reg_2;
  wire mem_reg_3;
  wire [31:0]mem_reg_4;
  wire pop;
  wire push;
  wire [3:0]raddr;
  wire [3:0]rnext;
  wire \waddr[0]_i_1__0_n_0 ;
  wire \waddr[1]_i_1_n_0 ;
  wire \waddr[2]_i_1_n_0 ;
  wire \waddr[3]_i_1_n_0 ;
  wire \waddr_reg_n_0_[0] ;
  wire \waddr_reg_n_0_[1] ;
  wire \waddr_reg_n_0_[2] ;
  wire \waddr_reg_n_0_[3] ;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_mem U_fifo_mem
       (.Q(Q),
        .SR(SR),
        .ap_clk(ap_clk),
        .dout(dout),
        .gmem_RVALID(gmem_RVALID),
        .mem_reg_0(full_n_reg_0),
        .mem_reg_1(mem_reg),
        .mem_reg_2(mem_reg_0),
        .mem_reg_3(mem_reg_1),
        .mem_reg_4(mem_reg_2),
        .mem_reg_5(mem_reg_3),
        .mem_reg_6({\waddr_reg_n_0_[3] ,\waddr_reg_n_0_[2] ,\waddr_reg_n_0_[1] ,\waddr_reg_n_0_[0] }),
        .mem_reg_7(mem_reg_4),
        .pop(pop),
        .push(push),
        .raddr(raddr),
        .rnext(rnext));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_reg_0),
        .Q(WVALID_Dummy),
        .R(SR));
  LUT4 #(
    .INIT(16'hFB38)) 
    empty_n_i_1
       (.I0(empty_n_i_2__0_n_0),
        .I1(pop),
        .I2(push),
        .I3(empty_n_reg_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__0
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hF5FFDDF5)) 
    full_n_i_1__0
       (.I0(ap_rst_n),
        .I1(full_n_i_2__1_n_0),
        .I2(full_n_reg_0),
        .I3(push),
        .I4(pop),
        .O(full_n_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__1
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__0_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__0 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__2 
       (.I0(mOutPtr18_out),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__2 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(mOutPtr18_out),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__2 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(mOutPtr18_out),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h66A65555AAAAAAAA)) 
    \mOutPtr[4]_i_1__1 
       (.I0(push),
        .I1(burst_valid),
        .I2(\mOutPtr_reg[0]_0 ),
        .I3(WREADY_Dummy),
        .I4(WVALID_Dummy),
        .I5(empty_n_reg_0),
        .O(\mOutPtr[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__1 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(mOutPtr18_out),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h22A22222A2A2A2A2)) 
    \mOutPtr[4]_i_3__1 
       (.I0(push),
        .I1(empty_n_reg_0),
        .I2(WVALID_Dummy),
        .I3(WREADY_Dummy),
        .I4(\mOutPtr_reg[0]_0 ),
        .I5(burst_valid),
        .O(mOutPtr18_out));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__1_n_0 ),
        .D(\mOutPtr[0]_i_1__0_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__1_n_0 ),
        .D(\mOutPtr[1]_i_1__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__1_n_0 ),
        .D(\mOutPtr[2]_i_1__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__1_n_0 ),
        .D(\mOutPtr[3]_i_1__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__1_n_0 ),
        .D(\mOutPtr[4]_i_2__1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[0]),
        .Q(raddr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[1]),
        .Q(raddr[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[2]),
        .Q(raddr[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[3]),
        .Q(raddr[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h007F)) 
    \waddr[0]_i_1__0 
       (.I0(\waddr_reg_n_0_[1] ),
        .I1(\waddr_reg_n_0_[3] ),
        .I2(\waddr_reg_n_0_[2] ),
        .I3(\waddr_reg_n_0_[0] ),
        .O(\waddr[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h552A)) 
    \waddr[1]_i_1 
       (.I0(\waddr_reg_n_0_[1] ),
        .I1(\waddr_reg_n_0_[3] ),
        .I2(\waddr_reg_n_0_[2] ),
        .I3(\waddr_reg_n_0_[0] ),
        .O(\waddr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h5A70)) 
    \waddr[2]_i_1 
       (.I0(\waddr_reg_n_0_[1] ),
        .I1(\waddr_reg_n_0_[3] ),
        .I2(\waddr_reg_n_0_[2] ),
        .I3(\waddr_reg_n_0_[0] ),
        .O(\waddr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h6C4C)) 
    \waddr[3]_i_1 
       (.I0(\waddr_reg_n_0_[1] ),
        .I1(\waddr_reg_n_0_[3] ),
        .I2(\waddr_reg_n_0_[2] ),
        .I3(\waddr_reg_n_0_[0] ),
        .O(\waddr[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[0] 
       (.C(ap_clk),
        .CE(push),
        .D(\waddr[0]_i_1__0_n_0 ),
        .Q(\waddr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[1] 
       (.C(ap_clk),
        .CE(push),
        .D(\waddr[1]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[2] 
       (.C(ap_clk),
        .CE(push),
        .D(\waddr[2]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[3] 
       (.C(ap_clk),
        .CE(push),
        .D(\waddr[3]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[3] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1
   (\dout_reg[0] ,
    wrsp_ready,
    E,
    p_12_in,
    push__0,
    resp_ready__1,
    push,
    valid_length,
    ap_clk,
    SR,
    ap_rst_n,
    AWREADY_Dummy,
    \mOutPtr_reg[0]_0 ,
    wreq_valid,
    last_resp,
    dout_vld_reg_0,
    dout_vld_reg_1,
    pop,
    need_wrsp);
  output \dout_reg[0] ;
  output wrsp_ready;
  output [0:0]E;
  output p_12_in;
  output push__0;
  output resp_ready__1;
  input push;
  input valid_length;
  input ap_clk;
  input [0:0]SR;
  input ap_rst_n;
  input AWREADY_Dummy;
  input \mOutPtr_reg[0]_0 ;
  input wreq_valid;
  input last_resp;
  input [0:0]dout_vld_reg_0;
  input dout_vld_reg_1;
  input pop;
  input need_wrsp;

  wire AWREADY_Dummy;
  wire [0:0]E;
  wire [0:0]SR;
  wire U_fifo_srl_n_10;
  wire U_fifo_srl_n_11;
  wire U_fifo_srl_n_15;
  wire U_fifo_srl_n_2;
  wire U_fifo_srl_n_3;
  wire U_fifo_srl_n_4;
  wire U_fifo_srl_n_5;
  wire U_fifo_srl_n_6;
  wire U_fifo_srl_n_7;
  wire U_fifo_srl_n_8;
  wire U_fifo_srl_n_9;
  wire ap_clk;
  wire ap_rst_n;
  wire \dout_reg[0] ;
  wire [0:0]dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__1_n_0;
  wire empty_n_reg_n_0;
  wire full_n_i_2__2_n_0;
  wire last_resp;
  wire \mOutPtr[0]_i_1__1_n_0 ;
  wire \mOutPtr_reg[0]_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire need_wrsp;
  wire p_12_in;
  wire pop;
  wire pop_1;
  wire push;
  wire push__0;
  wire \raddr[0]_i_1_n_0 ;
  wire [3:0]raddr_reg;
  wire resp_ready__1;
  wire valid_length;
  wire wreq_valid;
  wire wrsp_ready;
  wire wrsp_valid;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0 U_fifo_srl
       (.AWREADY_Dummy(AWREADY_Dummy),
        .D({U_fifo_srl_n_5,U_fifo_srl_n_6,U_fifo_srl_n_7}),
        .E(E),
        .Q(raddr_reg),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(U_fifo_srl_n_2),
        .\dout_reg[0]_0 (\dout_reg[0] ),
        .dout_vld_reg(empty_n_reg_n_0),
        .dout_vld_reg_0(dout_vld_reg_0),
        .dout_vld_reg_1(dout_vld_reg_1),
        .empty_n_reg(U_fifo_srl_n_15),
        .full_n_reg(full_n_i_2__2_n_0),
        .last_resp(last_resp),
        .\mOutPtr_reg[0] (wrsp_ready),
        .\mOutPtr_reg[0]_0 (\mOutPtr_reg[0]_0 ),
        .\mOutPtr_reg[3] ({U_fifo_srl_n_8,U_fifo_srl_n_9,U_fifo_srl_n_10,U_fifo_srl_n_11}),
        .\mOutPtr_reg[4] ({\mOutPtr_reg_n_0_[4] ,\mOutPtr_reg_n_0_[3] ,\mOutPtr_reg_n_0_[2] ,\mOutPtr_reg_n_0_[1] ,\mOutPtr_reg_n_0_[0] }),
        .need_wrsp(need_wrsp),
        .p_12_in(p_12_in),
        .pop(pop),
        .pop_1(pop_1),
        .push(push),
        .push__0(push__0),
        .\raddr_reg[0] (U_fifo_srl_n_4),
        .resp_ready__1(resp_ready__1),
        .s_ready_t_reg(U_fifo_srl_n_3),
        .valid_length(valid_length),
        .wreq_valid(wreq_valid),
        .wrsp_valid(wrsp_valid));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_15),
        .Q(wrsp_valid),
        .R(SR));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__1_n_0),
        .I1(pop_1),
        .I2(wrsp_ready),
        .I3(E),
        .I4(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__1
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__2
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__2_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_2),
        .Q(wrsp_ready),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__1 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(\mOutPtr[0]_i_1__1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_11),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_10),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_9),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_8),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_4),
        .D(\raddr[0]_i_1_n_0 ),
        .Q(raddr_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_4),
        .D(U_fifo_srl_n_7),
        .Q(raddr_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_4),
        .D(U_fifo_srl_n_6),
        .Q(raddr_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_4),
        .D(U_fifo_srl_n_5),
        .Q(raddr_reg[3]),
        .R(SR));
  LUT4 #(
    .INIT(16'h8808)) 
    \tmp_addr[63]_i_1 
       (.I0(wrsp_ready),
        .I1(wreq_valid),
        .I2(\mOutPtr_reg[0]_0 ),
        .I3(AWREADY_Dummy),
        .O(E));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_12
   (last_resp,
    dout_vld_reg_0,
    fifo_resp_ready,
    \could_multi_bursts.AWVALID_Dummy_reg ,
    sel,
    ap_clk,
    SR,
    ap_rst_n,
    \could_multi_bursts.next_loop ,
    resp_ready__1,
    Q,
    wrsp_type,
    ursp_ready,
    \could_multi_bursts.AWVALID_Dummy_reg_0 ,
    \could_multi_bursts.AWVALID_Dummy_reg_1 ,
    fifo_burst_ready,
    AWREADY_Dummy_0,
    \dout_reg[0] ,
    \dout_reg[0]_0 ,
    \dout_reg[0]_1 );
  output last_resp;
  output dout_vld_reg_0;
  output fifo_resp_ready;
  output \could_multi_bursts.AWVALID_Dummy_reg ;
  input sel;
  input ap_clk;
  input [0:0]SR;
  input ap_rst_n;
  input \could_multi_bursts.next_loop ;
  input resp_ready__1;
  input [0:0]Q;
  input wrsp_type;
  input ursp_ready;
  input \could_multi_bursts.AWVALID_Dummy_reg_0 ;
  input \could_multi_bursts.AWVALID_Dummy_reg_1 ;
  input fifo_burst_ready;
  input AWREADY_Dummy_0;
  input \dout_reg[0] ;
  input \dout_reg[0]_0 ;
  input \dout_reg[0]_1 ;

  wire AWREADY_Dummy_0;
  wire [0:0]Q;
  wire [0:0]SR;
  wire U_fifo_srl_n_2;
  wire U_fifo_srl_n_3;
  wire ap_clk;
  wire ap_rst_n;
  wire \could_multi_bursts.AWVALID_Dummy_reg ;
  wire \could_multi_bursts.AWVALID_Dummy_reg_0 ;
  wire \could_multi_bursts.AWVALID_Dummy_reg_1 ;
  wire \could_multi_bursts.next_loop ;
  wire \dout_reg[0] ;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire dout_vld_reg_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__8_n_0;
  wire empty_n_reg_n_0;
  wire fifo_burst_ready;
  wire fifo_resp_ready;
  wire full_n_i_2__8_n_0;
  wire last_resp;
  wire \mOutPtr[0]_i_1__8_n_0 ;
  wire \mOutPtr[1]_i_1__7_n_0 ;
  wire \mOutPtr[2]_i_1__7_n_0 ;
  wire \mOutPtr[3]_i_1__7_n_0 ;
  wire \mOutPtr[4]_i_1__4_n_0 ;
  wire \mOutPtr[4]_i_2__3_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire p_12_in;
  wire p_8_in;
  wire pop;
  wire raddr113_out;
  wire \raddr[0]_i_1__3_n_0 ;
  wire \raddr[1]_i_1__2_n_0 ;
  wire \raddr[2]_i_1__2_n_0 ;
  wire \raddr[3]_i_1__2_n_0 ;
  wire \raddr[3]_i_2__2_n_0 ;
  wire [3:0]raddr_reg;
  wire resp_ready__1;
  wire sel;
  wire ursp_ready;
  wire wrsp_type;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0_13 U_fifo_srl
       (.Q(raddr_reg),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(U_fifo_srl_n_2),
        .\could_multi_bursts.next_loop (\could_multi_bursts.next_loop ),
        .\dout_reg[0]_0 (\dout_reg[0] ),
        .\dout_reg[0]_1 (\dout_reg[0]_0 ),
        .\dout_reg[0]_2 (\dout_reg[0]_1 ),
        .dout_vld_reg(Q),
        .dout_vld_reg_0(dout_vld_reg_0),
        .dout_vld_reg_1(empty_n_reg_n_0),
        .empty_n_reg(U_fifo_srl_n_3),
        .full_n_reg(full_n_i_2__8_n_0),
        .full_n_reg_0(fifo_resp_ready),
        .last_resp(last_resp),
        .pop(pop),
        .sel(sel),
        .ursp_ready(ursp_ready),
        .wrsp_type(wrsp_type));
  LUT5 #(
    .INIT(32'hC000EAAA)) 
    \could_multi_bursts.AWVALID_Dummy_i_1 
       (.I0(\could_multi_bursts.AWVALID_Dummy_reg_0 ),
        .I1(\could_multi_bursts.AWVALID_Dummy_reg_1 ),
        .I2(fifo_resp_ready),
        .I3(fifo_burst_ready),
        .I4(AWREADY_Dummy_0),
        .O(\could_multi_bursts.AWVALID_Dummy_reg ));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_3),
        .Q(dout_vld_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__8_n_0),
        .I1(pop),
        .I2(fifo_resp_ready),
        .I3(\could_multi_bursts.next_loop ),
        .I4(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__8
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__8
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__8_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_2),
        .Q(fifo_resp_ready),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__8 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__7 
       (.I0(p_12_in),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__7 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(p_12_in),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__7 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(p_12_in),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__7_n_0 ));
  LUT6 #(
    .INIT(64'h7888777788888888)) 
    \mOutPtr[4]_i_1__4 
       (.I0(fifo_resp_ready),
        .I1(\could_multi_bursts.next_loop ),
        .I2(resp_ready__1),
        .I3(Q),
        .I4(dout_vld_reg_0),
        .I5(empty_n_reg_n_0),
        .O(\mOutPtr[4]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__3 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(p_12_in),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h0808880888088808)) 
    \mOutPtr[4]_i_3__3 
       (.I0(\could_multi_bursts.next_loop ),
        .I1(fifo_resp_ready),
        .I2(empty_n_reg_n_0),
        .I3(dout_vld_reg_0),
        .I4(Q),
        .I5(resp_ready__1),
        .O(p_12_in));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__4_n_0 ),
        .D(\mOutPtr[0]_i_1__8_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__4_n_0 ),
        .D(\mOutPtr[1]_i_1__7_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__4_n_0 ),
        .D(\mOutPtr[2]_i_1__7_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__4_n_0 ),
        .D(\mOutPtr[3]_i_1__7_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__4_n_0 ),
        .D(\mOutPtr[4]_i_2__3_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1__3 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h6A95)) 
    \raddr[1]_i_1__2 
       (.I0(raddr_reg[0]),
        .I1(empty_n_reg_n_0),
        .I2(p_12_in),
        .I3(raddr_reg[1]),
        .O(\raddr[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h7F80F807)) 
    \raddr[2]_i_1__2 
       (.I0(p_12_in),
        .I1(empty_n_reg_n_0),
        .I2(raddr_reg[0]),
        .I3(raddr_reg[2]),
        .I4(raddr_reg[1]),
        .O(\raddr[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \raddr[3]_i_1__2 
       (.I0(raddr_reg[0]),
        .I1(raddr_reg[1]),
        .I2(raddr_reg[3]),
        .I3(raddr_reg[2]),
        .I4(p_8_in),
        .I5(raddr113_out),
        .O(\raddr[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2__2 
       (.I0(raddr_reg[1]),
        .I1(p_12_in),
        .I2(empty_n_reg_n_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[3]),
        .I5(raddr_reg[2]),
        .O(\raddr[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000A222A222A222)) 
    \raddr[3]_i_3__1 
       (.I0(empty_n_reg_n_0),
        .I1(dout_vld_reg_0),
        .I2(Q),
        .I3(resp_ready__1),
        .I4(\could_multi_bursts.next_loop ),
        .I5(fifo_resp_ready),
        .O(p_8_in));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \raddr[3]_i_4__1 
       (.I0(p_12_in),
        .I1(empty_n_reg_n_0),
        .O(raddr113_out));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__2_n_0 ),
        .D(\raddr[0]_i_1__3_n_0 ),
        .Q(raddr_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__2_n_0 ),
        .D(\raddr[1]_i_1__2_n_0 ),
        .Q(raddr_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__2_n_0 ),
        .D(\raddr[2]_i_1__2_n_0 ),
        .Q(raddr_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__2_n_0 ),
        .D(\raddr[3]_i_2__2_n_0 ),
        .Q(raddr_reg[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_14
   (burst_valid,
    empty_n_reg_0,
    \could_multi_bursts.last_loop__10 ,
    \sect_len_buf_reg[8] ,
    \sect_len_buf_reg[5] ,
    din,
    ap_clk,
    SR,
    pop,
    ap_rst_n,
    p_13_in,
    push,
    Q,
    \dout_reg[0] ,
    \sect_len_buf_reg[9] ,
    \sect_len_buf_reg[9]_0 ,
    m_axi_gmem_ARREADY,
    \dout_reg[0]_0 ,
    \dout_reg[0]_1 ,
    fifo_rctl_ready,
    dout_vld_reg_0,
    RREADY_Dummy);
  output burst_valid;
  output empty_n_reg_0;
  output \could_multi_bursts.last_loop__10 ;
  output \sect_len_buf_reg[8] ;
  output \sect_len_buf_reg[5] ;
  output [0:0]din;
  input ap_clk;
  input [0:0]SR;
  input pop;
  input ap_rst_n;
  input p_13_in;
  input push;
  input [0:0]Q;
  input \dout_reg[0] ;
  input [5:0]\sect_len_buf_reg[9] ;
  input [5:0]\sect_len_buf_reg[9]_0 ;
  input m_axi_gmem_ARREADY;
  input \dout_reg[0]_0 ;
  input \dout_reg[0]_1 ;
  input fifo_rctl_ready;
  input [0:0]dout_vld_reg_0;
  input RREADY_Dummy;

  wire [0:0]Q;
  wire RREADY_Dummy;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire burst_valid;
  wire \could_multi_bursts.last_loop__10 ;
  wire [0:0]din;
  wire \dout_reg[0] ;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire dout_vld_i_1__10_n_0;
  wire [0:0]dout_vld_reg_0;
  wire empty_n_i_1__0_n_0;
  wire empty_n_i_2__10_n_0;
  wire empty_n_reg_0;
  wire fifo_rctl_ready;
  wire full_n_i_1__10_n_0;
  wire full_n_i_2__10_n_0;
  wire full_n_reg_n_0;
  wire \mOutPtr[0]_i_1__10_n_0 ;
  wire \mOutPtr[1]_i_1__6_n_0 ;
  wire \mOutPtr[2]_i_1__6_n_0 ;
  wire \mOutPtr[3]_i_1__6_n_0 ;
  wire \mOutPtr[4]_i_1__3_n_0 ;
  wire \mOutPtr[4]_i_2__2_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire m_axi_gmem_ARREADY;
  wire p_12_in;
  wire p_13_in;
  wire p_8_in;
  wire pop;
  wire push;
  wire raddr113_out;
  wire \raddr[0]_i_1__4_n_0 ;
  wire \raddr[1]_i_1__1_n_0 ;
  wire \raddr[2]_i_1__1_n_0 ;
  wire \raddr[3]_i_1__1_n_0 ;
  wire \raddr[3]_i_2__1_n_0 ;
  wire [3:0]raddr_reg;
  wire \sect_len_buf_reg[5] ;
  wire \sect_len_buf_reg[8] ;
  wire [5:0]\sect_len_buf_reg[9] ;
  wire [5:0]\sect_len_buf_reg[9]_0 ;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0_17 U_fifo_srl
       (.Q(raddr_reg),
        .SR(SR),
        .ap_clk(ap_clk),
        .\could_multi_bursts.last_loop__10 (\could_multi_bursts.last_loop__10 ),
        .din(din),
        .\dout_reg[0]_0 (\dout_reg[0] ),
        .\dout_reg[0]_1 (full_n_reg_n_0),
        .\dout_reg[0]_2 (\dout_reg[0]_0 ),
        .\dout_reg[0]_3 (\dout_reg[0]_1 ),
        .fifo_rctl_ready(fifo_rctl_ready),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .mem_reg(burst_valid),
        .mem_reg_0(Q),
        .pop(pop),
        .\sect_len_buf_reg[5] (\sect_len_buf_reg[5] ),
        .\sect_len_buf_reg[8] (\sect_len_buf_reg[8] ),
        .\sect_len_buf_reg[9] (\sect_len_buf_reg[9] ),
        .\sect_len_buf_reg[9]_0 (\sect_len_buf_reg[9]_0 ));
  LUT5 #(
    .INIT(32'hAEEEEEEE)) 
    dout_vld_i_1__10
       (.I0(empty_n_reg_0),
        .I1(burst_valid),
        .I2(Q),
        .I3(dout_vld_reg_0),
        .I4(RREADY_Dummy),
        .O(dout_vld_i_1__10_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__10_n_0),
        .Q(burst_valid),
        .R(SR));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1__0
       (.I0(empty_n_i_2__10_n_0),
        .I1(pop),
        .I2(full_n_reg_n_0),
        .I3(p_13_in),
        .I4(empty_n_reg_0),
        .O(empty_n_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__10
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__10_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1__0_n_0),
        .Q(empty_n_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__10
       (.I0(ap_rst_n),
        .I1(full_n_i_2__10_n_0),
        .I2(p_13_in),
        .I3(full_n_reg_n_0),
        .I4(pop),
        .O(full_n_i_1__10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__10
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__10_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__10_n_0),
        .Q(full_n_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__10 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__6 
       (.I0(p_12_in),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__6 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(p_12_in),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__6 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(p_12_in),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'h7888777788888888)) 
    \mOutPtr[4]_i_1__3 
       (.I0(full_n_reg_n_0),
        .I1(p_13_in),
        .I2(push),
        .I3(Q),
        .I4(burst_valid),
        .I5(empty_n_reg_0),
        .O(\mOutPtr[4]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__2 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(p_12_in),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0808880888088808)) 
    \mOutPtr[4]_i_3__2 
       (.I0(p_13_in),
        .I1(full_n_reg_n_0),
        .I2(empty_n_reg_0),
        .I3(burst_valid),
        .I4(Q),
        .I5(push),
        .O(p_12_in));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__3_n_0 ),
        .D(\mOutPtr[0]_i_1__10_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__3_n_0 ),
        .D(\mOutPtr[1]_i_1__6_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__3_n_0 ),
        .D(\mOutPtr[2]_i_1__6_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__3_n_0 ),
        .D(\mOutPtr[3]_i_1__6_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__3_n_0 ),
        .D(\mOutPtr[4]_i_2__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1__4 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h6A95)) 
    \raddr[1]_i_1__1 
       (.I0(raddr_reg[0]),
        .I1(empty_n_reg_0),
        .I2(p_12_in),
        .I3(raddr_reg[1]),
        .O(\raddr[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h7F80F807)) 
    \raddr[2]_i_1__1 
       (.I0(p_12_in),
        .I1(empty_n_reg_0),
        .I2(raddr_reg[0]),
        .I3(raddr_reg[2]),
        .I4(raddr_reg[1]),
        .O(\raddr[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \raddr[3]_i_1__1 
       (.I0(raddr_reg[0]),
        .I1(raddr_reg[1]),
        .I2(raddr_reg[3]),
        .I3(raddr_reg[2]),
        .I4(p_8_in),
        .I5(raddr113_out),
        .O(\raddr[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2__1 
       (.I0(raddr_reg[1]),
        .I1(p_12_in),
        .I2(empty_n_reg_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[3]),
        .I5(raddr_reg[2]),
        .O(\raddr[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000A222A222A222)) 
    \raddr[3]_i_3__0 
       (.I0(empty_n_reg_0),
        .I1(burst_valid),
        .I2(Q),
        .I3(push),
        .I4(p_13_in),
        .I5(full_n_reg_n_0),
        .O(p_8_in));
  LUT6 #(
    .INIT(64'h7000000000000000)) 
    \raddr[3]_i_4__0 
       (.I0(push),
        .I1(Q),
        .I2(burst_valid),
        .I3(full_n_reg_n_0),
        .I4(p_13_in),
        .I5(empty_n_reg_0),
        .O(raddr113_out));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__1_n_0 ),
        .D(\raddr[0]_i_1__4_n_0 ),
        .Q(raddr_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__1_n_0 ),
        .D(\raddr[1]_i_1__1_n_0 ),
        .Q(raddr_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__1_n_0 ),
        .D(\raddr[2]_i_1__1_n_0 ),
        .Q(raddr_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__1_n_0 ),
        .D(\raddr[3]_i_2__1_n_0 ),
        .Q(raddr_reg[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_15
   (fifo_rctl_ready,
    p_13_in,
    E,
    next_rreq,
    p_14_in,
    \could_multi_bursts.ARVALID_Dummy_reg ,
    rreq_handling_reg,
    m_axi_gmem_ARREADY_0,
    ap_rst_n_0,
    ap_rst_n_1,
    m_axi_gmem_ARREADY_1,
    m_axi_gmem_ARREADY_2,
    m_axi_gmem_ARREADY_3,
    m_axi_gmem_ARREADY_4,
    m_axi_gmem_ARREADY_5,
    SR,
    ap_clk,
    ap_rst_n,
    CO,
    rreq_handling_reg_0,
    Q,
    \sect_len_buf_reg[9] ,
    \sect_len_buf_reg[9]_0 ,
    \could_multi_bursts.ARVALID_Dummy_reg_0 ,
    RBURST_READY_Dummy,
    \could_multi_bursts.ARVALID_Dummy_reg_1 ,
    m_axi_gmem_ARREADY,
    \could_multi_bursts.last_loop__10 ,
    \sect_addr_buf_reg[2] ,
    \could_multi_bursts.arlen_buf_reg[3] );
  output fifo_rctl_ready;
  output p_13_in;
  output [0:0]E;
  output next_rreq;
  output p_14_in;
  output \could_multi_bursts.ARVALID_Dummy_reg ;
  output rreq_handling_reg;
  output m_axi_gmem_ARREADY_0;
  output [0:0]ap_rst_n_0;
  output [0:0]ap_rst_n_1;
  output m_axi_gmem_ARREADY_1;
  output m_axi_gmem_ARREADY_2;
  output m_axi_gmem_ARREADY_3;
  output m_axi_gmem_ARREADY_4;
  output m_axi_gmem_ARREADY_5;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input [0:0]CO;
  input rreq_handling_reg_0;
  input [0:0]Q;
  input \sect_len_buf_reg[9] ;
  input \sect_len_buf_reg[9]_0 ;
  input \could_multi_bursts.ARVALID_Dummy_reg_0 ;
  input RBURST_READY_Dummy;
  input \could_multi_bursts.ARVALID_Dummy_reg_1 ;
  input m_axi_gmem_ARREADY;
  input \could_multi_bursts.last_loop__10 ;
  input [0:0]\sect_addr_buf_reg[2] ;
  input [3:0]\could_multi_bursts.arlen_buf_reg[3] ;

  wire [0:0]CO;
  wire [0:0]E;
  wire [0:0]Q;
  wire RBURST_READY_Dummy;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire [0:0]ap_rst_n_0;
  wire [0:0]ap_rst_n_1;
  wire \could_multi_bursts.ARVALID_Dummy_reg ;
  wire \could_multi_bursts.ARVALID_Dummy_reg_0 ;
  wire \could_multi_bursts.ARVALID_Dummy_reg_1 ;
  wire [3:0]\could_multi_bursts.arlen_buf_reg[3] ;
  wire \could_multi_bursts.last_loop__10 ;
  wire dout_vld_i_1__9_n_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__9_n_0;
  wire empty_n_reg_n_0;
  wire fifo_rctl_ready;
  wire full_n_i_1__9_n_0;
  wire full_n_i_2__9_n_0;
  wire \mOutPtr[0]_i_1__9_n_0 ;
  wire \mOutPtr[1]_i_1__10_n_0 ;
  wire \mOutPtr[2]_i_1__10_n_0 ;
  wire \mOutPtr[3]_i_1__10_n_0 ;
  wire \mOutPtr[4]_i_1__7_n_0 ;
  wire \mOutPtr[4]_i_2__6_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire m_axi_gmem_ARREADY;
  wire m_axi_gmem_ARREADY_0;
  wire m_axi_gmem_ARREADY_1;
  wire m_axi_gmem_ARREADY_2;
  wire m_axi_gmem_ARREADY_3;
  wire m_axi_gmem_ARREADY_4;
  wire m_axi_gmem_ARREADY_5;
  wire need_rlast;
  wire next_rreq;
  wire p_12_in;
  wire p_13_in;
  wire p_14_in;
  wire pop;
  wire rreq_handling_reg;
  wire rreq_handling_reg_0;
  wire [0:0]\sect_addr_buf_reg[2] ;
  wire \sect_len_buf_reg[9] ;
  wire \sect_len_buf_reg[9]_0 ;

  LUT4 #(
    .INIT(16'hC0EA)) 
    \could_multi_bursts.ARVALID_Dummy_i_1 
       (.I0(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I2(fifo_rctl_ready),
        .I3(m_axi_gmem_ARREADY),
        .O(\could_multi_bursts.ARVALID_Dummy_reg ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h8808)) 
    \could_multi_bursts.araddr_buf[63]_i_1 
       (.I0(fifo_rctl_ready),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I3(m_axi_gmem_ARREADY),
        .O(p_13_in));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000B000)) 
    \could_multi_bursts.arlen_buf[0]_i_1 
       (.I0(m_axi_gmem_ARREADY),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I3(fifo_rctl_ready),
        .I4(\could_multi_bursts.last_loop__10 ),
        .I5(\could_multi_bursts.arlen_buf_reg[3] [0]),
        .O(m_axi_gmem_ARREADY_1));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000B000)) 
    \could_multi_bursts.arlen_buf[1]_i_1 
       (.I0(m_axi_gmem_ARREADY),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I3(fifo_rctl_ready),
        .I4(\could_multi_bursts.last_loop__10 ),
        .I5(\could_multi_bursts.arlen_buf_reg[3] [1]),
        .O(m_axi_gmem_ARREADY_2));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000B000)) 
    \could_multi_bursts.arlen_buf[2]_i_1 
       (.I0(m_axi_gmem_ARREADY),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I3(fifo_rctl_ready),
        .I4(\could_multi_bursts.last_loop__10 ),
        .I5(\could_multi_bursts.arlen_buf_reg[3] [2]),
        .O(m_axi_gmem_ARREADY_3));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'hB000)) 
    \could_multi_bursts.arlen_buf[3]_i_1 
       (.I0(m_axi_gmem_ARREADY),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I3(fifo_rctl_ready),
        .O(m_axi_gmem_ARREADY_4));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000B000)) 
    \could_multi_bursts.arlen_buf[3]_i_2 
       (.I0(m_axi_gmem_ARREADY),
        .I1(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I3(fifo_rctl_ready),
        .I4(\could_multi_bursts.last_loop__10 ),
        .I5(\could_multi_bursts.arlen_buf_reg[3] [3]),
        .O(m_axi_gmem_ARREADY_5));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \could_multi_bursts.loop_cnt[5]_i_1__0 
       (.I0(p_14_in),
        .I1(ap_rst_n),
        .O(ap_rst_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF7500FF00)) 
    \could_multi_bursts.sect_handling_i_1 
       (.I0(\could_multi_bursts.last_loop__10 ),
        .I1(m_axi_gmem_ARREADY),
        .I2(\could_multi_bursts.ARVALID_Dummy_reg_1 ),
        .I3(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I4(fifo_rctl_ready),
        .I5(rreq_handling_reg_0),
        .O(m_axi_gmem_ARREADY_0));
  LUT3 #(
    .INIT(8'hAE)) 
    dout_vld_i_1__9
       (.I0(empty_n_reg_n_0),
        .I1(need_rlast),
        .I2(RBURST_READY_Dummy),
        .O(dout_vld_i_1__9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__9_n_0),
        .Q(need_rlast),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFBA00BA00BA00)) 
    empty_n_i_1
       (.I0(empty_n_i_2__9_n_0),
        .I1(RBURST_READY_Dummy),
        .I2(need_rlast),
        .I3(empty_n_reg_n_0),
        .I4(fifo_rctl_ready),
        .I5(p_13_in),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__9
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__9
       (.I0(ap_rst_n),
        .I1(full_n_i_2__9_n_0),
        .I2(p_13_in),
        .I3(fifo_rctl_ready),
        .I4(pop),
        .O(full_n_i_1__9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__9
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB0)) 
    full_n_i_3
       (.I0(RBURST_READY_Dummy),
        .I1(need_rlast),
        .I2(empty_n_reg_n_0),
        .O(pop));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__9_n_0),
        .Q(fifo_rctl_ready),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__9 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__10 
       (.I0(p_12_in),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__10 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(p_12_in),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__10 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(p_12_in),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__10_n_0 ));
  LUT5 #(
    .INIT(32'h78778888)) 
    \mOutPtr[4]_i_1__7 
       (.I0(fifo_rctl_ready),
        .I1(p_13_in),
        .I2(RBURST_READY_Dummy),
        .I3(need_rlast),
        .I4(empty_n_reg_n_0),
        .O(\mOutPtr[4]_i_1__7_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__6 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(p_12_in),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'h08088808)) 
    \mOutPtr[4]_i_3__6 
       (.I0(p_13_in),
        .I1(fifo_rctl_ready),
        .I2(empty_n_reg_n_0),
        .I3(need_rlast),
        .I4(RBURST_READY_Dummy),
        .O(p_12_in));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__7_n_0 ),
        .D(\mOutPtr[0]_i_1__9_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__7_n_0 ),
        .D(\mOutPtr[1]_i_1__10_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__7_n_0 ),
        .D(\mOutPtr[2]_i_1__10_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__7_n_0 ),
        .D(\mOutPtr[3]_i_1__10_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__7_n_0 ),
        .D(\mOutPtr[4]_i_2__6_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'hFF2A)) 
    rreq_handling_i_1
       (.I0(rreq_handling_reg_0),
        .I1(p_14_in),
        .I2(CO),
        .I3(Q),
        .O(rreq_handling_reg));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \sect_addr_buf[11]_i_1__0 
       (.I0(\sect_addr_buf_reg[2] ),
        .I1(p_14_in),
        .I2(ap_rst_n),
        .O(ap_rst_n_1));
  LUT2 #(
    .INIT(4'hE)) 
    \sect_cnt[51]_i_1__0 
       (.I0(next_rreq),
        .I1(p_14_in),
        .O(E));
  LUT5 #(
    .INIT(32'h80FF0000)) 
    \sect_len_buf[9]_i_1__0 
       (.I0(\sect_len_buf_reg[9] ),
        .I1(\sect_len_buf_reg[9]_0 ),
        .I2(p_13_in),
        .I3(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .I4(rreq_handling_reg_0),
        .O(p_14_in));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'h8F00)) 
    \start_addr[63]_i_1__0 
       (.I0(p_14_in),
        .I1(CO),
        .I2(rreq_handling_reg_0),
        .I3(Q),
        .O(next_rreq));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized2
   (dout_vld_reg_0,
    ursp_ready,
    pop,
    SR,
    ap_clk,
    ap_rst_n,
    push__0,
    dout_vld_reg_1,
    Q,
    p_12_in);
  output dout_vld_reg_0;
  output ursp_ready;
  output pop;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input push__0;
  input [0:0]dout_vld_reg_1;
  input [1:0]Q;
  input p_12_in;

  wire [1:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire dout_vld_i_1__2_n_0;
  wire dout_vld_reg_0;
  wire [0:0]dout_vld_reg_1;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__2_n_0;
  wire empty_n_reg_n_0;
  wire full_n_i_1__2_n_0;
  wire full_n_i_2__0_n_0;
  wire \mOutPtr[0]_i_1__2_n_0 ;
  wire \mOutPtr[1]_i_1__3_n_0 ;
  wire \mOutPtr[2]_i_1__3_n_0 ;
  wire \mOutPtr[3]_i_1__3_n_0 ;
  wire \mOutPtr[3]_i_2__0_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire p_12_in;
  wire pop;
  wire push__0;
  wire ursp_ready;

  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'hABAAFFAA)) 
    dout_vld_i_1__2
       (.I0(empty_n_reg_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(dout_vld_reg_0),
        .I4(dout_vld_reg_1),
        .O(dout_vld_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__2_n_0),
        .Q(dout_vld_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFBFF00FFFB00)) 
    empty_n_i_1
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(empty_n_i_2__2_n_0),
        .I3(pop),
        .I4(push__0),
        .I5(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    empty_n_i_2__2
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[2] ),
        .O(empty_n_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'hA8FF0000)) 
    empty_n_i_3
       (.I0(dout_vld_reg_1),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(dout_vld_reg_0),
        .I4(empty_n_reg_n_0),
        .O(pop));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFF55FFFFFDFDFF55)) 
    full_n_i_1__2
       (.I0(ap_rst_n),
        .I1(empty_n_i_2__2_n_0),
        .I2(full_n_i_2__0_n_0),
        .I3(ursp_ready),
        .I4(push__0),
        .I5(pop),
        .O(full_n_i_1__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h7)) 
    full_n_i_2__0
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .O(full_n_i_2__0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__2_n_0),
        .Q(ursp_ready),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__2 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__3 
       (.I0(p_12_in),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .O(\mOutPtr[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__3 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(p_12_in),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h666A5555AAAAAAAA)) 
    \mOutPtr[3]_i_1__3 
       (.I0(push__0),
        .I1(dout_vld_reg_1),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout_vld_reg_0),
        .I5(empty_n_reg_n_0),
        .O(\mOutPtr[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_2__0 
       (.I0(\mOutPtr_reg_n_0_[2] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .I3(p_12_in),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__3_n_0 ),
        .D(\mOutPtr[0]_i_1__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__3_n_0 ),
        .D(\mOutPtr[1]_i_1__3_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__3_n_0 ),
        .D(\mOutPtr[2]_i_1__3_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[3]_i_1__3_n_0 ),
        .D(\mOutPtr[3]_i_2__0_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized3
   (dout_vld_reg_0,
    full_n_reg_0,
    E,
    empty_n_reg_0,
    dout_vld_reg_1,
    dout,
    SR,
    ap_clk,
    ap_rst_n,
    Q,
    pop,
    mOutPtr18_out,
    dout_vld_reg_2,
    dout_vld_reg_3,
    p_5_in,
    ap_enable_reg_pp0_iter1_reg,
    ap_enable_reg_pp0_iter1_reg_0,
    mem_reg,
    din);
  output dout_vld_reg_0;
  output full_n_reg_0;
  output [0:0]E;
  output empty_n_reg_0;
  output dout_vld_reg_1;
  output [32:0]dout;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input [0:0]Q;
  input pop;
  input mOutPtr18_out;
  input dout_vld_reg_2;
  input [1:0]dout_vld_reg_3;
  input p_5_in;
  input ap_enable_reg_pp0_iter1_reg;
  input ap_enable_reg_pp0_iter1_reg_0;
  input mem_reg;
  input [33:0]din;

  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_enable_reg_pp0_iter1_reg;
  wire ap_enable_reg_pp0_iter1_reg_0;
  wire ap_rst_n;
  wire [33:0]din;
  wire [32:0]dout;
  wire dout_vld_i_1__4_n_0;
  wire dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire dout_vld_reg_2;
  wire [1:0]dout_vld_reg_3;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__4_n_0;
  wire empty_n_i_3__0_n_0;
  wire empty_n_reg_0;
  wire full_n_i_1__4_n_0;
  wire full_n_i_2__4_n_0;
  wire full_n_i_3__0_n_0;
  wire full_n_reg_0;
  wire mOutPtr18_out;
  wire \mOutPtr[0]_i_1__4_n_0 ;
  wire \mOutPtr[1]_i_1__5_n_0 ;
  wire \mOutPtr[2]_i_1__5_n_0 ;
  wire \mOutPtr[3]_i_1__5_n_0 ;
  wire \mOutPtr[4]_i_1__2_n_0 ;
  wire \mOutPtr[5]_i_1_n_0 ;
  wire \mOutPtr[5]_i_2_n_0 ;
  wire \mOutPtr[5]_i_3_n_0 ;
  wire \mOutPtr[6]_i_1_n_0 ;
  wire \mOutPtr[7]_i_1_n_0 ;
  wire \mOutPtr[8]_i_1_n_0 ;
  wire \mOutPtr[8]_i_2_n_0 ;
  wire \mOutPtr[8]_i_3_n_0 ;
  wire \mOutPtr[8]_i_5_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire \mOutPtr_reg_n_0_[5] ;
  wire \mOutPtr_reg_n_0_[6] ;
  wire \mOutPtr_reg_n_0_[7] ;
  wire \mOutPtr_reg_n_0_[8] ;
  wire mem_reg;
  wire p_5_in;
  wire pop;
  wire \raddr_reg_n_0_[0] ;
  wire \raddr_reg_n_0_[1] ;
  wire \raddr_reg_n_0_[2] ;
  wire \raddr_reg_n_0_[3] ;
  wire \raddr_reg_n_0_[4] ;
  wire \raddr_reg_n_0_[5] ;
  wire \raddr_reg_n_0_[6] ;
  wire \raddr_reg_n_0_[7] ;
  wire [7:0]rnext;
  wire \waddr[0]_i_1_n_0 ;
  wire \waddr[1]_i_1_n_0 ;
  wire \waddr[1]_i_2_n_0 ;
  wire \waddr[2]_i_1_n_0 ;
  wire \waddr[3]_i_1_n_0 ;
  wire \waddr[3]_i_2_n_0 ;
  wire \waddr[4]_i_1_n_0 ;
  wire \waddr[5]_i_1_n_0 ;
  wire \waddr[6]_i_1_n_0 ;
  wire \waddr[7]_i_1_n_0 ;
  wire \waddr[7]_i_2_n_0 ;
  wire \waddr_reg_n_0_[0] ;
  wire \waddr_reg_n_0_[1] ;
  wire \waddr_reg_n_0_[2] ;
  wire \waddr_reg_n_0_[3] ;
  wire \waddr_reg_n_0_[4] ;
  wire \waddr_reg_n_0_[5] ;
  wire \waddr_reg_n_0_[6] ;
  wire \waddr_reg_n_0_[7] ;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_mem__parameterized0 U_fifo_mem
       (.Q(Q),
        .SR(SR),
        .WEBWE(E),
        .ap_clk(ap_clk),
        .din(din),
        .dout(dout),
        .mem_reg_0(full_n_reg_0),
        .mem_reg_1(mem_reg),
        .mem_reg_2({\waddr_reg_n_0_[7] ,\waddr_reg_n_0_[6] ,\waddr_reg_n_0_[5] ,\waddr_reg_n_0_[4] ,\waddr_reg_n_0_[3] ,\waddr_reg_n_0_[2] ,\waddr_reg_n_0_[1] ,\waddr_reg_n_0_[0] }),
        .pop(pop),
        .\raddr_reg_reg[0]_0 (\raddr_reg_n_0_[0] ),
        .\raddr_reg_reg[1]_0 (\raddr_reg_n_0_[1] ),
        .\raddr_reg_reg[2]_0 (\raddr_reg_n_0_[2] ),
        .\raddr_reg_reg[3]_0 (\raddr_reg_n_0_[3] ),
        .\raddr_reg_reg[4]_0 (\raddr_reg_n_0_[4] ),
        .\raddr_reg_reg[5]_0 (\raddr_reg_n_0_[5] ),
        .\raddr_reg_reg[6]_0 (\raddr_reg_n_0_[6] ),
        .\raddr_reg_reg[7]_0 (\raddr_reg_n_0_[7] ),
        .rnext(rnext));
  LUT4 #(
    .INIT(16'h4F44)) 
    ap_enable_reg_pp0_iter1_i_2
       (.I0(dout_vld_reg_0),
        .I1(dout_vld_reg_2),
        .I2(ap_enable_reg_pp0_iter1_reg),
        .I3(ap_enable_reg_pp0_iter1_reg_0),
        .O(dout_vld_reg_1));
  LUT6 #(
    .INIT(64'hAEAEAEEEEEEEEEEE)) 
    dout_vld_i_1__4
       (.I0(empty_n_reg_0),
        .I1(dout_vld_reg_0),
        .I2(dout_vld_reg_2),
        .I3(dout_vld_reg_3[0]),
        .I4(dout_vld_reg_3[1]),
        .I5(p_5_in),
        .O(dout_vld_i_1__4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__4_n_0),
        .Q(dout_vld_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__4_n_0),
        .I1(pop),
        .I2(full_n_reg_0),
        .I3(Q),
        .I4(empty_n_reg_0),
        .O(empty_n_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__4
       (.I0(empty_n_i_3__0_n_0),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[7] ),
        .I4(\mOutPtr_reg_n_0_[2] ),
        .O(empty_n_i_2__4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    empty_n_i_3__0
       (.I0(\mOutPtr_reg_n_0_[5] ),
        .I1(\mOutPtr_reg_n_0_[3] ),
        .I2(\mOutPtr_reg_n_0_[4] ),
        .I3(\mOutPtr_reg_n_0_[8] ),
        .I4(\mOutPtr_reg_n_0_[6] ),
        .O(empty_n_i_3__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__4
       (.I0(ap_rst_n),
        .I1(full_n_i_2__4_n_0),
        .I2(Q),
        .I3(full_n_reg_0),
        .I4(pop),
        .O(full_n_i_1__4_n_0));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    full_n_i_2__4
       (.I0(full_n_i_3__0_n_0),
        .I1(\mOutPtr_reg_n_0_[5] ),
        .I2(\mOutPtr_reg_n_0_[3] ),
        .I3(\mOutPtr_reg_n_0_[8] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__4_n_0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    full_n_i_3__0
       (.I0(\mOutPtr_reg_n_0_[6] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[7] ),
        .I4(\mOutPtr_reg_n_0_[0] ),
        .O(full_n_i_3__0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__4_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__4 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h96999999)) 
    \mOutPtr[1]_i_1__5 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(pop),
        .I3(full_n_reg_0),
        .I4(Q),
        .O(\mOutPtr[1]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hE7EEEEEE18111111)) 
    \mOutPtr[2]_i_1__5 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(pop),
        .I3(full_n_reg_0),
        .I4(Q),
        .I5(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__5 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(mOutPtr18_out),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_1__2 
       (.I0(\mOutPtr_reg_n_0_[2] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(mOutPtr18_out),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8AAABAAA75554555)) 
    \mOutPtr[5]_i_1 
       (.I0(\mOutPtr[5]_i_2_n_0 ),
        .I1(pop),
        .I2(full_n_reg_0),
        .I3(Q),
        .I4(\mOutPtr[5]_i_3_n_0 ),
        .I5(\mOutPtr_reg_n_0_[5] ),
        .O(\mOutPtr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mOutPtr[5]_i_2 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \mOutPtr[5]_i_3 
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[2] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8AAABAAA75554555)) 
    \mOutPtr[6]_i_1 
       (.I0(\mOutPtr[8]_i_3_n_0 ),
        .I1(pop),
        .I2(full_n_reg_0),
        .I3(Q),
        .I4(\mOutPtr[8]_i_5_n_0 ),
        .I5(\mOutPtr_reg_n_0_[6] ),
        .O(\mOutPtr[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3EFEC101)) 
    \mOutPtr[7]_i_1 
       (.I0(\mOutPtr[8]_i_3_n_0 ),
        .I1(\mOutPtr_reg_n_0_[6] ),
        .I2(mOutPtr18_out),
        .I3(\mOutPtr[8]_i_5_n_0 ),
        .I4(\mOutPtr_reg_n_0_[7] ),
        .O(\mOutPtr[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \mOutPtr[8]_i_1 
       (.I0(full_n_reg_0),
        .I1(Q),
        .I2(pop),
        .O(\mOutPtr[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5FFEFFFEA0010001)) 
    \mOutPtr[8]_i_2 
       (.I0(\mOutPtr_reg_n_0_[7] ),
        .I1(\mOutPtr[8]_i_3_n_0 ),
        .I2(\mOutPtr_reg_n_0_[6] ),
        .I3(mOutPtr18_out),
        .I4(\mOutPtr[8]_i_5_n_0 ),
        .I5(\mOutPtr_reg_n_0_[8] ),
        .O(\mOutPtr[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mOutPtr[8]_i_3 
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[2] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .I5(\mOutPtr_reg_n_0_[5] ),
        .O(\mOutPtr[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \mOutPtr[8]_i_5 
       (.I0(\mOutPtr_reg_n_0_[5] ),
        .I1(\mOutPtr_reg_n_0_[3] ),
        .I2(\mOutPtr_reg_n_0_[1] ),
        .I3(\mOutPtr_reg_n_0_[0] ),
        .I4(\mOutPtr_reg_n_0_[2] ),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[0]_i_1__4_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[1]_i_1__5_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[2]_i_1__5_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[3]_i_1__5_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[4]_i_1__2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[5] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[5]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[6] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[6]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[7] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[7]_i_1_n_0 ),
        .Q(\mOutPtr_reg_n_0_[7] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[8] 
       (.C(ap_clk),
        .CE(\mOutPtr[8]_i_1_n_0 ),
        .D(\mOutPtr[8]_i_2_n_0 ),
        .Q(\mOutPtr_reg_n_0_[8] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[0]),
        .Q(\raddr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[1]),
        .Q(\raddr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[2]),
        .Q(\raddr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[3]),
        .Q(\raddr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[4] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[4]),
        .Q(\raddr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[5] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[5]),
        .Q(\raddr_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[6] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[6]),
        .Q(\raddr_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[7] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[7]),
        .Q(\raddr_reg_n_0_[7] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h2333333333333333)) 
    \waddr[0]_i_1 
       (.I0(\waddr[7]_i_2_n_0 ),
        .I1(\waddr_reg_n_0_[0] ),
        .I2(\waddr_reg_n_0_[5] ),
        .I3(\waddr_reg_n_0_[4] ),
        .I4(\waddr_reg_n_0_[7] ),
        .I5(\waddr_reg_n_0_[6] ),
        .O(\waddr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT5 #(
    .INIT(32'h00FFBF00)) 
    \waddr[1]_i_1 
       (.I0(\waddr[1]_i_2_n_0 ),
        .I1(\waddr_reg_n_0_[3] ),
        .I2(\waddr_reg_n_0_[2] ),
        .I3(\waddr_reg_n_0_[1] ),
        .I4(\waddr_reg_n_0_[0] ),
        .O(\waddr[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \waddr[1]_i_2 
       (.I0(\waddr_reg_n_0_[5] ),
        .I1(\waddr_reg_n_0_[4] ),
        .I2(\waddr_reg_n_0_[7] ),
        .I3(\waddr_reg_n_0_[6] ),
        .O(\waddr[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'hFFC011C0)) 
    \waddr[2]_i_1 
       (.I0(\waddr_reg_n_0_[3] ),
        .I1(\waddr_reg_n_0_[0] ),
        .I2(\waddr_reg_n_0_[1] ),
        .I3(\waddr_reg_n_0_[2] ),
        .I4(\waddr[3]_i_2_n_0 ),
        .O(\waddr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'hFF805580)) 
    \waddr[3]_i_1 
       (.I0(\waddr_reg_n_0_[2] ),
        .I1(\waddr_reg_n_0_[1] ),
        .I2(\waddr_reg_n_0_[0] ),
        .I3(\waddr_reg_n_0_[3] ),
        .I4(\waddr[3]_i_2_n_0 ),
        .O(\waddr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h15555555FFFFFFFF)) 
    \waddr[3]_i_2 
       (.I0(\waddr_reg_n_0_[0] ),
        .I1(\waddr_reg_n_0_[5] ),
        .I2(\waddr_reg_n_0_[4] ),
        .I3(\waddr_reg_n_0_[7] ),
        .I4(\waddr_reg_n_0_[6] ),
        .I5(\waddr_reg_n_0_[1] ),
        .O(\waddr[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF7F00FF0000)) 
    \waddr[4]_i_1 
       (.I0(\waddr_reg_n_0_[7] ),
        .I1(\waddr_reg_n_0_[6] ),
        .I2(\waddr_reg_n_0_[5] ),
        .I3(\waddr[7]_i_2_n_0 ),
        .I4(\waddr_reg_n_0_[0] ),
        .I5(\waddr_reg_n_0_[4] ),
        .O(\waddr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAABFFFFF55000000)) 
    \waddr[5]_i_1 
       (.I0(\waddr[7]_i_2_n_0 ),
        .I1(\waddr_reg_n_0_[7] ),
        .I2(\waddr_reg_n_0_[6] ),
        .I3(\waddr_reg_n_0_[0] ),
        .I4(\waddr_reg_n_0_[4] ),
        .I5(\waddr_reg_n_0_[5] ),
        .O(\waddr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF01CF0F0F0F0F0F0)) 
    \waddr[6]_i_1 
       (.I0(\waddr_reg_n_0_[7] ),
        .I1(\waddr_reg_n_0_[0] ),
        .I2(\waddr_reg_n_0_[6] ),
        .I3(\waddr[7]_i_2_n_0 ),
        .I4(\waddr_reg_n_0_[5] ),
        .I5(\waddr_reg_n_0_[4] ),
        .O(\waddr[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF7FF08000000)) 
    \waddr[7]_i_1 
       (.I0(\waddr_reg_n_0_[4] ),
        .I1(\waddr_reg_n_0_[5] ),
        .I2(\waddr[7]_i_2_n_0 ),
        .I3(\waddr_reg_n_0_[6] ),
        .I4(\waddr_reg_n_0_[0] ),
        .I5(\waddr_reg_n_0_[7] ),
        .O(\waddr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \waddr[7]_i_2 
       (.I0(\waddr_reg_n_0_[3] ),
        .I1(\waddr_reg_n_0_[2] ),
        .I2(\waddr_reg_n_0_[1] ),
        .O(\waddr[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[0] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[0]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[1] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[1]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[2] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[2]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[3] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[3]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[4] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[4]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[5] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[5]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[6] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[6]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \waddr_reg[7] 
       (.C(ap_clk),
        .CE(E),
        .D(\waddr[7]_i_1_n_0 ),
        .Q(\waddr_reg_n_0_[7] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized4
   (dout_vld_reg_0,
    fifo_burst_ready,
    \could_multi_bursts.next_loop ,
    pop,
    E,
    next_wreq,
    p_14_in,
    \sect_len_buf_reg[8] ,
    \sect_len_buf_reg[5] ,
    dout_vld_reg_1,
    wreq_handling_reg,
    WVALID_Dummy_reg,
    ap_rst_n_0,
    dout_vld_reg_2,
    ap_rst_n_1,
    ap_rst_n_2,
    ap_rst_n_3,
    in,
    \could_multi_bursts.sect_handling_reg ,
    SR,
    ap_clk,
    ap_rst_n,
    AWREADY_Dummy_0,
    \mOutPtr_reg[0]_0 ,
    \mOutPtr_reg[0]_1 ,
    fifo_resp_ready,
    Q,
    WVALID_Dummy,
    WLAST_Dummy_reg,
    WLAST_Dummy_reg_0,
    \raddr_reg_reg[3] ,
    CO,
    wreq_handling_reg_0,
    wreq_handling_reg_1,
    \could_multi_bursts.awlen_buf_reg[0] ,
    \could_multi_bursts.awlen_buf_reg[0]_0 ,
    WLAST_Dummy_reg_1,
    \sect_addr_buf_reg[2] ,
    sel);
  output dout_vld_reg_0;
  output fifo_burst_ready;
  output \could_multi_bursts.next_loop ;
  output pop;
  output [0:0]E;
  output next_wreq;
  output p_14_in;
  output \sect_len_buf_reg[8] ;
  output \sect_len_buf_reg[5] ;
  output dout_vld_reg_1;
  output wreq_handling_reg;
  output WVALID_Dummy_reg;
  output ap_rst_n_0;
  output dout_vld_reg_2;
  output [0:0]ap_rst_n_1;
  output [0:0]ap_rst_n_2;
  output [0:0]ap_rst_n_3;
  output [3:0]in;
  output \could_multi_bursts.sect_handling_reg ;
  input [0:0]SR;
  input ap_clk;
  input ap_rst_n;
  input AWREADY_Dummy_0;
  input \mOutPtr_reg[0]_0 ;
  input \mOutPtr_reg[0]_1 ;
  input fifo_resp_ready;
  input [7:0]Q;
  input WVALID_Dummy;
  input WLAST_Dummy_reg;
  input WLAST_Dummy_reg_0;
  input \raddr_reg_reg[3] ;
  input [0:0]CO;
  input wreq_handling_reg_0;
  input [0:0]wreq_handling_reg_1;
  input [9:0]\could_multi_bursts.awlen_buf_reg[0] ;
  input [5:0]\could_multi_bursts.awlen_buf_reg[0]_0 ;
  input WLAST_Dummy_reg_1;
  input [0:0]\sect_addr_buf_reg[2] ;
  input sel;

  wire AWREADY_Dummy_0;
  wire [0:0]CO;
  wire [0:0]E;
  wire [7:0]Q;
  wire [0:0]SR;
  wire U_fifo_srl_n_0;
  wire U_fifo_srl_n_10;
  wire U_fifo_srl_n_13;
  wire U_fifo_srl_n_2;
  wire U_fifo_srl_n_3;
  wire U_fifo_srl_n_4;
  wire U_fifo_srl_n_5;
  wire U_fifo_srl_n_6;
  wire U_fifo_srl_n_7;
  wire U_fifo_srl_n_8;
  wire U_fifo_srl_n_9;
  wire WLAST_Dummy_reg;
  wire WLAST_Dummy_reg_0;
  wire WLAST_Dummy_reg_1;
  wire WVALID_Dummy;
  wire WVALID_Dummy_reg;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire [0:0]ap_rst_n_1;
  wire [0:0]ap_rst_n_2;
  wire [0:0]ap_rst_n_3;
  wire [9:0]\could_multi_bursts.awlen_buf_reg[0] ;
  wire [5:0]\could_multi_bursts.awlen_buf_reg[0]_0 ;
  wire \could_multi_bursts.next_loop ;
  wire \could_multi_bursts.sect_handling_reg ;
  wire dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire dout_vld_reg_2;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__5_n_0;
  wire empty_n_reg_n_0;
  wire fifo_burst_ready;
  wire fifo_resp_ready;
  wire full_n_i_2__5_n_0;
  wire [3:0]in;
  wire \mOutPtr[0]_i_1__5_n_0 ;
  wire \mOutPtr_reg[0]_0 ;
  wire \mOutPtr_reg[0]_1 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire next_wreq;
  wire p_14_in;
  wire pop;
  wire pop_0;
  wire raddr17_in__2;
  wire \raddr[0]_i_1__0_n_0 ;
  wire [3:0]raddr_reg;
  wire \raddr_reg_reg[3] ;
  wire [0:0]\sect_addr_buf_reg[2] ;
  wire \sect_len_buf_reg[5] ;
  wire \sect_len_buf_reg[8] ;
  wire sel;
  wire wreq_handling_reg;
  wire wreq_handling_reg_0;
  wire [0:0]wreq_handling_reg_1;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized2 U_fifo_srl
       (.AWREADY_Dummy_0(AWREADY_Dummy_0),
        .D({U_fifo_srl_n_4,U_fifo_srl_n_5,U_fifo_srl_n_6}),
        .E(U_fifo_srl_n_2),
        .Q(raddr_reg),
        .SR(SR),
        .WLAST_Dummy_reg(WLAST_Dummy_reg),
        .WLAST_Dummy_reg_0(WLAST_Dummy_reg_0),
        .WLAST_Dummy_reg_1(WLAST_Dummy_reg_1),
        .WVALID_Dummy(WVALID_Dummy),
        .WVALID_Dummy_reg(WVALID_Dummy_reg),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(U_fifo_srl_n_0),
        .ap_rst_n_1(ap_rst_n_1),
        .\could_multi_bursts.awlen_buf_reg[0] (\could_multi_bursts.awlen_buf_reg[0] ),
        .\could_multi_bursts.awlen_buf_reg[0]_0 (\could_multi_bursts.awlen_buf_reg[0]_0 ),
        .\dout[3]_i_2_0 (Q),
        .dout_vld_reg(empty_n_reg_n_0),
        .dout_vld_reg_0(dout_vld_reg_0),
        .empty_n_reg(U_fifo_srl_n_3),
        .empty_n_reg_0(U_fifo_srl_n_13),
        .fifo_resp_ready(fifo_resp_ready),
        .full_n_reg(full_n_i_2__5_n_0),
        .in(in),
        .\mOutPtr_reg[0] (\mOutPtr_reg[0]_0 ),
        .\mOutPtr_reg[0]_0 (\mOutPtr_reg[0]_1 ),
        .\mOutPtr_reg[3] ({U_fifo_srl_n_7,U_fifo_srl_n_8,U_fifo_srl_n_9,U_fifo_srl_n_10}),
        .\mOutPtr_reg[4] ({\mOutPtr_reg_n_0_[4] ,\mOutPtr_reg_n_0_[3] ,\mOutPtr_reg_n_0_[2] ,\mOutPtr_reg_n_0_[1] ,\mOutPtr_reg_n_0_[0] }),
        .pop_0(pop_0),
        .raddr17_in__2(raddr17_in__2),
        .\raddr_reg[0] (\could_multi_bursts.next_loop ),
        .\raddr_reg[0]_0 (fifo_burst_ready),
        .\sect_len_buf_reg[5] (\sect_len_buf_reg[5] ),
        .\sect_len_buf_reg[8] (\sect_len_buf_reg[8] ),
        .sel(sel));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h88F8)) 
    WVALID_Dummy_i_1
       (.I0(WVALID_Dummy),
        .I1(dout_vld_reg_0),
        .I2(WLAST_Dummy_reg),
        .I3(WLAST_Dummy_reg_0),
        .O(dout_vld_reg_1));
  LUT5 #(
    .INIT(32'h80800080)) 
    \could_multi_bursts.awlen_buf[3]_i_1 
       (.I0(fifo_burst_ready),
        .I1(fifo_resp_ready),
        .I2(\mOutPtr_reg[0]_1 ),
        .I3(\mOutPtr_reg[0]_0 ),
        .I4(AWREADY_Dummy_0),
        .O(\could_multi_bursts.next_loop ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \could_multi_bursts.loop_cnt[5]_i_1 
       (.I0(p_14_in),
        .I1(ap_rst_n),
        .O(ap_rst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'hFFFF70F0)) 
    \could_multi_bursts.sect_handling_i_1__0 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\mOutPtr_reg[0]_1 ),
        .I3(\could_multi_bursts.next_loop ),
        .I4(wreq_handling_reg_0),
        .O(\could_multi_bursts.sect_handling_reg ));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_13),
        .Q(dout_vld_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__5_n_0),
        .I1(pop_0),
        .I2(fifo_burst_ready),
        .I3(\could_multi_bursts.next_loop ),
        .I4(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__5
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__5
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__5_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(U_fifo_srl_n_0),
        .Q(fifo_burst_ready),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__5 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_2),
        .D(\mOutPtr[0]_i_1__5_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_2),
        .D(U_fifo_srl_n_10),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_2),
        .D(U_fifo_srl_n_9),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_2),
        .D(U_fifo_srl_n_8),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_2),
        .D(U_fifo_srl_n_7),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(SR));
  LUT5 #(
    .INIT(32'h8808FFFF)) 
    mem_reg_i_2__0
       (.I0(WVALID_Dummy),
        .I1(dout_vld_reg_0),
        .I2(WLAST_Dummy_reg),
        .I3(WLAST_Dummy_reg_0),
        .I4(ap_rst_n),
        .O(dout_vld_reg_2));
  LUT5 #(
    .INIT(32'h15155515)) 
    mem_reg_i_3__0
       (.I0(ap_rst_n),
        .I1(WVALID_Dummy),
        .I2(dout_vld_reg_0),
        .I3(WLAST_Dummy_reg),
        .I4(WLAST_Dummy_reg_0),
        .O(ap_rst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1__0 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \raddr[3]_i_3__2 
       (.I0(raddr_reg[0]),
        .I1(raddr_reg[1]),
        .I2(raddr_reg[3]),
        .I3(raddr_reg[2]),
        .O(raddr17_in__2));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(\raddr[0]_i_1__0_n_0 ),
        .Q(raddr_reg[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_6),
        .Q(raddr_reg[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_5),
        .Q(raddr_reg[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(U_fifo_srl_n_3),
        .D(U_fifo_srl_n_4),
        .Q(raddr_reg[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'hA2FF0000)) 
    \raddr_reg[3]_i_2 
       (.I0(dout_vld_reg_0),
        .I1(WLAST_Dummy_reg),
        .I2(WLAST_Dummy_reg_0),
        .I3(WVALID_Dummy),
        .I4(\raddr_reg_reg[3] ),
        .O(pop));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \sect_addr_buf[11]_i_1 
       (.I0(\sect_addr_buf_reg[2] ),
        .I1(p_14_in),
        .I2(ap_rst_n),
        .O(ap_rst_n_3));
  LUT2 #(
    .INIT(4'hE)) 
    \sect_cnt[51]_i_1 
       (.I0(next_wreq),
        .I1(p_14_in),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h80FF0000)) 
    \sect_len_buf[9]_i_1 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\could_multi_bursts.next_loop ),
        .I3(\mOutPtr_reg[0]_1 ),
        .I4(wreq_handling_reg_0),
        .O(p_14_in));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h8F00)) 
    \start_addr[63]_i_1 
       (.I0(p_14_in),
        .I1(CO),
        .I2(wreq_handling_reg_0),
        .I3(wreq_handling_reg_1),
        .O(next_wreq));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'hFF2A)) 
    wreq_handling_i_1
       (.I0(wreq_handling_reg_0),
        .I1(p_14_in),
        .I2(CO),
        .I3(wreq_handling_reg_1),
        .O(wreq_handling_reg));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized5
   (req_fifo_valid,
    ap_rst_n_0,
    full_n_reg_0,
    sel,
    Q,
    ap_clk,
    ap_rst_n,
    \mOutPtr_reg[1]_0 ,
    \dout_reg[0] ,
    fifo_resp_ready,
    fifo_burst_ready,
    rs_req_ready,
    req_en__0,
    in);
  output req_fifo_valid;
  output ap_rst_n_0;
  output full_n_reg_0;
  output sel;
  output [65:0]Q;
  input ap_clk;
  input ap_rst_n;
  input \mOutPtr_reg[1]_0 ;
  input \dout_reg[0] ;
  input fifo_resp_ready;
  input fifo_burst_ready;
  input rs_req_ready;
  input req_en__0;
  input [65:0]in;

  wire [65:0]Q;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire \dout_reg[0] ;
  wire dout_vld_i_1__6_n_0;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__6_n_0;
  wire empty_n_reg_n_0;
  wire fifo_burst_ready;
  wire fifo_resp_ready;
  wire full_n_i_1__6_n_0;
  wire full_n_i_2__6_n_0;
  wire full_n_reg_0;
  wire [65:0]in;
  wire \mOutPtr[0]_i_1__6_n_0 ;
  wire \mOutPtr[1]_i_1__8_n_0 ;
  wire \mOutPtr[2]_i_1__8_n_0 ;
  wire \mOutPtr[3]_i_1__8_n_0 ;
  wire \mOutPtr[4]_i_1__5_n_0 ;
  wire \mOutPtr[4]_i_2__4_n_0 ;
  wire \mOutPtr_reg[1]_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire p_12_in;
  wire pop;
  wire push;
  wire raddr17_in__3;
  wire \raddr[0]_i_1__1_n_0 ;
  wire \raddr[1]_i_1__3_n_0 ;
  wire \raddr[2]_i_1__3_n_0 ;
  wire \raddr[3]_i_1__3_n_0 ;
  wire \raddr[3]_i_2__3_n_0 ;
  wire [3:0]raddr_reg;
  wire req_en__0;
  wire req_fifo_valid;
  wire rs_req_ready;
  wire sel;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized3 U_fifo_srl
       (.Q(raddr_reg),
        .SR(ap_rst_n_0),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\dout_reg[0] (full_n_reg_0),
        .\dout_reg[0]_0 (\mOutPtr_reg[1]_0 ),
        .\dout_reg[0]_1 (\dout_reg[0] ),
        .\dout_reg[2]_0 (req_fifo_valid),
        .\dout_reg[2]_1 (empty_n_reg_n_0),
        .\dout_reg[67]_0 (Q),
        .fifo_burst_ready(fifo_burst_ready),
        .fifo_resp_ready(fifo_resp_ready),
        .in(in),
        .pop(pop),
        .push(push),
        .req_en__0(req_en__0),
        .rs_req_ready(rs_req_ready),
        .sel(sel));
  LUT4 #(
    .INIT(16'hAEEE)) 
    dout_vld_i_1__6
       (.I0(empty_n_reg_n_0),
        .I1(req_fifo_valid),
        .I2(rs_req_ready),
        .I3(req_en__0),
        .O(dout_vld_i_1__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__6_n_0),
        .Q(req_fifo_valid),
        .R(ap_rst_n_0));
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__6_n_0),
        .I1(pop),
        .I2(full_n_reg_0),
        .I3(\mOutPtr_reg[1]_0 ),
        .I4(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__6
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(ap_rst_n_0));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__6
       (.I0(ap_rst_n),
        .I1(full_n_i_2__6_n_0),
        .I2(\mOutPtr_reg[1]_0 ),
        .I3(full_n_reg_0),
        .I4(pop),
        .O(full_n_i_1__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__6
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__6_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__6_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__6 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT5 #(
    .INIT(32'hBF4040BF)) 
    \mOutPtr[1]_i_1__8 
       (.I0(pop),
        .I1(full_n_reg_0),
        .I2(\mOutPtr_reg[1]_0 ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .I4(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__8_n_0 ));
  LUT6 #(
    .INIT(64'hE7EEEEEE18111111)) 
    \mOutPtr[2]_i_1__8 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(pop),
        .I3(full_n_reg_0),
        .I4(\mOutPtr_reg[1]_0 ),
        .I5(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__8_n_0 ));
  LUT6 #(
    .INIT(64'hFE7FFEFE01800101)) 
    \mOutPtr[3]_i_1__8 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(pop),
        .I4(push),
        .I5(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__8_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \mOutPtr[4]_i_1__5 
       (.I0(full_n_reg_0),
        .I1(\mOutPtr_reg[1]_0 ),
        .I2(pop),
        .O(\mOutPtr[4]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__4 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(p_12_in),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'h0808880888088808)) 
    \mOutPtr[4]_i_3__4 
       (.I0(\mOutPtr_reg[1]_0 ),
        .I1(full_n_reg_0),
        .I2(empty_n_reg_n_0),
        .I3(req_fifo_valid),
        .I4(rs_req_ready),
        .I5(req_en__0),
        .O(p_12_in));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__5_n_0 ),
        .D(\mOutPtr[0]_i_1__6_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__5_n_0 ),
        .D(\mOutPtr[1]_i_1__8_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__5_n_0 ),
        .D(\mOutPtr[2]_i_1__8_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__5_n_0 ),
        .D(\mOutPtr[3]_i_1__8_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__5_n_0 ),
        .D(\mOutPtr[4]_i_2__4_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(ap_rst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1__1 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA6AAA55559555)) 
    \raddr[1]_i_1__3 
       (.I0(raddr_reg[0]),
        .I1(empty_n_reg_n_0),
        .I2(\mOutPtr_reg[1]_0 ),
        .I3(full_n_reg_0),
        .I4(pop),
        .I5(raddr_reg[1]),
        .O(\raddr[1]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBFFF4000FF4000BF)) 
    \raddr[2]_i_1__3 
       (.I0(pop),
        .I1(push),
        .I2(empty_n_reg_n_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[2]),
        .I5(raddr_reg[1]),
        .O(\raddr[2]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h0AAAC000)) 
    \raddr[3]_i_1__3 
       (.I0(raddr17_in__3),
        .I1(empty_n_reg_n_0),
        .I2(\mOutPtr_reg[1]_0 ),
        .I3(full_n_reg_0),
        .I4(pop),
        .O(\raddr[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2__3 
       (.I0(raddr_reg[1]),
        .I1(p_12_in),
        .I2(empty_n_reg_n_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[3]),
        .I5(raddr_reg[2]),
        .O(\raddr[3]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \raddr[3]_i_3__4 
       (.I0(raddr_reg[0]),
        .I1(raddr_reg[1]),
        .I2(raddr_reg[3]),
        .I3(raddr_reg[2]),
        .O(raddr17_in__3));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__3_n_0 ),
        .D(\raddr[0]_i_1__1_n_0 ),
        .Q(raddr_reg[0]),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__3_n_0 ),
        .D(\raddr[1]_i_1__3_n_0 ),
        .Q(raddr_reg[1]),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__3_n_0 ),
        .D(\raddr[2]_i_1__3_n_0 ),
        .Q(raddr_reg[2]),
        .R(ap_rst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__3_n_0 ),
        .D(\raddr[3]_i_2__3_n_0 ),
        .Q(raddr_reg[3]),
        .R(ap_rst_n_0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_fifo" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized6
   (full_n_reg_0,
    E,
    D,
    req_en__0,
    \dout_reg[36] ,
    m_axi_gmem_WVALID,
    WVALID_Dummy_reg,
    empty_n_reg_0,
    empty_n_reg_1,
    dout_vld_reg_0,
    dout_vld_reg_1,
    \dout_reg[36]_0 ,
    ap_clk,
    ap_rst_n,
    \last_cnt_reg[1] ,
    dout_vld_reg_2,
    WVALID_Dummy,
    Q,
    m_axi_gmem_WREADY,
    flying_req_reg,
    flying_req_reg_0,
    in,
    dout_vld_reg_3,
    req_fifo_valid,
    rs_req_ready);
  output full_n_reg_0;
  output [0:0]E;
  output [3:0]D;
  output req_en__0;
  output [36:0]\dout_reg[36] ;
  output m_axi_gmem_WVALID;
  output [0:0]WVALID_Dummy_reg;
  output empty_n_reg_0;
  output empty_n_reg_1;
  output [0:0]dout_vld_reg_0;
  output dout_vld_reg_1;
  input \dout_reg[36]_0 ;
  input ap_clk;
  input ap_rst_n;
  input \last_cnt_reg[1] ;
  input dout_vld_reg_2;
  input WVALID_Dummy;
  input [4:0]Q;
  input m_axi_gmem_WREADY;
  input flying_req_reg;
  input flying_req_reg_0;
  input [36:0]in;
  input dout_vld_reg_3;
  input req_fifo_valid;
  input rs_req_ready;

  wire [3:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire WVALID_Dummy;
  wire [0:0]WVALID_Dummy_reg;
  wire ap_clk;
  wire ap_rst_n;
  wire data_en__3;
  wire [36:0]\dout_reg[36] ;
  wire \dout_reg[36]_0 ;
  wire dout_vld_i_1__7_n_0;
  wire [0:0]dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire dout_vld_reg_2;
  wire dout_vld_reg_3;
  wire empty_n_i_1_n_0;
  wire empty_n_i_2__7_n_0;
  wire empty_n_reg_0;
  wire empty_n_reg_1;
  wire empty_n_reg_n_0;
  wire fifo_valid;
  wire flying_req_reg;
  wire flying_req_reg_0;
  wire full_n_i_1__7_n_0;
  wire full_n_i_2__7_n_0;
  wire full_n_reg_0;
  wire [36:0]in;
  wire \last_cnt_reg[1] ;
  wire \mOutPtr[0]_i_1__7_n_0 ;
  wire \mOutPtr[1]_i_1__9_n_0 ;
  wire \mOutPtr[2]_i_1__9_n_0 ;
  wire \mOutPtr[3]_i_1__9_n_0 ;
  wire \mOutPtr[4]_i_1__6_n_0 ;
  wire \mOutPtr[4]_i_2__5_n_0 ;
  wire \mOutPtr_reg_n_0_[0] ;
  wire \mOutPtr_reg_n_0_[1] ;
  wire \mOutPtr_reg_n_0_[2] ;
  wire \mOutPtr_reg_n_0_[3] ;
  wire \mOutPtr_reg_n_0_[4] ;
  wire m_axi_gmem_WREADY;
  wire m_axi_gmem_WVALID;
  wire p_12_in;
  wire p_8_in_0;
  wire pop;
  wire push;
  wire raddr113_out;
  wire \raddr[0]_i_1__2_n_0 ;
  wire \raddr[1]_i_1__4_n_0 ;
  wire \raddr[2]_i_1__4_n_0 ;
  wire \raddr[3]_i_1__4_n_0 ;
  wire \raddr[3]_i_2__4_n_0 ;
  wire [3:0]raddr_reg;
  wire req_en__0;
  wire req_fifo_valid;
  wire rs_req_ready;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized4 U_fifo_srl
       (.D(D),
        .Q(Q),
        .WVALID_Dummy_reg(WVALID_Dummy_reg),
        .ap_clk(ap_clk),
        .data_en__3(data_en__3),
        .\dout_reg[0]_0 (empty_n_reg_n_0),
        .\dout_reg[36]_0 (\dout_reg[36] ),
        .\dout_reg[36]_1 (raddr_reg),
        .\dout_reg[36]_2 (\dout_reg[36]_0 ),
        .dout_vld_reg(dout_vld_reg_0),
        .dout_vld_reg_0(dout_vld_reg_1),
        .fifo_valid(fifo_valid),
        .flying_req_reg(flying_req_reg),
        .flying_req_reg_0(flying_req_reg_0),
        .in(in),
        .\last_cnt_reg[1] (\last_cnt_reg[1] ),
        .\last_cnt_reg[1]_0 (full_n_reg_0),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .pop(pop),
        .push(push),
        .req_en__0(req_en__0),
        .req_fifo_valid(req_fifo_valid),
        .rs_req_ready(rs_req_ready));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT5 #(
    .INIT(32'hAEAAEEEE)) 
    dout_vld_i_1__0
       (.I0(dout_vld_reg_3),
        .I1(WVALID_Dummy),
        .I2(full_n_reg_0),
        .I3(\last_cnt_reg[1] ),
        .I4(dout_vld_reg_2),
        .O(empty_n_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT5 #(
    .INIT(32'hAEEEEEEE)) 
    dout_vld_i_1__7
       (.I0(empty_n_reg_n_0),
        .I1(fifo_valid),
        .I2(data_en__3),
        .I3(flying_req_reg_0),
        .I4(m_axi_gmem_WREADY),
        .O(dout_vld_i_1__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dout_vld_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(dout_vld_i_1__7_n_0),
        .Q(fifo_valid),
        .R(\dout_reg[36]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT5 #(
    .INIT(32'hFBBB3888)) 
    empty_n_i_1
       (.I0(empty_n_i_2__7_n_0),
        .I1(pop),
        .I2(full_n_reg_0),
        .I3(\last_cnt_reg[1] ),
        .I4(empty_n_reg_n_0),
        .O(empty_n_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    empty_n_i_2__7
       (.I0(\mOutPtr_reg_n_0_[4] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(\mOutPtr_reg_n_0_[3] ),
        .O(empty_n_i_2__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    empty_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(empty_n_i_1_n_0),
        .Q(empty_n_reg_n_0),
        .R(\dout_reg[36]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__7
       (.I0(ap_rst_n),
        .I1(full_n_i_2__7_n_0),
        .I2(\last_cnt_reg[1] ),
        .I3(full_n_reg_0),
        .I4(pop),
        .O(full_n_i_1__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    full_n_i_2__7
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(\mOutPtr_reg_n_0_[3] ),
        .I4(\mOutPtr_reg_n_0_[4] ),
        .O(full_n_i_2__7_n_0));
  FDRE #(
    .INIT(1'b1)) 
    full_n_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(full_n_i_1__7_n_0),
        .Q(full_n_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'hB000)) 
    \len_cnt[7]_i_2 
       (.I0(full_n_reg_0),
        .I1(\last_cnt_reg[1] ),
        .I2(dout_vld_reg_2),
        .I3(WVALID_Dummy),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    \mOutPtr[0]_i_1__7 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[0]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'hBF4040BF)) 
    \mOutPtr[1]_i_1__9 
       (.I0(pop),
        .I1(full_n_reg_0),
        .I2(\last_cnt_reg[1] ),
        .I3(\mOutPtr_reg_n_0_[1] ),
        .I4(\mOutPtr_reg_n_0_[0] ),
        .O(\mOutPtr[1]_i_1__9_n_0 ));
  LUT6 #(
    .INIT(64'hE7EEEEEE18111111)) 
    \mOutPtr[2]_i_1__9 
       (.I0(\mOutPtr_reg_n_0_[0] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(pop),
        .I3(full_n_reg_0),
        .I4(\last_cnt_reg[1] ),
        .I5(\mOutPtr_reg_n_0_[2] ),
        .O(\mOutPtr[2]_i_1__9_n_0 ));
  LUT6 #(
    .INIT(64'hFE7FFEFE01800101)) 
    \mOutPtr[3]_i_1__9 
       (.I0(\mOutPtr_reg_n_0_[1] ),
        .I1(\mOutPtr_reg_n_0_[0] ),
        .I2(\mOutPtr_reg_n_0_[2] ),
        .I3(pop),
        .I4(push),
        .I5(\mOutPtr_reg_n_0_[3] ),
        .O(\mOutPtr[3]_i_1__9_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \mOutPtr[4]_i_1__6 
       (.I0(full_n_reg_0),
        .I1(\last_cnt_reg[1] ),
        .I2(pop),
        .O(\mOutPtr[4]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__5 
       (.I0(\mOutPtr_reg_n_0_[3] ),
        .I1(\mOutPtr_reg_n_0_[1] ),
        .I2(\mOutPtr_reg_n_0_[0] ),
        .I3(\mOutPtr_reg_n_0_[2] ),
        .I4(p_12_in),
        .I5(\mOutPtr_reg_n_0_[4] ),
        .O(\mOutPtr[4]_i_2__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mOutPtr[4]_i_3__5 
       (.I0(\last_cnt_reg[1] ),
        .I1(full_n_reg_0),
        .I2(pop),
        .O(p_12_in));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[0] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__6_n_0 ),
        .D(\mOutPtr[0]_i_1__7_n_0 ),
        .Q(\mOutPtr_reg_n_0_[0] ),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[1] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__6_n_0 ),
        .D(\mOutPtr[1]_i_1__9_n_0 ),
        .Q(\mOutPtr_reg_n_0_[1] ),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[2] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__6_n_0 ),
        .D(\mOutPtr[2]_i_1__9_n_0 ),
        .Q(\mOutPtr_reg_n_0_[2] ),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[3] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__6_n_0 ),
        .D(\mOutPtr[3]_i_1__9_n_0 ),
        .Q(\mOutPtr_reg_n_0_[3] ),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mOutPtr_reg[4] 
       (.C(ap_clk),
        .CE(\mOutPtr[4]_i_1__6_n_0 ),
        .D(\mOutPtr[4]_i_2__5_n_0 ),
        .Q(\mOutPtr_reg_n_0_[4] ),
        .R(\dout_reg[36]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h80)) 
    m_axi_gmem_WVALID_INST_0
       (.I0(flying_req_reg_0),
        .I1(fifo_valid),
        .I2(data_en__3),
        .O(m_axi_gmem_WVALID));
  LUT6 #(
    .INIT(64'hA2AA2222FFFFFFFF)) 
    mem_reg_i_1
       (.I0(dout_vld_reg_3),
        .I1(WVALID_Dummy),
        .I2(full_n_reg_0),
        .I3(\last_cnt_reg[1] ),
        .I4(dout_vld_reg_2),
        .I5(ap_rst_n),
        .O(empty_n_reg_1));
  LUT1 #(
    .INIT(2'h1)) 
    \raddr[0]_i_1__2 
       (.I0(raddr_reg[0]),
        .O(\raddr[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA6AAA55559555)) 
    \raddr[1]_i_1__4 
       (.I0(raddr_reg[0]),
        .I1(empty_n_reg_n_0),
        .I2(\last_cnt_reg[1] ),
        .I3(full_n_reg_0),
        .I4(pop),
        .I5(raddr_reg[1]),
        .O(\raddr[1]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBFFF4000FF4000BF)) 
    \raddr[2]_i_1__4 
       (.I0(pop),
        .I1(push),
        .I2(empty_n_reg_n_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[2]),
        .I5(raddr_reg[1]),
        .O(\raddr[2]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \raddr[3]_i_1__4 
       (.I0(raddr_reg[0]),
        .I1(raddr_reg[1]),
        .I2(raddr_reg[3]),
        .I3(raddr_reg[2]),
        .I4(p_8_in_0),
        .I5(raddr113_out),
        .O(\raddr[3]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2__4 
       (.I0(raddr_reg[1]),
        .I1(p_12_in),
        .I2(empty_n_reg_n_0),
        .I3(raddr_reg[0]),
        .I4(raddr_reg[3]),
        .I5(raddr_reg[2]),
        .O(\raddr[3]_i_2__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \raddr[3]_i_3__3 
       (.I0(pop),
        .I1(\last_cnt_reg[1] ),
        .I2(full_n_reg_0),
        .O(p_8_in_0));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \raddr[3]_i_4__2 
       (.I0(pop),
        .I1(full_n_reg_0),
        .I2(\last_cnt_reg[1] ),
        .I3(empty_n_reg_n_0),
        .O(raddr113_out));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[0] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__4_n_0 ),
        .D(\raddr[0]_i_1__2_n_0 ),
        .Q(raddr_reg[0]),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[1] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__4_n_0 ),
        .D(\raddr[1]_i_1__4_n_0 ),
        .Q(raddr_reg[1]),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[2] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__4_n_0 ),
        .D(\raddr[2]_i_1__4_n_0 ),
        .Q(raddr_reg[2]),
        .R(\dout_reg[36]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \raddr_reg[3] 
       (.C(ap_clk),
        .CE(\raddr[3]_i_1__4_n_0 ),
        .D(\raddr[3]_i_2__4_n_0 ),
        .Q(raddr_reg[3]),
        .R(\dout_reg[36]_0 ));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_load" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_load
   (full_n_reg,
    dout_vld_reg,
    RREADY_Dummy,
    ARVALID_Dummy,
    RBURST_READY_Dummy,
    push,
    E,
    empty_n_reg,
    full_n_reg_0,
    dout_vld_reg_0,
    D,
    dout,
    SR,
    ap_clk,
    ready_for_outstanding,
    ap_rst_n,
    Q,
    pop,
    ARREADY_Dummy,
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg,
    \dout_reg[94] ,
    dout_vld_reg_1,
    mOutPtr18_out,
    dout_vld_reg_2,
    p_5_in,
    ap_enable_reg_pp0_iter1_reg,
    ap_enable_reg_pp0_iter1_reg_0,
    \dout_reg[94]_0 ,
    mem_reg,
    din);
  output full_n_reg;
  output dout_vld_reg;
  output RREADY_Dummy;
  output ARVALID_Dummy;
  output RBURST_READY_Dummy;
  output push;
  output [0:0]E;
  output empty_n_reg;
  output full_n_reg_0;
  output dout_vld_reg_0;
  output [91:0]D;
  output [32:0]dout;
  input [0:0]SR;
  input ap_clk;
  input ready_for_outstanding;
  input ap_rst_n;
  input [0:0]Q;
  input pop;
  input ARREADY_Dummy;
  input grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  input [0:0]\dout_reg[94] ;
  input [1:0]dout_vld_reg_1;
  input mOutPtr18_out;
  input dout_vld_reg_2;
  input p_5_in;
  input ap_enable_reg_pp0_iter1_reg;
  input ap_enable_reg_pp0_iter1_reg_0;
  input [92:0]\dout_reg[94]_0 ;
  input mem_reg;
  input [33:0]din;

  wire ARREADY_Dummy;
  wire ARVALID_Dummy;
  wire [91:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire RBURST_READY_Dummy;
  wire RREADY_Dummy;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_enable_reg_pp0_iter1_reg;
  wire ap_enable_reg_pp0_iter1_reg_0;
  wire ap_rst_n;
  wire [33:0]din;
  wire [32:0]dout;
  wire [0:0]\dout_reg[94] ;
  wire [92:0]\dout_reg[94]_0 ;
  wire dout_vld_reg;
  wire dout_vld_reg_0;
  wire [1:0]dout_vld_reg_1;
  wire dout_vld_reg_2;
  wire empty_n_reg;
  wire fifo_rreq_n_100;
  wire fifo_rreq_n_101;
  wire fifo_rreq_n_102;
  wire fifo_rreq_n_103;
  wire fifo_rreq_n_104;
  wire fifo_rreq_n_105;
  wire fifo_rreq_n_106;
  wire fifo_rreq_n_107;
  wire fifo_rreq_n_108;
  wire fifo_rreq_n_109;
  wire fifo_rreq_n_110;
  wire fifo_rreq_n_111;
  wire fifo_rreq_n_112;
  wire fifo_rreq_n_113;
  wire fifo_rreq_n_114;
  wire fifo_rreq_n_115;
  wire fifo_rreq_n_116;
  wire fifo_rreq_n_117;
  wire fifo_rreq_n_118;
  wire fifo_rreq_n_119;
  wire fifo_rreq_n_120;
  wire fifo_rreq_n_121;
  wire fifo_rreq_n_122;
  wire fifo_rreq_n_123;
  wire fifo_rreq_n_31;
  wire fifo_rreq_n_32;
  wire fifo_rreq_n_33;
  wire fifo_rreq_n_34;
  wire fifo_rreq_n_35;
  wire fifo_rreq_n_36;
  wire fifo_rreq_n_37;
  wire fifo_rreq_n_38;
  wire fifo_rreq_n_39;
  wire fifo_rreq_n_40;
  wire fifo_rreq_n_41;
  wire fifo_rreq_n_42;
  wire fifo_rreq_n_43;
  wire fifo_rreq_n_44;
  wire fifo_rreq_n_45;
  wire fifo_rreq_n_46;
  wire fifo_rreq_n_47;
  wire fifo_rreq_n_48;
  wire fifo_rreq_n_49;
  wire fifo_rreq_n_50;
  wire fifo_rreq_n_51;
  wire fifo_rreq_n_52;
  wire fifo_rreq_n_53;
  wire fifo_rreq_n_54;
  wire fifo_rreq_n_55;
  wire fifo_rreq_n_56;
  wire fifo_rreq_n_57;
  wire fifo_rreq_n_58;
  wire fifo_rreq_n_59;
  wire fifo_rreq_n_60;
  wire fifo_rreq_n_61;
  wire fifo_rreq_n_62;
  wire fifo_rreq_n_63;
  wire fifo_rreq_n_64;
  wire fifo_rreq_n_65;
  wire fifo_rreq_n_66;
  wire fifo_rreq_n_67;
  wire fifo_rreq_n_68;
  wire fifo_rreq_n_69;
  wire fifo_rreq_n_70;
  wire fifo_rreq_n_71;
  wire fifo_rreq_n_72;
  wire fifo_rreq_n_73;
  wire fifo_rreq_n_74;
  wire fifo_rreq_n_75;
  wire fifo_rreq_n_76;
  wire fifo_rreq_n_77;
  wire fifo_rreq_n_78;
  wire fifo_rreq_n_79;
  wire fifo_rreq_n_80;
  wire fifo_rreq_n_81;
  wire fifo_rreq_n_82;
  wire fifo_rreq_n_83;
  wire fifo_rreq_n_84;
  wire fifo_rreq_n_85;
  wire fifo_rreq_n_86;
  wire fifo_rreq_n_87;
  wire fifo_rreq_n_88;
  wire fifo_rreq_n_89;
  wire fifo_rreq_n_90;
  wire fifo_rreq_n_91;
  wire fifo_rreq_n_92;
  wire fifo_rreq_n_93;
  wire fifo_rreq_n_94;
  wire fifo_rreq_n_95;
  wire fifo_rreq_n_96;
  wire fifo_rreq_n_97;
  wire fifo_rreq_n_98;
  wire fifo_rreq_n_99;
  wire full_n_reg;
  wire full_n_reg_0;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire mOutPtr18_out;
  wire mem_reg;
  wire next_rreq;
  wire p_5_in;
  wire pop;
  wire push;
  wire ready_for_outstanding;
  wire [28:0]rreq_len;
  wire [31:2]tmp_len0;
  wire tmp_len0_carry__0_n_0;
  wire tmp_len0_carry__0_n_1;
  wire tmp_len0_carry__0_n_2;
  wire tmp_len0_carry__0_n_3;
  wire tmp_len0_carry__1_n_0;
  wire tmp_len0_carry__1_n_1;
  wire tmp_len0_carry__1_n_2;
  wire tmp_len0_carry__1_n_3;
  wire tmp_len0_carry__2_n_0;
  wire tmp_len0_carry__2_n_1;
  wire tmp_len0_carry__2_n_2;
  wire tmp_len0_carry__2_n_3;
  wire tmp_len0_carry__3_n_0;
  wire tmp_len0_carry__3_n_1;
  wire tmp_len0_carry__3_n_2;
  wire tmp_len0_carry__3_n_3;
  wire tmp_len0_carry__4_n_0;
  wire tmp_len0_carry__4_n_1;
  wire tmp_len0_carry__4_n_2;
  wire tmp_len0_carry__4_n_3;
  wire tmp_len0_carry__5_n_0;
  wire tmp_len0_carry__5_n_1;
  wire tmp_len0_carry__5_n_2;
  wire tmp_len0_carry__5_n_3;
  wire tmp_len0_carry__6_n_2;
  wire tmp_len0_carry__6_n_3;
  wire tmp_len0_carry_n_0;
  wire tmp_len0_carry_n_1;
  wire tmp_len0_carry_n_2;
  wire tmp_len0_carry_n_3;
  wire [0:0]NLW_tmp_len0_carry_O_UNCONNECTED;
  wire [3:2]NLW_tmp_len0_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tmp_len0_carry__6_O_UNCONNECTED;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized3 buff_rdata
       (.E(push),
        .Q(Q),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_enable_reg_pp0_iter1_reg(ap_enable_reg_pp0_iter1_reg),
        .ap_enable_reg_pp0_iter1_reg_0(ap_enable_reg_pp0_iter1_reg_0),
        .ap_rst_n(ap_rst_n),
        .din(din),
        .dout(dout),
        .dout_vld_reg_0(dout_vld_reg),
        .dout_vld_reg_1(dout_vld_reg_0),
        .dout_vld_reg_2(dout_vld_reg_2),
        .dout_vld_reg_3(dout_vld_reg_1),
        .empty_n_reg_0(empty_n_reg),
        .full_n_reg_0(RREADY_Dummy),
        .mOutPtr18_out(mOutPtr18_out),
        .mem_reg(mem_reg),
        .p_5_in(p_5_in),
        .pop(pop));
  LUT2 #(
    .INIT(4'h8)) 
    \data_p2[95]_i_1__0 
       (.I0(ARVALID_Dummy),
        .I1(ARREADY_Dummy),
        .O(E));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo_10 fifo_rreq
       (.ARREADY_Dummy(ARREADY_Dummy),
        .E(next_rreq),
        .Q({rreq_len,fifo_rreq_n_31,fifo_rreq_n_32,fifo_rreq_n_33,fifo_rreq_n_34,fifo_rreq_n_35,fifo_rreq_n_36,fifo_rreq_n_37,fifo_rreq_n_38,fifo_rreq_n_39,fifo_rreq_n_40,fifo_rreq_n_41,fifo_rreq_n_42,fifo_rreq_n_43,fifo_rreq_n_44,fifo_rreq_n_45,fifo_rreq_n_46,fifo_rreq_n_47,fifo_rreq_n_48,fifo_rreq_n_49,fifo_rreq_n_50,fifo_rreq_n_51,fifo_rreq_n_52,fifo_rreq_n_53,fifo_rreq_n_54,fifo_rreq_n_55,fifo_rreq_n_56,fifo_rreq_n_57,fifo_rreq_n_58,fifo_rreq_n_59,fifo_rreq_n_60,fifo_rreq_n_61,fifo_rreq_n_62,fifo_rreq_n_63,fifo_rreq_n_64,fifo_rreq_n_65,fifo_rreq_n_66,fifo_rreq_n_67,fifo_rreq_n_68,fifo_rreq_n_69,fifo_rreq_n_70,fifo_rreq_n_71,fifo_rreq_n_72,fifo_rreq_n_73,fifo_rreq_n_74,fifo_rreq_n_75,fifo_rreq_n_76,fifo_rreq_n_77,fifo_rreq_n_78,fifo_rreq_n_79,fifo_rreq_n_80,fifo_rreq_n_81,fifo_rreq_n_82,fifo_rreq_n_83,fifo_rreq_n_84,fifo_rreq_n_85,fifo_rreq_n_86,fifo_rreq_n_87,fifo_rreq_n_88,fifo_rreq_n_89,fifo_rreq_n_90,fifo_rreq_n_91,fifo_rreq_n_92}),
        .S({fifo_rreq_n_93,fifo_rreq_n_94,fifo_rreq_n_95,fifo_rreq_n_96}),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\dout_reg[66] ({fifo_rreq_n_101,fifo_rreq_n_102,fifo_rreq_n_103}),
        .\dout_reg[70] ({fifo_rreq_n_97,fifo_rreq_n_98,fifo_rreq_n_99,fifo_rreq_n_100}),
        .\dout_reg[78] ({fifo_rreq_n_104,fifo_rreq_n_105,fifo_rreq_n_106,fifo_rreq_n_107}),
        .\dout_reg[82] ({fifo_rreq_n_108,fifo_rreq_n_109,fifo_rreq_n_110,fifo_rreq_n_111}),
        .\dout_reg[86] ({fifo_rreq_n_112,fifo_rreq_n_113,fifo_rreq_n_114,fifo_rreq_n_115}),
        .\dout_reg[90] ({fifo_rreq_n_116,fifo_rreq_n_117,fifo_rreq_n_118,fifo_rreq_n_119}),
        .\dout_reg[93] ({fifo_rreq_n_120,fifo_rreq_n_121,fifo_rreq_n_122}),
        .\dout_reg[94] (\dout_reg[94] ),
        .\dout_reg[94]_0 (dout_vld_reg_1),
        .\dout_reg[94]_1 (\dout_reg[94]_0 ),
        .full_n_reg_0(full_n_reg),
        .full_n_reg_1(full_n_reg_0),
        .grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .s_ready_t_reg(fifo_rreq_n_123),
        .tmp_valid_reg(ARVALID_Dummy));
  FDRE ready_for_outstanding_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(ready_for_outstanding),
        .Q(RBURST_READY_Dummy),
        .R(SR));
  FDRE \tmp_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_84),
        .Q(D[8]),
        .R(SR));
  FDRE \tmp_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_83),
        .Q(D[9]),
        .R(SR));
  FDRE \tmp_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_82),
        .Q(D[10]),
        .R(SR));
  FDRE \tmp_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_81),
        .Q(D[11]),
        .R(SR));
  FDRE \tmp_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_80),
        .Q(D[12]),
        .R(SR));
  FDRE \tmp_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_79),
        .Q(D[13]),
        .R(SR));
  FDRE \tmp_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_78),
        .Q(D[14]),
        .R(SR));
  FDRE \tmp_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_77),
        .Q(D[15]),
        .R(SR));
  FDRE \tmp_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_76),
        .Q(D[16]),
        .R(SR));
  FDRE \tmp_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_75),
        .Q(D[17]),
        .R(SR));
  FDRE \tmp_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_74),
        .Q(D[18]),
        .R(SR));
  FDRE \tmp_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_73),
        .Q(D[19]),
        .R(SR));
  FDRE \tmp_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_72),
        .Q(D[20]),
        .R(SR));
  FDRE \tmp_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_71),
        .Q(D[21]),
        .R(SR));
  FDRE \tmp_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_70),
        .Q(D[22]),
        .R(SR));
  FDRE \tmp_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_69),
        .Q(D[23]),
        .R(SR));
  FDRE \tmp_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_68),
        .Q(D[24]),
        .R(SR));
  FDRE \tmp_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_67),
        .Q(D[25]),
        .R(SR));
  FDRE \tmp_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_66),
        .Q(D[26]),
        .R(SR));
  FDRE \tmp_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_65),
        .Q(D[27]),
        .R(SR));
  FDRE \tmp_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_92),
        .Q(D[0]),
        .R(SR));
  FDRE \tmp_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_64),
        .Q(D[28]),
        .R(SR));
  FDRE \tmp_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_63),
        .Q(D[29]),
        .R(SR));
  FDRE \tmp_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_62),
        .Q(D[30]),
        .R(SR));
  FDRE \tmp_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_61),
        .Q(D[31]),
        .R(SR));
  FDRE \tmp_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_60),
        .Q(D[32]),
        .R(SR));
  FDRE \tmp_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_59),
        .Q(D[33]),
        .R(SR));
  FDRE \tmp_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_58),
        .Q(D[34]),
        .R(SR));
  FDRE \tmp_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_57),
        .Q(D[35]),
        .R(SR));
  FDRE \tmp_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_56),
        .Q(D[36]),
        .R(SR));
  FDRE \tmp_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_55),
        .Q(D[37]),
        .R(SR));
  FDRE \tmp_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_91),
        .Q(D[1]),
        .R(SR));
  FDRE \tmp_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_54),
        .Q(D[38]),
        .R(SR));
  FDRE \tmp_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_53),
        .Q(D[39]),
        .R(SR));
  FDRE \tmp_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_52),
        .Q(D[40]),
        .R(SR));
  FDRE \tmp_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_51),
        .Q(D[41]),
        .R(SR));
  FDRE \tmp_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_50),
        .Q(D[42]),
        .R(SR));
  FDRE \tmp_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_49),
        .Q(D[43]),
        .R(SR));
  FDRE \tmp_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_48),
        .Q(D[44]),
        .R(SR));
  FDRE \tmp_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_47),
        .Q(D[45]),
        .R(SR));
  FDRE \tmp_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_46),
        .Q(D[46]),
        .R(SR));
  FDRE \tmp_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_45),
        .Q(D[47]),
        .R(SR));
  FDRE \tmp_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_90),
        .Q(D[2]),
        .R(SR));
  FDRE \tmp_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_44),
        .Q(D[48]),
        .R(SR));
  FDRE \tmp_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_43),
        .Q(D[49]),
        .R(SR));
  FDRE \tmp_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_42),
        .Q(D[50]),
        .R(SR));
  FDRE \tmp_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_41),
        .Q(D[51]),
        .R(SR));
  FDRE \tmp_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_40),
        .Q(D[52]),
        .R(SR));
  FDRE \tmp_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_39),
        .Q(D[53]),
        .R(SR));
  FDRE \tmp_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_38),
        .Q(D[54]),
        .R(SR));
  FDRE \tmp_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_37),
        .Q(D[55]),
        .R(SR));
  FDRE \tmp_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_36),
        .Q(D[56]),
        .R(SR));
  FDRE \tmp_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_35),
        .Q(D[57]),
        .R(SR));
  FDRE \tmp_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_89),
        .Q(D[3]),
        .R(SR));
  FDRE \tmp_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_34),
        .Q(D[58]),
        .R(SR));
  FDRE \tmp_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_33),
        .Q(D[59]),
        .R(SR));
  FDRE \tmp_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_32),
        .Q(D[60]),
        .R(SR));
  FDRE \tmp_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_31),
        .Q(D[61]),
        .R(SR));
  FDRE \tmp_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_88),
        .Q(D[4]),
        .R(SR));
  FDRE \tmp_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_87),
        .Q(D[5]),
        .R(SR));
  FDRE \tmp_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_86),
        .Q(D[6]),
        .R(SR));
  FDRE \tmp_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(fifo_rreq_n_85),
        .Q(D[7]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry
       (.CI(1'b0),
        .CO({tmp_len0_carry_n_0,tmp_len0_carry_n_1,tmp_len0_carry_n_2,tmp_len0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({rreq_len[2:0],1'b0}),
        .O({tmp_len0[4:2],NLW_tmp_len0_carry_O_UNCONNECTED[0]}),
        .S({fifo_rreq_n_101,fifo_rreq_n_102,fifo_rreq_n_103,1'b1}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__0
       (.CI(tmp_len0_carry_n_0),
        .CO({tmp_len0_carry__0_n_0,tmp_len0_carry__0_n_1,tmp_len0_carry__0_n_2,tmp_len0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[6:3]),
        .O(tmp_len0[8:5]),
        .S({fifo_rreq_n_97,fifo_rreq_n_98,fifo_rreq_n_99,fifo_rreq_n_100}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__1
       (.CI(tmp_len0_carry__0_n_0),
        .CO({tmp_len0_carry__1_n_0,tmp_len0_carry__1_n_1,tmp_len0_carry__1_n_2,tmp_len0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[10:7]),
        .O(tmp_len0[12:9]),
        .S({fifo_rreq_n_93,fifo_rreq_n_94,fifo_rreq_n_95,fifo_rreq_n_96}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__2
       (.CI(tmp_len0_carry__1_n_0),
        .CO({tmp_len0_carry__2_n_0,tmp_len0_carry__2_n_1,tmp_len0_carry__2_n_2,tmp_len0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[14:11]),
        .O(tmp_len0[16:13]),
        .S({fifo_rreq_n_104,fifo_rreq_n_105,fifo_rreq_n_106,fifo_rreq_n_107}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__3
       (.CI(tmp_len0_carry__2_n_0),
        .CO({tmp_len0_carry__3_n_0,tmp_len0_carry__3_n_1,tmp_len0_carry__3_n_2,tmp_len0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[18:15]),
        .O(tmp_len0[20:17]),
        .S({fifo_rreq_n_108,fifo_rreq_n_109,fifo_rreq_n_110,fifo_rreq_n_111}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__4
       (.CI(tmp_len0_carry__3_n_0),
        .CO({tmp_len0_carry__4_n_0,tmp_len0_carry__4_n_1,tmp_len0_carry__4_n_2,tmp_len0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[22:19]),
        .O(tmp_len0[24:21]),
        .S({fifo_rreq_n_112,fifo_rreq_n_113,fifo_rreq_n_114,fifo_rreq_n_115}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__5
       (.CI(tmp_len0_carry__4_n_0),
        .CO({tmp_len0_carry__5_n_0,tmp_len0_carry__5_n_1,tmp_len0_carry__5_n_2,tmp_len0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(rreq_len[26:23]),
        .O(tmp_len0[28:25]),
        .S({fifo_rreq_n_116,fifo_rreq_n_117,fifo_rreq_n_118,fifo_rreq_n_119}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__6
       (.CI(tmp_len0_carry__5_n_0),
        .CO({NLW_tmp_len0_carry__6_CO_UNCONNECTED[3:2],tmp_len0_carry__6_n_2,tmp_len0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,rreq_len[28:27]}),
        .O({NLW_tmp_len0_carry__6_O_UNCONNECTED[3],tmp_len0[31:29]}),
        .S({1'b0,fifo_rreq_n_120,fifo_rreq_n_121,fifo_rreq_n_122}));
  FDRE \tmp_len_reg[10] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[10]),
        .Q(D[70]),
        .R(SR));
  FDRE \tmp_len_reg[11] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[11]),
        .Q(D[71]),
        .R(SR));
  FDRE \tmp_len_reg[12] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[12]),
        .Q(D[72]),
        .R(SR));
  FDRE \tmp_len_reg[13] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[13]),
        .Q(D[73]),
        .R(SR));
  FDRE \tmp_len_reg[14] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[14]),
        .Q(D[74]),
        .R(SR));
  FDRE \tmp_len_reg[15] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[15]),
        .Q(D[75]),
        .R(SR));
  FDRE \tmp_len_reg[16] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[16]),
        .Q(D[76]),
        .R(SR));
  FDRE \tmp_len_reg[17] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[17]),
        .Q(D[77]),
        .R(SR));
  FDRE \tmp_len_reg[18] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[18]),
        .Q(D[78]),
        .R(SR));
  FDRE \tmp_len_reg[19] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[19]),
        .Q(D[79]),
        .R(SR));
  FDRE \tmp_len_reg[20] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[20]),
        .Q(D[80]),
        .R(SR));
  FDRE \tmp_len_reg[21] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[21]),
        .Q(D[81]),
        .R(SR));
  FDRE \tmp_len_reg[22] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[22]),
        .Q(D[82]),
        .R(SR));
  FDRE \tmp_len_reg[23] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[23]),
        .Q(D[83]),
        .R(SR));
  FDRE \tmp_len_reg[24] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[24]),
        .Q(D[84]),
        .R(SR));
  FDRE \tmp_len_reg[25] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[25]),
        .Q(D[85]),
        .R(SR));
  FDRE \tmp_len_reg[26] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[26]),
        .Q(D[86]),
        .R(SR));
  FDRE \tmp_len_reg[27] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[27]),
        .Q(D[87]),
        .R(SR));
  FDRE \tmp_len_reg[28] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[28]),
        .Q(D[88]),
        .R(SR));
  FDRE \tmp_len_reg[29] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[29]),
        .Q(D[89]),
        .R(SR));
  FDRE \tmp_len_reg[2] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[2]),
        .Q(D[62]),
        .R(SR));
  FDRE \tmp_len_reg[30] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[30]),
        .Q(D[90]),
        .R(SR));
  FDRE \tmp_len_reg[31] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[31]),
        .Q(D[91]),
        .R(SR));
  FDRE \tmp_len_reg[3] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[3]),
        .Q(D[63]),
        .R(SR));
  FDRE \tmp_len_reg[4] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[4]),
        .Q(D[64]),
        .R(SR));
  FDRE \tmp_len_reg[5] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[5]),
        .Q(D[65]),
        .R(SR));
  FDRE \tmp_len_reg[6] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[6]),
        .Q(D[66]),
        .R(SR));
  FDRE \tmp_len_reg[7] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[7]),
        .Q(D[67]),
        .R(SR));
  FDRE \tmp_len_reg[8] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[8]),
        .Q(D[68]),
        .R(SR));
  FDRE \tmp_len_reg[9] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(tmp_len0[9]),
        .Q(D[69]),
        .R(SR));
  FDRE tmp_valid_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_rreq_n_123),
        .Q(ARVALID_Dummy),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_mem" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_mem
   (rnext,
    push,
    dout,
    raddr,
    pop,
    mem_reg_0,
    mem_reg_1,
    gmem_RVALID,
    mem_reg_2,
    Q,
    ap_clk,
    mem_reg_3,
    mem_reg_4,
    SR,
    mem_reg_5,
    mem_reg_6,
    mem_reg_7);
  output [3:0]rnext;
  output push;
  output [35:0]dout;
  input [3:0]raddr;
  input pop;
  input mem_reg_0;
  input mem_reg_1;
  input gmem_RVALID;
  input mem_reg_2;
  input [1:0]Q;
  input ap_clk;
  input mem_reg_3;
  input mem_reg_4;
  input [0:0]SR;
  input mem_reg_5;
  input [3:0]mem_reg_6;
  input [31:0]mem_reg_7;

  wire [1:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire [35:0]dout;
  wire gmem_RVALID;
  wire mem_reg_0;
  wire mem_reg_1;
  wire mem_reg_2;
  wire mem_reg_3;
  wire mem_reg_4;
  wire mem_reg_5;
  wire [3:0]mem_reg_6;
  wire [31:0]mem_reg_7;
  wire pop;
  wire push;
  wire [3:0]raddr;
  wire [3:0]raddr_reg;
  wire [3:0]rnext;

  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-4 {cell *THIS*} {string 4}}" *) 
  (* RTL_RAM_BITS = "540" *) 
  (* RTL_RAM_NAME = "inst/gmem_m_axi_U/store_unit/buff_wdata/U_fifo_mem/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "496" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    mem_reg
       (.ADDRARDADDR({1'b1,1'b1,1'b1,1'b1,1'b1,raddr_reg,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,1'b1,1'b1,mem_reg_6,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(ap_clk),
        .CLKBWRCLK(ap_clk),
        .DIADI(mem_reg_7[15:0]),
        .DIBDI(mem_reg_7[31:16]),
        .DIPADIP({1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO(dout[15:0]),
        .DOBDO(dout[31:16]),
        .DOPADOP(dout[33:32]),
        .DOPBDOP(dout[35:34]),
        .ENARDEN(mem_reg_3),
        .ENBWREN(1'b1),
        .REGCEAREGCE(mem_reg_4),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(SR),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(mem_reg_5),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({push,push,push,push}));
  LUT6 #(
    .INIT(64'hA200A200A2000000)) 
    mem_reg_i_4
       (.I0(mem_reg_0),
        .I1(mem_reg_1),
        .I2(gmem_RVALID),
        .I3(mem_reg_2),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(push));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h00FF7F00)) 
    \raddr_reg[0]_i_1 
       (.I0(raddr[2]),
        .I1(raddr[3]),
        .I2(raddr[1]),
        .I3(pop),
        .I4(raddr[0]),
        .O(rnext[0]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h15FFAA00)) 
    \raddr_reg[1]_i_1 
       (.I0(raddr[0]),
        .I1(raddr[3]),
        .I2(raddr[2]),
        .I3(pop),
        .I4(raddr[1]),
        .O(rnext[1]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'h37FF8800)) 
    \raddr_reg[2]_i_1 
       (.I0(raddr[0]),
        .I1(raddr[1]),
        .I2(raddr[3]),
        .I3(pop),
        .I4(raddr[2]),
        .O(rnext[2]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'h3FFF8000)) 
    \raddr_reg[3]_i_1 
       (.I0(raddr[0]),
        .I1(raddr[1]),
        .I2(raddr[2]),
        .I3(pop),
        .I4(raddr[3]),
        .O(rnext[3]));
  FDRE \raddr_reg_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[0]),
        .Q(raddr_reg[0]),
        .R(1'b0));
  FDRE \raddr_reg_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[1]),
        .Q(raddr_reg[1]),
        .R(1'b0));
  FDRE \raddr_reg_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[2]),
        .Q(raddr_reg[2]),
        .R(1'b0));
  FDRE \raddr_reg_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[3]),
        .Q(raddr_reg[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_mem" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_mem__parameterized0
   (rnext,
    WEBWE,
    dout,
    pop,
    \raddr_reg_reg[0]_0 ,
    \raddr_reg_reg[1]_0 ,
    \raddr_reg_reg[2]_0 ,
    \raddr_reg_reg[3]_0 ,
    \raddr_reg_reg[4]_0 ,
    \raddr_reg_reg[5]_0 ,
    \raddr_reg_reg[6]_0 ,
    \raddr_reg_reg[7]_0 ,
    mem_reg_0,
    Q,
    ap_clk,
    mem_reg_1,
    SR,
    mem_reg_2,
    din);
  output [7:0]rnext;
  output [0:0]WEBWE;
  output [32:0]dout;
  input pop;
  input \raddr_reg_reg[0]_0 ;
  input \raddr_reg_reg[1]_0 ;
  input \raddr_reg_reg[2]_0 ;
  input \raddr_reg_reg[3]_0 ;
  input \raddr_reg_reg[4]_0 ;
  input \raddr_reg_reg[5]_0 ;
  input \raddr_reg_reg[6]_0 ;
  input \raddr_reg_reg[7]_0 ;
  input mem_reg_0;
  input [0:0]Q;
  input ap_clk;
  input mem_reg_1;
  input [0:0]SR;
  input [7:0]mem_reg_2;
  input [33:0]din;

  wire [0:0]Q;
  wire [0:0]SR;
  wire [0:0]WEBWE;
  wire ap_clk;
  wire [33:0]din;
  wire [32:0]dout;
  wire mem_reg_0;
  wire mem_reg_1;
  wire [7:0]mem_reg_2;
  wire mem_reg_n_33;
  wire pop;
  wire [7:0]raddr_reg;
  wire \raddr_reg[4]_i_2_n_0 ;
  wire \raddr_reg[5]_i_2_n_0 ;
  wire \raddr_reg[7]_i_2_n_0 ;
  wire \raddr_reg[7]_i_3_n_0 ;
  wire \raddr_reg[7]_i_4_n_0 ;
  wire \raddr_reg_reg[0]_0 ;
  wire \raddr_reg_reg[1]_0 ;
  wire \raddr_reg_reg[2]_0 ;
  wire \raddr_reg_reg[3]_0 ;
  wire \raddr_reg_reg[4]_0 ;
  wire \raddr_reg_reg[5]_0 ;
  wire \raddr_reg_reg[6]_0 ;
  wire \raddr_reg_reg[7]_0 ;
  wire [7:0]rnext;
  wire [1:0]NLW_mem_reg_DOPBDOP_UNCONNECTED;

  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d32" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p2_d32" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "8670" *) 
  (* RTL_RAM_NAME = "inst/gmem_m_axi_U/load_unit/buff_rdata/U_fifo_mem/mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "256" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "33" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    mem_reg
       (.ADDRARDADDR({1'b1,raddr_reg,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,mem_reg_2,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(ap_clk),
        .CLKBWRCLK(ap_clk),
        .DIADI(din[15:0]),
        .DIBDI(din[31:16]),
        .DIPADIP(din[33:32]),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO(dout[15:0]),
        .DOBDO(dout[31:16]),
        .DOPADOP({dout[32],mem_reg_n_33}),
        .DOPBDOP(NLW_mem_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(mem_reg_1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(SR),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({WEBWE,WEBWE,WEBWE,WEBWE}));
  LUT2 #(
    .INIT(4'h8)) 
    mem_reg_i_3
       (.I0(mem_reg_0),
        .I1(Q),
        .O(WEBWE));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \raddr_reg[0]_i_1__0 
       (.I0(pop),
        .I1(\raddr_reg_reg[0]_0 ),
        .I2(\raddr_reg[7]_i_2_n_0 ),
        .O(rnext[0]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'h5370)) 
    \raddr_reg[1]_i_1__0 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[1]_0 ),
        .I3(\raddr_reg_reg[0]_0 ),
        .O(rnext[1]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h53707070)) 
    \raddr_reg[2]_i_1__0 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[2]_0 ),
        .I3(\raddr_reg_reg[0]_0 ),
        .I4(\raddr_reg_reg[1]_0 ),
        .O(rnext[2]));
  LUT6 #(
    .INIT(64'h5370707070707070)) 
    \raddr_reg[3]_i_1__0 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[3]_0 ),
        .I3(\raddr_reg_reg[1]_0 ),
        .I4(\raddr_reg_reg[0]_0 ),
        .I5(\raddr_reg_reg[2]_0 ),
        .O(rnext[3]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'h5370)) 
    \raddr_reg[4]_i_1 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[4]_0 ),
        .I3(\raddr_reg[4]_i_2_n_0 ),
        .O(rnext[4]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \raddr_reg[4]_i_2 
       (.I0(\raddr_reg_reg[3]_0 ),
        .I1(\raddr_reg_reg[1]_0 ),
        .I2(\raddr_reg_reg[0]_0 ),
        .I3(\raddr_reg_reg[2]_0 ),
        .O(\raddr_reg[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h5370)) 
    \raddr_reg[5]_i_1 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[5]_0 ),
        .I3(\raddr_reg[5]_i_2_n_0 ),
        .O(rnext[5]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \raddr_reg[5]_i_2 
       (.I0(\raddr_reg_reg[4]_0 ),
        .I1(\raddr_reg_reg[2]_0 ),
        .I2(\raddr_reg_reg[0]_0 ),
        .I3(\raddr_reg_reg[1]_0 ),
        .I4(\raddr_reg_reg[3]_0 ),
        .O(\raddr_reg[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT4 #(
    .INIT(16'h5370)) 
    \raddr_reg[6]_i_1 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg_reg[6]_0 ),
        .I3(\raddr_reg[7]_i_3_n_0 ),
        .O(rnext[6]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'h57773000)) 
    \raddr_reg[7]_i_1 
       (.I0(pop),
        .I1(\raddr_reg[7]_i_2_n_0 ),
        .I2(\raddr_reg[7]_i_3_n_0 ),
        .I3(\raddr_reg_reg[6]_0 ),
        .I4(\raddr_reg_reg[7]_0 ),
        .O(rnext[7]));
  LUT6 #(
    .INIT(64'h04000000FFFFFFFF)) 
    \raddr_reg[7]_i_2 
       (.I0(\raddr_reg[7]_i_4_n_0 ),
        .I1(\raddr_reg_reg[1]_0 ),
        .I2(\raddr_reg_reg[0]_0 ),
        .I3(\raddr_reg_reg[2]_0 ),
        .I4(\raddr_reg_reg[3]_0 ),
        .I5(pop),
        .O(\raddr_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \raddr_reg[7]_i_3 
       (.I0(\raddr_reg_reg[5]_0 ),
        .I1(\raddr_reg_reg[3]_0 ),
        .I2(\raddr_reg_reg[1]_0 ),
        .I3(\raddr_reg_reg[0]_0 ),
        .I4(\raddr_reg_reg[2]_0 ),
        .I5(\raddr_reg_reg[4]_0 ),
        .O(\raddr_reg[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \raddr_reg[7]_i_4 
       (.I0(\raddr_reg_reg[4]_0 ),
        .I1(\raddr_reg_reg[5]_0 ),
        .I2(\raddr_reg_reg[7]_0 ),
        .I3(\raddr_reg_reg[6]_0 ),
        .O(\raddr_reg[7]_i_4_n_0 ));
  FDRE \raddr_reg_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[0]),
        .Q(raddr_reg[0]),
        .R(1'b0));
  FDRE \raddr_reg_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[1]),
        .Q(raddr_reg[1]),
        .R(1'b0));
  FDRE \raddr_reg_reg[2] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[2]),
        .Q(raddr_reg[2]),
        .R(1'b0));
  FDRE \raddr_reg_reg[3] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[3]),
        .Q(raddr_reg[3]),
        .R(1'b0));
  FDRE \raddr_reg_reg[4] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[4]),
        .Q(raddr_reg[4]),
        .R(1'b0));
  FDRE \raddr_reg_reg[5] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[5]),
        .Q(raddr_reg[5]),
        .R(1'b0));
  FDRE \raddr_reg_reg[6] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[6]),
        .Q(raddr_reg[6]),
        .R(1'b0));
  FDRE \raddr_reg_reg[7] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(rnext[7]),
        .Q(raddr_reg[7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_read" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_read
   (ARREADY_Dummy,
    s_ready_t_reg,
    \could_multi_bursts.ARVALID_Dummy_reg_0 ,
    mOutPtr18_out,
    Q,
    \data_p1_reg[32] ,
    din,
    m_axi_gmem_ARADDR,
    \could_multi_bursts.arlen_buf_reg[3]_0 ,
    ap_clk,
    SR,
    ap_rst_n,
    RREADY_Dummy,
    pop,
    push,
    ARVALID_Dummy,
    RBURST_READY_Dummy,
    m_axi_gmem_ARREADY,
    m_axi_gmem_RVALID,
    D,
    \data_p2_reg[32] ,
    E);
  output ARREADY_Dummy;
  output s_ready_t_reg;
  output \could_multi_bursts.ARVALID_Dummy_reg_0 ;
  output mOutPtr18_out;
  output [0:0]Q;
  output [32:0]\data_p1_reg[32] ;
  output [0:0]din;
  output [61:0]m_axi_gmem_ARADDR;
  output [3:0]\could_multi_bursts.arlen_buf_reg[3]_0 ;
  input ap_clk;
  input [0:0]SR;
  input ap_rst_n;
  input RREADY_Dummy;
  input pop;
  input push;
  input ARVALID_Dummy;
  input RBURST_READY_Dummy;
  input m_axi_gmem_ARREADY;
  input m_axi_gmem_RVALID;
  input [91:0]D;
  input [32:0]\data_p2_reg[32] ;
  input [0:0]E;

  wire ARREADY_Dummy;
  wire ARVALID_Dummy;
  wire [91:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire RBURST_READY_Dummy;
  wire RREADY_Dummy;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire [63:2]araddr_tmp;
  wire [9:0]beat_len;
  wire burst_valid;
  wire \could_multi_bursts.ARVALID_Dummy_reg_0 ;
  wire \could_multi_bursts.araddr_buf[4]_i_3_n_0 ;
  wire \could_multi_bursts.araddr_buf[4]_i_4_n_0 ;
  wire \could_multi_bursts.araddr_buf[4]_i_5_n_0 ;
  wire \could_multi_bursts.araddr_buf[63]_i_3_n_0 ;
  wire \could_multi_bursts.araddr_buf[8]_i_3_n_0 ;
  wire \could_multi_bursts.araddr_buf[8]_i_4_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[12]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[12]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[12]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[12]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[16]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[16]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[16]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[16]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[20]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[20]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[20]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[20]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[24]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[24]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[24]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[24]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[28]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[28]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[28]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[28]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[32]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[32]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[32]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[32]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[36]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[36]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[36]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[36]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[40]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[40]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[40]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[40]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[44]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[44]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[44]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[44]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[48]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[48]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[48]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[48]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[4]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[4]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[4]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[4]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[52]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[52]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[52]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[52]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[56]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[56]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[56]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[56]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[60]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[60]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[60]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[60]_i_2_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[63]_i_4_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[63]_i_4_n_3 ;
  wire \could_multi_bursts.araddr_buf_reg[8]_i_2_n_0 ;
  wire \could_multi_bursts.araddr_buf_reg[8]_i_2_n_1 ;
  wire \could_multi_bursts.araddr_buf_reg[8]_i_2_n_2 ;
  wire \could_multi_bursts.araddr_buf_reg[8]_i_2_n_3 ;
  wire [3:0]\could_multi_bursts.arlen_buf_reg[3]_0 ;
  wire \could_multi_bursts.last_loop__10 ;
  wire [5:0]\could_multi_bursts.loop_cnt_reg ;
  wire \could_multi_bursts.sect_handling_reg_n_0 ;
  wire [63:2]data1;
  wire [32:0]\data_p1_reg[32] ;
  wire [32:0]\data_p2_reg[32] ;
  wire [0:0]din;
  wire \end_addr[13]_i_2_n_0 ;
  wire \end_addr[13]_i_3_n_0 ;
  wire \end_addr[13]_i_4_n_0 ;
  wire \end_addr[13]_i_5_n_0 ;
  wire \end_addr[17]_i_2_n_0 ;
  wire \end_addr[17]_i_3_n_0 ;
  wire \end_addr[17]_i_4_n_0 ;
  wire \end_addr[17]_i_5_n_0 ;
  wire \end_addr[21]_i_2_n_0 ;
  wire \end_addr[21]_i_3_n_0 ;
  wire \end_addr[21]_i_4_n_0 ;
  wire \end_addr[21]_i_5_n_0 ;
  wire \end_addr[25]_i_2_n_0 ;
  wire \end_addr[25]_i_3_n_0 ;
  wire \end_addr[25]_i_4_n_0 ;
  wire \end_addr[25]_i_5_n_0 ;
  wire \end_addr[29]_i_2_n_0 ;
  wire \end_addr[29]_i_3_n_0 ;
  wire \end_addr[29]_i_4_n_0 ;
  wire \end_addr[29]_i_5_n_0 ;
  wire \end_addr[33]_i_2_n_0 ;
  wire \end_addr[33]_i_3_n_0 ;
  wire \end_addr[5]_i_2_n_0 ;
  wire \end_addr[5]_i_3_n_0 ;
  wire \end_addr[5]_i_4_n_0 ;
  wire \end_addr[5]_i_5_n_0 ;
  wire \end_addr[9]_i_2_n_0 ;
  wire \end_addr[9]_i_3_n_0 ;
  wire \end_addr[9]_i_4_n_0 ;
  wire \end_addr[9]_i_5_n_0 ;
  wire \end_addr_reg_n_0_[10] ;
  wire \end_addr_reg_n_0_[11] ;
  wire \end_addr_reg_n_0_[2] ;
  wire \end_addr_reg_n_0_[3] ;
  wire \end_addr_reg_n_0_[4] ;
  wire \end_addr_reg_n_0_[5] ;
  wire \end_addr_reg_n_0_[6] ;
  wire \end_addr_reg_n_0_[7] ;
  wire \end_addr_reg_n_0_[8] ;
  wire \end_addr_reg_n_0_[9] ;
  wire fifo_burst_n_1;
  wire fifo_burst_n_3;
  wire fifo_burst_n_4;
  wire fifo_rctl_n_10;
  wire fifo_rctl_n_11;
  wire fifo_rctl_n_12;
  wire fifo_rctl_n_13;
  wire fifo_rctl_n_14;
  wire fifo_rctl_n_2;
  wire fifo_rctl_n_5;
  wire fifo_rctl_n_6;
  wire fifo_rctl_n_7;
  wire fifo_rctl_n_8;
  wire fifo_rctl_n_9;
  wire fifo_rctl_ready;
  wire first_sect;
  wire first_sect_carry__0_i_1__0_n_0;
  wire first_sect_carry__0_i_2__0_n_0;
  wire first_sect_carry__0_i_3__0_n_0;
  wire first_sect_carry__0_i_4__0_n_0;
  wire first_sect_carry__0_n_0;
  wire first_sect_carry__0_n_1;
  wire first_sect_carry__0_n_2;
  wire first_sect_carry__0_n_3;
  wire first_sect_carry__1_i_1__0_n_0;
  wire first_sect_carry__1_i_2__0_n_0;
  wire first_sect_carry__1_i_3__0_n_0;
  wire first_sect_carry__1_i_4__0_n_0;
  wire first_sect_carry__1_n_0;
  wire first_sect_carry__1_n_1;
  wire first_sect_carry__1_n_2;
  wire first_sect_carry__1_n_3;
  wire first_sect_carry__2_i_1__0_n_0;
  wire first_sect_carry__2_i_2__0_n_0;
  wire first_sect_carry__2_i_3__0_n_0;
  wire first_sect_carry__2_i_4__0_n_0;
  wire first_sect_carry__2_n_0;
  wire first_sect_carry__2_n_1;
  wire first_sect_carry__2_n_2;
  wire first_sect_carry__2_n_3;
  wire first_sect_carry__3_i_1__0_n_0;
  wire first_sect_carry__3_i_2__0_n_0;
  wire first_sect_carry__3_n_3;
  wire first_sect_carry_i_1__0_n_0;
  wire first_sect_carry_i_2__0_n_0;
  wire first_sect_carry_i_3__0_n_0;
  wire first_sect_carry_i_4__0_n_0;
  wire first_sect_carry_n_0;
  wire first_sect_carry_n_1;
  wire first_sect_carry_n_2;
  wire first_sect_carry_n_3;
  wire last_sect;
  wire last_sect_buf_reg_n_0;
  wire last_sect_carry__0_i_1__0_n_0;
  wire last_sect_carry__0_i_2__0_n_0;
  wire last_sect_carry__0_i_3__0_n_0;
  wire last_sect_carry__0_i_4__0_n_0;
  wire last_sect_carry__0_n_0;
  wire last_sect_carry__0_n_1;
  wire last_sect_carry__0_n_2;
  wire last_sect_carry__0_n_3;
  wire last_sect_carry__1_i_1__0_n_0;
  wire last_sect_carry__1_i_2__0_n_0;
  wire last_sect_carry__1_i_3__0_n_0;
  wire last_sect_carry__1_i_4__0_n_0;
  wire last_sect_carry__1_n_0;
  wire last_sect_carry__1_n_1;
  wire last_sect_carry__1_n_2;
  wire last_sect_carry__1_n_3;
  wire last_sect_carry__2_i_1__0_n_0;
  wire last_sect_carry__2_i_2__0_n_0;
  wire last_sect_carry__2_i_3__0_n_0;
  wire last_sect_carry__2_i_4__0_n_0;
  wire last_sect_carry__2_n_0;
  wire last_sect_carry__2_n_1;
  wire last_sect_carry__2_n_2;
  wire last_sect_carry__2_n_3;
  wire last_sect_carry__3_n_3;
  wire last_sect_carry_i_1__0_n_0;
  wire last_sect_carry_i_2__0_n_0;
  wire last_sect_carry_i_3__0_n_0;
  wire last_sect_carry_i_4__0_n_0;
  wire last_sect_carry_n_0;
  wire last_sect_carry_n_1;
  wire last_sect_carry_n_2;
  wire last_sect_carry_n_3;
  wire mOutPtr18_out;
  wire [61:0]m_axi_gmem_ARADDR;
  wire m_axi_gmem_ARREADY;
  wire m_axi_gmem_RVALID;
  wire next_rreq;
  wire [51:0]p_0_in;
  wire [51:0]p_0_in0_in;
  wire [5:0]p_0_in__1;
  wire p_13_in;
  wire p_14_in;
  wire [11:2]p_1_in;
  wire pop;
  wire pop_0;
  wire push;
  wire rreq_handling_reg_n_0;
  wire rreq_valid;
  wire rs_rreq_n_10;
  wire rs_rreq_n_100;
  wire rs_rreq_n_101;
  wire rs_rreq_n_102;
  wire rs_rreq_n_103;
  wire rs_rreq_n_104;
  wire rs_rreq_n_105;
  wire rs_rreq_n_106;
  wire rs_rreq_n_107;
  wire rs_rreq_n_108;
  wire rs_rreq_n_109;
  wire rs_rreq_n_11;
  wire rs_rreq_n_110;
  wire rs_rreq_n_111;
  wire rs_rreq_n_112;
  wire rs_rreq_n_113;
  wire rs_rreq_n_114;
  wire rs_rreq_n_115;
  wire rs_rreq_n_116;
  wire rs_rreq_n_117;
  wire rs_rreq_n_118;
  wire rs_rreq_n_119;
  wire rs_rreq_n_12;
  wire rs_rreq_n_120;
  wire rs_rreq_n_121;
  wire rs_rreq_n_122;
  wire rs_rreq_n_123;
  wire rs_rreq_n_124;
  wire rs_rreq_n_125;
  wire rs_rreq_n_126;
  wire rs_rreq_n_127;
  wire rs_rreq_n_128;
  wire rs_rreq_n_129;
  wire rs_rreq_n_13;
  wire rs_rreq_n_130;
  wire rs_rreq_n_131;
  wire rs_rreq_n_132;
  wire rs_rreq_n_133;
  wire rs_rreq_n_134;
  wire rs_rreq_n_135;
  wire rs_rreq_n_136;
  wire rs_rreq_n_137;
  wire rs_rreq_n_138;
  wire rs_rreq_n_139;
  wire rs_rreq_n_14;
  wire rs_rreq_n_140;
  wire rs_rreq_n_141;
  wire rs_rreq_n_142;
  wire rs_rreq_n_143;
  wire rs_rreq_n_144;
  wire rs_rreq_n_145;
  wire rs_rreq_n_146;
  wire rs_rreq_n_147;
  wire rs_rreq_n_148;
  wire rs_rreq_n_149;
  wire rs_rreq_n_15;
  wire rs_rreq_n_150;
  wire rs_rreq_n_151;
  wire rs_rreq_n_152;
  wire rs_rreq_n_153;
  wire rs_rreq_n_154;
  wire rs_rreq_n_155;
  wire rs_rreq_n_156;
  wire rs_rreq_n_157;
  wire rs_rreq_n_158;
  wire rs_rreq_n_159;
  wire rs_rreq_n_16;
  wire rs_rreq_n_160;
  wire rs_rreq_n_161;
  wire rs_rreq_n_162;
  wire rs_rreq_n_163;
  wire rs_rreq_n_164;
  wire rs_rreq_n_165;
  wire rs_rreq_n_166;
  wire rs_rreq_n_167;
  wire rs_rreq_n_168;
  wire rs_rreq_n_169;
  wire rs_rreq_n_17;
  wire rs_rreq_n_170;
  wire rs_rreq_n_171;
  wire rs_rreq_n_172;
  wire rs_rreq_n_173;
  wire rs_rreq_n_174;
  wire rs_rreq_n_175;
  wire rs_rreq_n_176;
  wire rs_rreq_n_177;
  wire rs_rreq_n_178;
  wire rs_rreq_n_179;
  wire rs_rreq_n_18;
  wire rs_rreq_n_180;
  wire rs_rreq_n_181;
  wire rs_rreq_n_182;
  wire rs_rreq_n_183;
  wire rs_rreq_n_184;
  wire rs_rreq_n_185;
  wire rs_rreq_n_186;
  wire rs_rreq_n_187;
  wire rs_rreq_n_188;
  wire rs_rreq_n_189;
  wire rs_rreq_n_19;
  wire rs_rreq_n_190;
  wire rs_rreq_n_191;
  wire rs_rreq_n_192;
  wire rs_rreq_n_193;
  wire rs_rreq_n_194;
  wire rs_rreq_n_195;
  wire rs_rreq_n_196;
  wire rs_rreq_n_197;
  wire rs_rreq_n_198;
  wire rs_rreq_n_199;
  wire rs_rreq_n_2;
  wire rs_rreq_n_20;
  wire rs_rreq_n_200;
  wire rs_rreq_n_201;
  wire rs_rreq_n_202;
  wire rs_rreq_n_203;
  wire rs_rreq_n_204;
  wire rs_rreq_n_205;
  wire rs_rreq_n_206;
  wire rs_rreq_n_207;
  wire rs_rreq_n_208;
  wire rs_rreq_n_209;
  wire rs_rreq_n_21;
  wire rs_rreq_n_22;
  wire rs_rreq_n_23;
  wire rs_rreq_n_24;
  wire rs_rreq_n_25;
  wire rs_rreq_n_26;
  wire rs_rreq_n_27;
  wire rs_rreq_n_28;
  wire rs_rreq_n_29;
  wire rs_rreq_n_3;
  wire rs_rreq_n_30;
  wire rs_rreq_n_31;
  wire rs_rreq_n_32;
  wire rs_rreq_n_33;
  wire rs_rreq_n_34;
  wire rs_rreq_n_35;
  wire rs_rreq_n_36;
  wire rs_rreq_n_37;
  wire rs_rreq_n_38;
  wire rs_rreq_n_39;
  wire rs_rreq_n_4;
  wire rs_rreq_n_40;
  wire rs_rreq_n_41;
  wire rs_rreq_n_42;
  wire rs_rreq_n_43;
  wire rs_rreq_n_44;
  wire rs_rreq_n_45;
  wire rs_rreq_n_46;
  wire rs_rreq_n_47;
  wire rs_rreq_n_48;
  wire rs_rreq_n_49;
  wire rs_rreq_n_5;
  wire rs_rreq_n_50;
  wire rs_rreq_n_51;
  wire rs_rreq_n_52;
  wire rs_rreq_n_53;
  wire rs_rreq_n_54;
  wire rs_rreq_n_55;
  wire rs_rreq_n_56;
  wire rs_rreq_n_57;
  wire rs_rreq_n_58;
  wire rs_rreq_n_59;
  wire rs_rreq_n_6;
  wire rs_rreq_n_60;
  wire rs_rreq_n_61;
  wire rs_rreq_n_62;
  wire rs_rreq_n_63;
  wire rs_rreq_n_64;
  wire rs_rreq_n_65;
  wire rs_rreq_n_66;
  wire rs_rreq_n_67;
  wire rs_rreq_n_68;
  wire rs_rreq_n_69;
  wire rs_rreq_n_7;
  wire rs_rreq_n_70;
  wire rs_rreq_n_71;
  wire rs_rreq_n_72;
  wire rs_rreq_n_73;
  wire rs_rreq_n_8;
  wire rs_rreq_n_84;
  wire rs_rreq_n_85;
  wire rs_rreq_n_86;
  wire rs_rreq_n_87;
  wire rs_rreq_n_88;
  wire rs_rreq_n_89;
  wire rs_rreq_n_9;
  wire rs_rreq_n_90;
  wire rs_rreq_n_91;
  wire rs_rreq_n_92;
  wire rs_rreq_n_93;
  wire rs_rreq_n_94;
  wire rs_rreq_n_95;
  wire rs_rreq_n_96;
  wire rs_rreq_n_97;
  wire rs_rreq_n_98;
  wire rs_rreq_n_99;
  wire s_ready_t_reg;
  wire [63:2]sect_addr;
  wire \sect_addr_buf_reg_n_0_[10] ;
  wire \sect_addr_buf_reg_n_0_[11] ;
  wire \sect_addr_buf_reg_n_0_[12] ;
  wire \sect_addr_buf_reg_n_0_[13] ;
  wire \sect_addr_buf_reg_n_0_[14] ;
  wire \sect_addr_buf_reg_n_0_[15] ;
  wire \sect_addr_buf_reg_n_0_[16] ;
  wire \sect_addr_buf_reg_n_0_[17] ;
  wire \sect_addr_buf_reg_n_0_[18] ;
  wire \sect_addr_buf_reg_n_0_[19] ;
  wire \sect_addr_buf_reg_n_0_[20] ;
  wire \sect_addr_buf_reg_n_0_[21] ;
  wire \sect_addr_buf_reg_n_0_[22] ;
  wire \sect_addr_buf_reg_n_0_[23] ;
  wire \sect_addr_buf_reg_n_0_[24] ;
  wire \sect_addr_buf_reg_n_0_[25] ;
  wire \sect_addr_buf_reg_n_0_[26] ;
  wire \sect_addr_buf_reg_n_0_[27] ;
  wire \sect_addr_buf_reg_n_0_[28] ;
  wire \sect_addr_buf_reg_n_0_[29] ;
  wire \sect_addr_buf_reg_n_0_[2] ;
  wire \sect_addr_buf_reg_n_0_[30] ;
  wire \sect_addr_buf_reg_n_0_[31] ;
  wire \sect_addr_buf_reg_n_0_[32] ;
  wire \sect_addr_buf_reg_n_0_[33] ;
  wire \sect_addr_buf_reg_n_0_[34] ;
  wire \sect_addr_buf_reg_n_0_[35] ;
  wire \sect_addr_buf_reg_n_0_[36] ;
  wire \sect_addr_buf_reg_n_0_[37] ;
  wire \sect_addr_buf_reg_n_0_[38] ;
  wire \sect_addr_buf_reg_n_0_[39] ;
  wire \sect_addr_buf_reg_n_0_[3] ;
  wire \sect_addr_buf_reg_n_0_[40] ;
  wire \sect_addr_buf_reg_n_0_[41] ;
  wire \sect_addr_buf_reg_n_0_[42] ;
  wire \sect_addr_buf_reg_n_0_[43] ;
  wire \sect_addr_buf_reg_n_0_[44] ;
  wire \sect_addr_buf_reg_n_0_[45] ;
  wire \sect_addr_buf_reg_n_0_[46] ;
  wire \sect_addr_buf_reg_n_0_[47] ;
  wire \sect_addr_buf_reg_n_0_[48] ;
  wire \sect_addr_buf_reg_n_0_[49] ;
  wire \sect_addr_buf_reg_n_0_[4] ;
  wire \sect_addr_buf_reg_n_0_[50] ;
  wire \sect_addr_buf_reg_n_0_[51] ;
  wire \sect_addr_buf_reg_n_0_[52] ;
  wire \sect_addr_buf_reg_n_0_[53] ;
  wire \sect_addr_buf_reg_n_0_[54] ;
  wire \sect_addr_buf_reg_n_0_[55] ;
  wire \sect_addr_buf_reg_n_0_[56] ;
  wire \sect_addr_buf_reg_n_0_[57] ;
  wire \sect_addr_buf_reg_n_0_[58] ;
  wire \sect_addr_buf_reg_n_0_[59] ;
  wire \sect_addr_buf_reg_n_0_[5] ;
  wire \sect_addr_buf_reg_n_0_[60] ;
  wire \sect_addr_buf_reg_n_0_[61] ;
  wire \sect_addr_buf_reg_n_0_[62] ;
  wire \sect_addr_buf_reg_n_0_[63] ;
  wire \sect_addr_buf_reg_n_0_[6] ;
  wire \sect_addr_buf_reg_n_0_[7] ;
  wire \sect_addr_buf_reg_n_0_[8] ;
  wire \sect_addr_buf_reg_n_0_[9] ;
  wire [51:1]sect_cnt0;
  wire sect_cnt0_carry__0_n_0;
  wire sect_cnt0_carry__0_n_1;
  wire sect_cnt0_carry__0_n_2;
  wire sect_cnt0_carry__0_n_3;
  wire sect_cnt0_carry__10_n_0;
  wire sect_cnt0_carry__10_n_1;
  wire sect_cnt0_carry__10_n_2;
  wire sect_cnt0_carry__10_n_3;
  wire sect_cnt0_carry__11_n_2;
  wire sect_cnt0_carry__11_n_3;
  wire sect_cnt0_carry__1_n_0;
  wire sect_cnt0_carry__1_n_1;
  wire sect_cnt0_carry__1_n_2;
  wire sect_cnt0_carry__1_n_3;
  wire sect_cnt0_carry__2_n_0;
  wire sect_cnt0_carry__2_n_1;
  wire sect_cnt0_carry__2_n_2;
  wire sect_cnt0_carry__2_n_3;
  wire sect_cnt0_carry__3_n_0;
  wire sect_cnt0_carry__3_n_1;
  wire sect_cnt0_carry__3_n_2;
  wire sect_cnt0_carry__3_n_3;
  wire sect_cnt0_carry__4_n_0;
  wire sect_cnt0_carry__4_n_1;
  wire sect_cnt0_carry__4_n_2;
  wire sect_cnt0_carry__4_n_3;
  wire sect_cnt0_carry__5_n_0;
  wire sect_cnt0_carry__5_n_1;
  wire sect_cnt0_carry__5_n_2;
  wire sect_cnt0_carry__5_n_3;
  wire sect_cnt0_carry__6_n_0;
  wire sect_cnt0_carry__6_n_1;
  wire sect_cnt0_carry__6_n_2;
  wire sect_cnt0_carry__6_n_3;
  wire sect_cnt0_carry__7_n_0;
  wire sect_cnt0_carry__7_n_1;
  wire sect_cnt0_carry__7_n_2;
  wire sect_cnt0_carry__7_n_3;
  wire sect_cnt0_carry__8_n_0;
  wire sect_cnt0_carry__8_n_1;
  wire sect_cnt0_carry__8_n_2;
  wire sect_cnt0_carry__8_n_3;
  wire sect_cnt0_carry__9_n_0;
  wire sect_cnt0_carry__9_n_1;
  wire sect_cnt0_carry__9_n_2;
  wire sect_cnt0_carry__9_n_3;
  wire sect_cnt0_carry_n_0;
  wire sect_cnt0_carry_n_1;
  wire sect_cnt0_carry_n_2;
  wire sect_cnt0_carry_n_3;
  wire \sect_cnt_reg_n_0_[0] ;
  wire \sect_cnt_reg_n_0_[10] ;
  wire \sect_cnt_reg_n_0_[11] ;
  wire \sect_cnt_reg_n_0_[12] ;
  wire \sect_cnt_reg_n_0_[13] ;
  wire \sect_cnt_reg_n_0_[14] ;
  wire \sect_cnt_reg_n_0_[15] ;
  wire \sect_cnt_reg_n_0_[16] ;
  wire \sect_cnt_reg_n_0_[17] ;
  wire \sect_cnt_reg_n_0_[18] ;
  wire \sect_cnt_reg_n_0_[19] ;
  wire \sect_cnt_reg_n_0_[1] ;
  wire \sect_cnt_reg_n_0_[20] ;
  wire \sect_cnt_reg_n_0_[21] ;
  wire \sect_cnt_reg_n_0_[22] ;
  wire \sect_cnt_reg_n_0_[23] ;
  wire \sect_cnt_reg_n_0_[24] ;
  wire \sect_cnt_reg_n_0_[25] ;
  wire \sect_cnt_reg_n_0_[26] ;
  wire \sect_cnt_reg_n_0_[27] ;
  wire \sect_cnt_reg_n_0_[28] ;
  wire \sect_cnt_reg_n_0_[29] ;
  wire \sect_cnt_reg_n_0_[2] ;
  wire \sect_cnt_reg_n_0_[30] ;
  wire \sect_cnt_reg_n_0_[31] ;
  wire \sect_cnt_reg_n_0_[32] ;
  wire \sect_cnt_reg_n_0_[33] ;
  wire \sect_cnt_reg_n_0_[34] ;
  wire \sect_cnt_reg_n_0_[35] ;
  wire \sect_cnt_reg_n_0_[36] ;
  wire \sect_cnt_reg_n_0_[37] ;
  wire \sect_cnt_reg_n_0_[38] ;
  wire \sect_cnt_reg_n_0_[39] ;
  wire \sect_cnt_reg_n_0_[3] ;
  wire \sect_cnt_reg_n_0_[40] ;
  wire \sect_cnt_reg_n_0_[41] ;
  wire \sect_cnt_reg_n_0_[42] ;
  wire \sect_cnt_reg_n_0_[43] ;
  wire \sect_cnt_reg_n_0_[44] ;
  wire \sect_cnt_reg_n_0_[45] ;
  wire \sect_cnt_reg_n_0_[46] ;
  wire \sect_cnt_reg_n_0_[47] ;
  wire \sect_cnt_reg_n_0_[48] ;
  wire \sect_cnt_reg_n_0_[49] ;
  wire \sect_cnt_reg_n_0_[4] ;
  wire \sect_cnt_reg_n_0_[50] ;
  wire \sect_cnt_reg_n_0_[51] ;
  wire \sect_cnt_reg_n_0_[5] ;
  wire \sect_cnt_reg_n_0_[6] ;
  wire \sect_cnt_reg_n_0_[7] ;
  wire \sect_cnt_reg_n_0_[8] ;
  wire \sect_cnt_reg_n_0_[9] ;
  wire \sect_len_buf[0]_i_1__0_n_0 ;
  wire \sect_len_buf[1]_i_1__0_n_0 ;
  wire \sect_len_buf[2]_i_1__0_n_0 ;
  wire \sect_len_buf[3]_i_1__0_n_0 ;
  wire \sect_len_buf[4]_i_1__0_n_0 ;
  wire \sect_len_buf[5]_i_1__0_n_0 ;
  wire \sect_len_buf[6]_i_1__0_n_0 ;
  wire \sect_len_buf[7]_i_1__0_n_0 ;
  wire \sect_len_buf[8]_i_1__0_n_0 ;
  wire \sect_len_buf[9]_i_2__0_n_0 ;
  wire \sect_len_buf_reg_n_0_[0] ;
  wire \sect_len_buf_reg_n_0_[1] ;
  wire \sect_len_buf_reg_n_0_[2] ;
  wire \sect_len_buf_reg_n_0_[3] ;
  wire \sect_len_buf_reg_n_0_[4] ;
  wire \sect_len_buf_reg_n_0_[5] ;
  wire \sect_len_buf_reg_n_0_[6] ;
  wire \sect_len_buf_reg_n_0_[7] ;
  wire \sect_len_buf_reg_n_0_[8] ;
  wire \sect_len_buf_reg_n_0_[9] ;
  wire \start_addr_reg_n_0_[10] ;
  wire \start_addr_reg_n_0_[11] ;
  wire \start_addr_reg_n_0_[2] ;
  wire \start_addr_reg_n_0_[3] ;
  wire \start_addr_reg_n_0_[4] ;
  wire \start_addr_reg_n_0_[5] ;
  wire \start_addr_reg_n_0_[6] ;
  wire \start_addr_reg_n_0_[7] ;
  wire \start_addr_reg_n_0_[8] ;
  wire \start_addr_reg_n_0_[9] ;
  wire [0:0]\NLW_could_multi_bursts.araddr_buf_reg[4]_i_2_O_UNCONNECTED ;
  wire [3:2]\NLW_could_multi_bursts.araddr_buf_reg[63]_i_4_CO_UNCONNECTED ;
  wire [3:3]\NLW_could_multi_bursts.araddr_buf_reg[63]_i_4_O_UNCONNECTED ;
  wire [3:0]NLW_first_sect_carry_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_first_sect_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_last_sect_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__3_O_UNCONNECTED;
  wire [3:2]NLW_sect_cnt0_carry__11_CO_UNCONNECTED;
  wire [3:3]NLW_sect_cnt0_carry__11_O_UNCONNECTED;

  FDRE \beat_len_reg[0] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[2]),
        .Q(beat_len[0]),
        .R(SR));
  FDRE \beat_len_reg[1] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[3]),
        .Q(beat_len[1]),
        .R(SR));
  FDRE \beat_len_reg[2] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[4]),
        .Q(beat_len[2]),
        .R(SR));
  FDRE \beat_len_reg[3] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[5]),
        .Q(beat_len[3]),
        .R(SR));
  FDRE \beat_len_reg[4] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[6]),
        .Q(beat_len[4]),
        .R(SR));
  FDRE \beat_len_reg[5] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[7]),
        .Q(beat_len[5]),
        .R(SR));
  FDRE \beat_len_reg[6] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[8]),
        .Q(beat_len[6]),
        .R(SR));
  FDRE \beat_len_reg[7] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[9]),
        .Q(beat_len[7]),
        .R(SR));
  FDRE \beat_len_reg[8] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[10]),
        .Q(beat_len[8]),
        .R(SR));
  FDRE \beat_len_reg[9] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(p_1_in[11]),
        .Q(beat_len[9]),
        .R(SR));
  FDRE \could_multi_bursts.ARVALID_Dummy_reg 
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_rctl_n_5),
        .Q(\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[10]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[10] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[10]),
        .O(araddr_tmp[10]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[11]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[11] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[11]),
        .O(araddr_tmp[11]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[12]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[12] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[12]),
        .O(araddr_tmp[12]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[13]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[13] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[13]),
        .O(araddr_tmp[13]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[14]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[14] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[14]),
        .O(araddr_tmp[14]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[15]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[15] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[15]),
        .O(araddr_tmp[15]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[16]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[16] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[16]),
        .O(araddr_tmp[16]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[17]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[17] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[17]),
        .O(araddr_tmp[17]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[18]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[18] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[18]),
        .O(araddr_tmp[18]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[19]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[19] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[19]),
        .O(araddr_tmp[19]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[20]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[20] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[20]),
        .O(araddr_tmp[20]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[21]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[21] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[21]),
        .O(araddr_tmp[21]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[22]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[22] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[22]),
        .O(araddr_tmp[22]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[23]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[23] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[23]),
        .O(araddr_tmp[23]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[24]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[24] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[24]),
        .O(araddr_tmp[24]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[25]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[25] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[25]),
        .O(araddr_tmp[25]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[26]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[26] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[26]),
        .O(araddr_tmp[26]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[27]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[27] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[27]),
        .O(araddr_tmp[27]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[28]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[28] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[28]),
        .O(araddr_tmp[28]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[29]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[29] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[29]),
        .O(araddr_tmp[29]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[2]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[2] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[2]),
        .O(araddr_tmp[2]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[30]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[30] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[30]),
        .O(araddr_tmp[30]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[31]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[31] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[31]),
        .O(araddr_tmp[31]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[32]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[32] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[32]),
        .O(araddr_tmp[32]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[33]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[33] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[33]),
        .O(araddr_tmp[33]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[34]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[34] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[34]),
        .O(araddr_tmp[34]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[35]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[35] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[35]),
        .O(araddr_tmp[35]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[36]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[36] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[36]),
        .O(araddr_tmp[36]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[37]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[37] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[37]),
        .O(araddr_tmp[37]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[38]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[38] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[38]),
        .O(araddr_tmp[38]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[39]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[39] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[39]),
        .O(araddr_tmp[39]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[3]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[3] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[3]),
        .O(araddr_tmp[3]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[40]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[40] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[40]),
        .O(araddr_tmp[40]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[41]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[41] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[41]),
        .O(araddr_tmp[41]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[42]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[42] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[42]),
        .O(araddr_tmp[42]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[43]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[43] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[43]),
        .O(araddr_tmp[43]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[44]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[44] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[44]),
        .O(araddr_tmp[44]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[45]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[45] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[45]),
        .O(araddr_tmp[45]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[46]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[46] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[46]),
        .O(araddr_tmp[46]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[47]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[47] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[47]),
        .O(araddr_tmp[47]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[48]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[48] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[48]),
        .O(araddr_tmp[48]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[49]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[49] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[49]),
        .O(araddr_tmp[49]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[4]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[4] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[4]),
        .O(araddr_tmp[4]));
  LUT4 #(
    .INIT(16'h9666)) 
    \could_multi_bursts.araddr_buf[4]_i_3 
       (.I0(m_axi_gmem_ARADDR[2]),
        .I1(\could_multi_bursts.arlen_buf_reg[3]_0 [2]),
        .I2(\could_multi_bursts.arlen_buf_reg[3]_0 [1]),
        .I3(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .O(\could_multi_bursts.araddr_buf[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \could_multi_bursts.araddr_buf[4]_i_4 
       (.I0(m_axi_gmem_ARADDR[1]),
        .I1(\could_multi_bursts.arlen_buf_reg[3]_0 [1]),
        .I2(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .O(\could_multi_bursts.araddr_buf[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \could_multi_bursts.araddr_buf[4]_i_5 
       (.I0(m_axi_gmem_ARADDR[0]),
        .I1(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .O(\could_multi_bursts.araddr_buf[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[50]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[50] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[50]),
        .O(araddr_tmp[50]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[51]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[51] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[51]),
        .O(araddr_tmp[51]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[52]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[52] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[52]),
        .O(araddr_tmp[52]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[53]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[53] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[53]),
        .O(araddr_tmp[53]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[54]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[54] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[54]),
        .O(araddr_tmp[54]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[55]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[55] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[55]),
        .O(araddr_tmp[55]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[56]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[56] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[56]),
        .O(araddr_tmp[56]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[57]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[57] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[57]),
        .O(araddr_tmp[57]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[58]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[58] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[58]),
        .O(araddr_tmp[58]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[59]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[59] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[59]),
        .O(araddr_tmp[59]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[5]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[5] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[5]),
        .O(araddr_tmp[5]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[60]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[60] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[60]),
        .O(araddr_tmp[60]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[61]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[61] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[61]),
        .O(araddr_tmp[61]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[62]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[62] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[62]),
        .O(araddr_tmp[62]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[63]_i_2 
       (.I0(\sect_addr_buf_reg_n_0_[63] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[63]),
        .O(araddr_tmp[63]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \could_multi_bursts.araddr_buf[63]_i_3 
       (.I0(\could_multi_bursts.loop_cnt_reg [2]),
        .I1(\could_multi_bursts.loop_cnt_reg [3]),
        .I2(\could_multi_bursts.loop_cnt_reg [0]),
        .I3(\could_multi_bursts.loop_cnt_reg [1]),
        .I4(\could_multi_bursts.loop_cnt_reg [5]),
        .I5(\could_multi_bursts.loop_cnt_reg [4]),
        .O(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[6]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[6] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[6]),
        .O(araddr_tmp[6]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[7]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[7] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[7]),
        .O(araddr_tmp[7]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[8]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[8] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[8]),
        .O(araddr_tmp[8]));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \could_multi_bursts.araddr_buf[8]_i_3 
       (.I0(m_axi_gmem_ARADDR[4]),
        .I1(\could_multi_bursts.arlen_buf_reg[3]_0 [2]),
        .I2(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .I3(\could_multi_bursts.arlen_buf_reg[3]_0 [1]),
        .I4(\could_multi_bursts.arlen_buf_reg[3]_0 [3]),
        .O(\could_multi_bursts.araddr_buf[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h96666666)) 
    \could_multi_bursts.araddr_buf[8]_i_4 
       (.I0(m_axi_gmem_ARADDR[3]),
        .I1(\could_multi_bursts.arlen_buf_reg[3]_0 [3]),
        .I2(\could_multi_bursts.arlen_buf_reg[3]_0 [2]),
        .I3(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .I4(\could_multi_bursts.arlen_buf_reg[3]_0 [1]),
        .O(\could_multi_bursts.araddr_buf[8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.araddr_buf[9]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[9] ),
        .I1(\could_multi_bursts.araddr_buf[63]_i_3_n_0 ),
        .I2(data1[9]),
        .O(araddr_tmp[9]));
  FDRE \could_multi_bursts.araddr_buf_reg[10] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[10]),
        .Q(m_axi_gmem_ARADDR[8]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[11] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[11]),
        .Q(m_axi_gmem_ARADDR[9]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[12] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[12]),
        .Q(m_axi_gmem_ARADDR[10]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[12]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[8]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[12]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[12]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[12]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,m_axi_gmem_ARADDR[8:7]}),
        .O(data1[12:9]),
        .S(m_axi_gmem_ARADDR[10:7]));
  FDRE \could_multi_bursts.araddr_buf_reg[13] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[13]),
        .Q(m_axi_gmem_ARADDR[11]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[14] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[14]),
        .Q(m_axi_gmem_ARADDR[12]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[15] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[15]),
        .Q(m_axi_gmem_ARADDR[13]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[16] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[16]),
        .Q(m_axi_gmem_ARADDR[14]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[16]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[12]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[16]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[16]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[16]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[16:13]),
        .S(m_axi_gmem_ARADDR[14:11]));
  FDRE \could_multi_bursts.araddr_buf_reg[17] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[17]),
        .Q(m_axi_gmem_ARADDR[15]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[18] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[18]),
        .Q(m_axi_gmem_ARADDR[16]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[19] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[19]),
        .Q(m_axi_gmem_ARADDR[17]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[20] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[20]),
        .Q(m_axi_gmem_ARADDR[18]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[20]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[16]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[20]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[20]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[20]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[20:17]),
        .S(m_axi_gmem_ARADDR[18:15]));
  FDRE \could_multi_bursts.araddr_buf_reg[21] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[21]),
        .Q(m_axi_gmem_ARADDR[19]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[22] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[22]),
        .Q(m_axi_gmem_ARADDR[20]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[23] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[23]),
        .Q(m_axi_gmem_ARADDR[21]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[24] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[24]),
        .Q(m_axi_gmem_ARADDR[22]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[24]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[20]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[24]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[24]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[24]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[24:21]),
        .S(m_axi_gmem_ARADDR[22:19]));
  FDRE \could_multi_bursts.araddr_buf_reg[25] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[25]),
        .Q(m_axi_gmem_ARADDR[23]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[26] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[26]),
        .Q(m_axi_gmem_ARADDR[24]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[27] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[27]),
        .Q(m_axi_gmem_ARADDR[25]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[28] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[28]),
        .Q(m_axi_gmem_ARADDR[26]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[28]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[24]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[28]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[28]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[28]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[28:25]),
        .S(m_axi_gmem_ARADDR[26:23]));
  FDRE \could_multi_bursts.araddr_buf_reg[29] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[29]),
        .Q(m_axi_gmem_ARADDR[27]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[2] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[2]),
        .Q(m_axi_gmem_ARADDR[0]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[30] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[30]),
        .Q(m_axi_gmem_ARADDR[28]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[31] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[31]),
        .Q(m_axi_gmem_ARADDR[29]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[32] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[32]),
        .Q(m_axi_gmem_ARADDR[30]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[32]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[28]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[32]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[32]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[32]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[32]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[32:29]),
        .S(m_axi_gmem_ARADDR[30:27]));
  FDRE \could_multi_bursts.araddr_buf_reg[33] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[33]),
        .Q(m_axi_gmem_ARADDR[31]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[34] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[34]),
        .Q(m_axi_gmem_ARADDR[32]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[35] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[35]),
        .Q(m_axi_gmem_ARADDR[33]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[36] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[36]),
        .Q(m_axi_gmem_ARADDR[34]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[36]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[32]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[36]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[36]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[36]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[36]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[36:33]),
        .S(m_axi_gmem_ARADDR[34:31]));
  FDRE \could_multi_bursts.araddr_buf_reg[37] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[37]),
        .Q(m_axi_gmem_ARADDR[35]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[38] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[38]),
        .Q(m_axi_gmem_ARADDR[36]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[39] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[39]),
        .Q(m_axi_gmem_ARADDR[37]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[3] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[3]),
        .Q(m_axi_gmem_ARADDR[1]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[40] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[40]),
        .Q(m_axi_gmem_ARADDR[38]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[40]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[36]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[40]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[40]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[40]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[40]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[40:37]),
        .S(m_axi_gmem_ARADDR[38:35]));
  FDRE \could_multi_bursts.araddr_buf_reg[41] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[41]),
        .Q(m_axi_gmem_ARADDR[39]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[42] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[42]),
        .Q(m_axi_gmem_ARADDR[40]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[43] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[43]),
        .Q(m_axi_gmem_ARADDR[41]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[44] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[44]),
        .Q(m_axi_gmem_ARADDR[42]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[44]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[40]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[44]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[44]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[44]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[44]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[44:41]),
        .S(m_axi_gmem_ARADDR[42:39]));
  FDRE \could_multi_bursts.araddr_buf_reg[45] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[45]),
        .Q(m_axi_gmem_ARADDR[43]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[46] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[46]),
        .Q(m_axi_gmem_ARADDR[44]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[47] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[47]),
        .Q(m_axi_gmem_ARADDR[45]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[48] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[48]),
        .Q(m_axi_gmem_ARADDR[46]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[48]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[44]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[48]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[48]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[48]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[48]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[48:45]),
        .S(m_axi_gmem_ARADDR[46:43]));
  FDRE \could_multi_bursts.araddr_buf_reg[49] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[49]),
        .Q(m_axi_gmem_ARADDR[47]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[4] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[4]),
        .Q(m_axi_gmem_ARADDR[2]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\could_multi_bursts.araddr_buf_reg[4]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[4]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[4]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[4]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({m_axi_gmem_ARADDR[2:0],1'b0}),
        .O({data1[4:2],\NLW_could_multi_bursts.araddr_buf_reg[4]_i_2_O_UNCONNECTED [0]}),
        .S({\could_multi_bursts.araddr_buf[4]_i_3_n_0 ,\could_multi_bursts.araddr_buf[4]_i_4_n_0 ,\could_multi_bursts.araddr_buf[4]_i_5_n_0 ,1'b0}));
  FDRE \could_multi_bursts.araddr_buf_reg[50] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[50]),
        .Q(m_axi_gmem_ARADDR[48]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[51] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[51]),
        .Q(m_axi_gmem_ARADDR[49]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[52] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[52]),
        .Q(m_axi_gmem_ARADDR[50]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[52]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[48]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[52]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[52]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[52]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[52]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[52:49]),
        .S(m_axi_gmem_ARADDR[50:47]));
  FDRE \could_multi_bursts.araddr_buf_reg[53] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[53]),
        .Q(m_axi_gmem_ARADDR[51]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[54] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[54]),
        .Q(m_axi_gmem_ARADDR[52]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[55] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[55]),
        .Q(m_axi_gmem_ARADDR[53]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[56] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[56]),
        .Q(m_axi_gmem_ARADDR[54]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[56]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[52]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[56]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[56]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[56]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[56]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[56:53]),
        .S(m_axi_gmem_ARADDR[54:51]));
  FDRE \could_multi_bursts.araddr_buf_reg[57] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[57]),
        .Q(m_axi_gmem_ARADDR[55]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[58] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[58]),
        .Q(m_axi_gmem_ARADDR[56]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[59] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[59]),
        .Q(m_axi_gmem_ARADDR[57]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[5] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[5]),
        .Q(m_axi_gmem_ARADDR[3]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[60] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[60]),
        .Q(m_axi_gmem_ARADDR[58]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[60]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[56]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[60]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[60]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[60]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[60]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[60:57]),
        .S(m_axi_gmem_ARADDR[58:55]));
  FDRE \could_multi_bursts.araddr_buf_reg[61] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[61]),
        .Q(m_axi_gmem_ARADDR[59]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[62] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[62]),
        .Q(m_axi_gmem_ARADDR[60]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[63] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[63]),
        .Q(m_axi_gmem_ARADDR[61]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[63]_i_4 
       (.CI(\could_multi_bursts.araddr_buf_reg[60]_i_2_n_0 ),
        .CO({\NLW_could_multi_bursts.araddr_buf_reg[63]_i_4_CO_UNCONNECTED [3:2],\could_multi_bursts.araddr_buf_reg[63]_i_4_n_2 ,\could_multi_bursts.araddr_buf_reg[63]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_could_multi_bursts.araddr_buf_reg[63]_i_4_O_UNCONNECTED [3],data1[63:61]}),
        .S({1'b0,m_axi_gmem_ARADDR[61:59]}));
  FDRE \could_multi_bursts.araddr_buf_reg[6] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[6]),
        .Q(m_axi_gmem_ARADDR[4]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[7] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[7]),
        .Q(m_axi_gmem_ARADDR[5]),
        .R(SR));
  FDRE \could_multi_bursts.araddr_buf_reg[8] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[8]),
        .Q(m_axi_gmem_ARADDR[6]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.araddr_buf_reg[8]_i_2 
       (.CI(\could_multi_bursts.araddr_buf_reg[4]_i_2_n_0 ),
        .CO({\could_multi_bursts.araddr_buf_reg[8]_i_2_n_0 ,\could_multi_bursts.araddr_buf_reg[8]_i_2_n_1 ,\could_multi_bursts.araddr_buf_reg[8]_i_2_n_2 ,\could_multi_bursts.araddr_buf_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(m_axi_gmem_ARADDR[6:3]),
        .O(data1[8:5]),
        .S({m_axi_gmem_ARADDR[6:5],\could_multi_bursts.araddr_buf[8]_i_3_n_0 ,\could_multi_bursts.araddr_buf[8]_i_4_n_0 }));
  FDRE \could_multi_bursts.araddr_buf_reg[9] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(araddr_tmp[9]),
        .Q(m_axi_gmem_ARADDR[7]),
        .R(SR));
  FDRE \could_multi_bursts.arlen_buf_reg[0] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_13),
        .D(fifo_rctl_n_10),
        .Q(\could_multi_bursts.arlen_buf_reg[3]_0 [0]),
        .R(SR));
  FDRE \could_multi_bursts.arlen_buf_reg[1] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_13),
        .D(fifo_rctl_n_11),
        .Q(\could_multi_bursts.arlen_buf_reg[3]_0 [1]),
        .R(SR));
  FDRE \could_multi_bursts.arlen_buf_reg[2] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_13),
        .D(fifo_rctl_n_12),
        .Q(\could_multi_bursts.arlen_buf_reg[3]_0 [2]),
        .R(SR));
  FDRE \could_multi_bursts.arlen_buf_reg[3] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_13),
        .D(fifo_rctl_n_14),
        .Q(\could_multi_bursts.arlen_buf_reg[3]_0 [3]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \could_multi_bursts.loop_cnt[0]_i_1__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \could_multi_bursts.loop_cnt[1]_i_1__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \could_multi_bursts.loop_cnt[2]_i_1__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .I2(\could_multi_bursts.loop_cnt_reg [2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \could_multi_bursts.loop_cnt[3]_i_1__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [1]),
        .I1(\could_multi_bursts.loop_cnt_reg [0]),
        .I2(\could_multi_bursts.loop_cnt_reg [2]),
        .I3(\could_multi_bursts.loop_cnt_reg [3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \could_multi_bursts.loop_cnt[4]_i_1__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [2]),
        .I1(\could_multi_bursts.loop_cnt_reg [0]),
        .I2(\could_multi_bursts.loop_cnt_reg [1]),
        .I3(\could_multi_bursts.loop_cnt_reg [3]),
        .I4(\could_multi_bursts.loop_cnt_reg [4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \could_multi_bursts.loop_cnt[5]_i_2__0 
       (.I0(\could_multi_bursts.loop_cnt_reg [3]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .I2(\could_multi_bursts.loop_cnt_reg [0]),
        .I3(\could_multi_bursts.loop_cnt_reg [2]),
        .I4(\could_multi_bursts.loop_cnt_reg [4]),
        .I5(\could_multi_bursts.loop_cnt_reg [5]),
        .O(p_0_in__1[5]));
  FDRE \could_multi_bursts.loop_cnt_reg[0] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[0]),
        .Q(\could_multi_bursts.loop_cnt_reg [0]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.loop_cnt_reg[1] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[1]),
        .Q(\could_multi_bursts.loop_cnt_reg [1]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.loop_cnt_reg[2] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[2]),
        .Q(\could_multi_bursts.loop_cnt_reg [2]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.loop_cnt_reg[3] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[3]),
        .Q(\could_multi_bursts.loop_cnt_reg [3]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.loop_cnt_reg[4] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[4]),
        .Q(\could_multi_bursts.loop_cnt_reg [4]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.loop_cnt_reg[5] 
       (.C(ap_clk),
        .CE(p_13_in),
        .D(p_0_in__1[5]),
        .Q(\could_multi_bursts.loop_cnt_reg [5]),
        .R(fifo_rctl_n_8));
  FDRE \could_multi_bursts.sect_handling_reg 
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_rctl_n_7),
        .Q(\could_multi_bursts.sect_handling_reg_n_0 ),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_2 
       (.I0(rs_rreq_n_134),
        .I1(rs_rreq_n_72),
        .O(\end_addr[13]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_3 
       (.I0(rs_rreq_n_135),
        .I1(rs_rreq_n_73),
        .O(\end_addr[13]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_4 
       (.I0(rs_rreq_n_136),
        .I1(p_1_in[11]),
        .O(\end_addr[13]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_5 
       (.I0(rs_rreq_n_137),
        .I1(p_1_in[10]),
        .O(\end_addr[13]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_2 
       (.I0(rs_rreq_n_130),
        .I1(rs_rreq_n_68),
        .O(\end_addr[17]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_3 
       (.I0(rs_rreq_n_131),
        .I1(rs_rreq_n_69),
        .O(\end_addr[17]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_4 
       (.I0(rs_rreq_n_132),
        .I1(rs_rreq_n_70),
        .O(\end_addr[17]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_5 
       (.I0(rs_rreq_n_133),
        .I1(rs_rreq_n_71),
        .O(\end_addr[17]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_2 
       (.I0(rs_rreq_n_126),
        .I1(rs_rreq_n_64),
        .O(\end_addr[21]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_3 
       (.I0(rs_rreq_n_127),
        .I1(rs_rreq_n_65),
        .O(\end_addr[21]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_4 
       (.I0(rs_rreq_n_128),
        .I1(rs_rreq_n_66),
        .O(\end_addr[21]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_5 
       (.I0(rs_rreq_n_129),
        .I1(rs_rreq_n_67),
        .O(\end_addr[21]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_2 
       (.I0(rs_rreq_n_122),
        .I1(rs_rreq_n_60),
        .O(\end_addr[25]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_3 
       (.I0(rs_rreq_n_123),
        .I1(rs_rreq_n_61),
        .O(\end_addr[25]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_4 
       (.I0(rs_rreq_n_124),
        .I1(rs_rreq_n_62),
        .O(\end_addr[25]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_5 
       (.I0(rs_rreq_n_125),
        .I1(rs_rreq_n_63),
        .O(\end_addr[25]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_2 
       (.I0(rs_rreq_n_118),
        .I1(rs_rreq_n_56),
        .O(\end_addr[29]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_3 
       (.I0(rs_rreq_n_119),
        .I1(rs_rreq_n_57),
        .O(\end_addr[29]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_4 
       (.I0(rs_rreq_n_120),
        .I1(rs_rreq_n_58),
        .O(\end_addr[29]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_5 
       (.I0(rs_rreq_n_121),
        .I1(rs_rreq_n_59),
        .O(\end_addr[29]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[33]_i_2 
       (.I0(rs_rreq_n_116),
        .I1(rs_rreq_n_54),
        .O(\end_addr[33]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[33]_i_3 
       (.I0(rs_rreq_n_117),
        .I1(rs_rreq_n_55),
        .O(\end_addr[33]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_2 
       (.I0(rs_rreq_n_142),
        .I1(p_1_in[5]),
        .O(\end_addr[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_3 
       (.I0(rs_rreq_n_143),
        .I1(p_1_in[4]),
        .O(\end_addr[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_4 
       (.I0(rs_rreq_n_144),
        .I1(p_1_in[3]),
        .O(\end_addr[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_5 
       (.I0(rs_rreq_n_145),
        .I1(p_1_in[2]),
        .O(\end_addr[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_2 
       (.I0(rs_rreq_n_138),
        .I1(p_1_in[9]),
        .O(\end_addr[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_3 
       (.I0(rs_rreq_n_139),
        .I1(p_1_in[8]),
        .O(\end_addr[9]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_4 
       (.I0(rs_rreq_n_140),
        .I1(p_1_in[7]),
        .O(\end_addr[9]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_5 
       (.I0(rs_rreq_n_141),
        .I1(p_1_in[6]),
        .O(\end_addr[9]_i_5_n_0 ));
  FDRE \end_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_201),
        .Q(\end_addr_reg_n_0_[10] ),
        .R(SR));
  FDRE \end_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_200),
        .Q(\end_addr_reg_n_0_[11] ),
        .R(SR));
  FDRE \end_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_199),
        .Q(p_0_in0_in[0]),
        .R(SR));
  FDRE \end_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_198),
        .Q(p_0_in0_in[1]),
        .R(SR));
  FDRE \end_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_197),
        .Q(p_0_in0_in[2]),
        .R(SR));
  FDRE \end_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_196),
        .Q(p_0_in0_in[3]),
        .R(SR));
  FDRE \end_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_195),
        .Q(p_0_in0_in[4]),
        .R(SR));
  FDRE \end_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_194),
        .Q(p_0_in0_in[5]),
        .R(SR));
  FDRE \end_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_193),
        .Q(p_0_in0_in[6]),
        .R(SR));
  FDRE \end_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_192),
        .Q(p_0_in0_in[7]),
        .R(SR));
  FDRE \end_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_191),
        .Q(p_0_in0_in[8]),
        .R(SR));
  FDRE \end_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_190),
        .Q(p_0_in0_in[9]),
        .R(SR));
  FDRE \end_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_189),
        .Q(p_0_in0_in[10]),
        .R(SR));
  FDRE \end_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_188),
        .Q(p_0_in0_in[11]),
        .R(SR));
  FDRE \end_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_187),
        .Q(p_0_in0_in[12]),
        .R(SR));
  FDRE \end_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_186),
        .Q(p_0_in0_in[13]),
        .R(SR));
  FDRE \end_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_185),
        .Q(p_0_in0_in[14]),
        .R(SR));
  FDRE \end_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_184),
        .Q(p_0_in0_in[15]),
        .R(SR));
  FDRE \end_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_183),
        .Q(p_0_in0_in[16]),
        .R(SR));
  FDRE \end_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_182),
        .Q(p_0_in0_in[17]),
        .R(SR));
  FDRE \end_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_209),
        .Q(\end_addr_reg_n_0_[2] ),
        .R(SR));
  FDRE \end_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_181),
        .Q(p_0_in0_in[18]),
        .R(SR));
  FDRE \end_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_180),
        .Q(p_0_in0_in[19]),
        .R(SR));
  FDRE \end_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_179),
        .Q(p_0_in0_in[20]),
        .R(SR));
  FDRE \end_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_178),
        .Q(p_0_in0_in[21]),
        .R(SR));
  FDRE \end_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_177),
        .Q(p_0_in0_in[22]),
        .R(SR));
  FDRE \end_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_176),
        .Q(p_0_in0_in[23]),
        .R(SR));
  FDRE \end_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_175),
        .Q(p_0_in0_in[24]),
        .R(SR));
  FDRE \end_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_174),
        .Q(p_0_in0_in[25]),
        .R(SR));
  FDRE \end_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_173),
        .Q(p_0_in0_in[26]),
        .R(SR));
  FDRE \end_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_172),
        .Q(p_0_in0_in[27]),
        .R(SR));
  FDRE \end_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_208),
        .Q(\end_addr_reg_n_0_[3] ),
        .R(SR));
  FDRE \end_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_171),
        .Q(p_0_in0_in[28]),
        .R(SR));
  FDRE \end_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_170),
        .Q(p_0_in0_in[29]),
        .R(SR));
  FDRE \end_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_169),
        .Q(p_0_in0_in[30]),
        .R(SR));
  FDRE \end_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_168),
        .Q(p_0_in0_in[31]),
        .R(SR));
  FDRE \end_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_167),
        .Q(p_0_in0_in[32]),
        .R(SR));
  FDRE \end_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_166),
        .Q(p_0_in0_in[33]),
        .R(SR));
  FDRE \end_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_165),
        .Q(p_0_in0_in[34]),
        .R(SR));
  FDRE \end_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_164),
        .Q(p_0_in0_in[35]),
        .R(SR));
  FDRE \end_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_163),
        .Q(p_0_in0_in[36]),
        .R(SR));
  FDRE \end_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_162),
        .Q(p_0_in0_in[37]),
        .R(SR));
  FDRE \end_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_207),
        .Q(\end_addr_reg_n_0_[4] ),
        .R(SR));
  FDRE \end_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_161),
        .Q(p_0_in0_in[38]),
        .R(SR));
  FDRE \end_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_160),
        .Q(p_0_in0_in[39]),
        .R(SR));
  FDRE \end_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_159),
        .Q(p_0_in0_in[40]),
        .R(SR));
  FDRE \end_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_158),
        .Q(p_0_in0_in[41]),
        .R(SR));
  FDRE \end_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_157),
        .Q(p_0_in0_in[42]),
        .R(SR));
  FDRE \end_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_156),
        .Q(p_0_in0_in[43]),
        .R(SR));
  FDRE \end_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_155),
        .Q(p_0_in0_in[44]),
        .R(SR));
  FDRE \end_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_154),
        .Q(p_0_in0_in[45]),
        .R(SR));
  FDRE \end_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_153),
        .Q(p_0_in0_in[46]),
        .R(SR));
  FDRE \end_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_152),
        .Q(p_0_in0_in[47]),
        .R(SR));
  FDRE \end_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_206),
        .Q(\end_addr_reg_n_0_[5] ),
        .R(SR));
  FDRE \end_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_151),
        .Q(p_0_in0_in[48]),
        .R(SR));
  FDRE \end_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_150),
        .Q(p_0_in0_in[49]),
        .R(SR));
  FDRE \end_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_149),
        .Q(p_0_in0_in[50]),
        .R(SR));
  FDRE \end_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_148),
        .Q(p_0_in0_in[51]),
        .R(SR));
  FDRE \end_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_205),
        .Q(\end_addr_reg_n_0_[6] ),
        .R(SR));
  FDRE \end_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_204),
        .Q(\end_addr_reg_n_0_[7] ),
        .R(SR));
  FDRE \end_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_203),
        .Q(\end_addr_reg_n_0_[8] ),
        .R(SR));
  FDRE \end_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_202),
        .Q(\end_addr_reg_n_0_[9] ),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_14 fifo_burst
       (.Q(\data_p1_reg[32] [32]),
        .RREADY_Dummy(RREADY_Dummy),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .burst_valid(burst_valid),
        .\could_multi_bursts.last_loop__10 (\could_multi_bursts.last_loop__10 ),
        .din(din),
        .\dout_reg[0] (last_sect_buf_reg_n_0),
        .\dout_reg[0]_0 (\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .\dout_reg[0]_1 (\could_multi_bursts.sect_handling_reg_n_0 ),
        .dout_vld_reg_0(Q),
        .empty_n_reg_0(fifo_burst_n_1),
        .fifo_rctl_ready(fifo_rctl_ready),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .p_13_in(p_13_in),
        .pop(pop_0),
        .push(push),
        .\sect_len_buf_reg[5] (fifo_burst_n_4),
        .\sect_len_buf_reg[8] (fifo_burst_n_3),
        .\sect_len_buf_reg[9] ({\sect_len_buf_reg_n_0_[9] ,\sect_len_buf_reg_n_0_[8] ,\sect_len_buf_reg_n_0_[7] ,\sect_len_buf_reg_n_0_[6] ,\sect_len_buf_reg_n_0_[5] ,\sect_len_buf_reg_n_0_[4] }),
        .\sect_len_buf_reg[9]_0 (\could_multi_bursts.loop_cnt_reg ));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_15 fifo_rctl
       (.CO(last_sect),
        .E(fifo_rctl_n_2),
        .Q(rreq_valid),
        .RBURST_READY_Dummy(RBURST_READY_Dummy),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(fifo_rctl_n_8),
        .ap_rst_n_1(fifo_rctl_n_9),
        .\could_multi_bursts.ARVALID_Dummy_reg (fifo_rctl_n_5),
        .\could_multi_bursts.ARVALID_Dummy_reg_0 (\could_multi_bursts.sect_handling_reg_n_0 ),
        .\could_multi_bursts.ARVALID_Dummy_reg_1 (\could_multi_bursts.ARVALID_Dummy_reg_0 ),
        .\could_multi_bursts.arlen_buf_reg[3] ({\sect_len_buf_reg_n_0_[3] ,\sect_len_buf_reg_n_0_[2] ,\sect_len_buf_reg_n_0_[1] ,\sect_len_buf_reg_n_0_[0] }),
        .\could_multi_bursts.last_loop__10 (\could_multi_bursts.last_loop__10 ),
        .fifo_rctl_ready(fifo_rctl_ready),
        .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
        .m_axi_gmem_ARREADY_0(fifo_rctl_n_7),
        .m_axi_gmem_ARREADY_1(fifo_rctl_n_10),
        .m_axi_gmem_ARREADY_2(fifo_rctl_n_11),
        .m_axi_gmem_ARREADY_3(fifo_rctl_n_12),
        .m_axi_gmem_ARREADY_4(fifo_rctl_n_13),
        .m_axi_gmem_ARREADY_5(fifo_rctl_n_14),
        .next_rreq(next_rreq),
        .p_13_in(p_13_in),
        .p_14_in(p_14_in),
        .rreq_handling_reg(fifo_rctl_n_6),
        .rreq_handling_reg_0(rreq_handling_reg_n_0),
        .\sect_addr_buf_reg[2] (first_sect),
        .\sect_len_buf_reg[9] (fifo_burst_n_3),
        .\sect_len_buf_reg[9]_0 (fifo_burst_n_4));
  CARRY4 first_sect_carry
       (.CI(1'b0),
        .CO({first_sect_carry_n_0,first_sect_carry_n_1,first_sect_carry_n_2,first_sect_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry_O_UNCONNECTED[3:0]),
        .S({first_sect_carry_i_1__0_n_0,first_sect_carry_i_2__0_n_0,first_sect_carry_i_3__0_n_0,first_sect_carry_i_4__0_n_0}));
  CARRY4 first_sect_carry__0
       (.CI(first_sect_carry_n_0),
        .CO({first_sect_carry__0_n_0,first_sect_carry__0_n_1,first_sect_carry__0_n_2,first_sect_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__0_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__0_i_1__0_n_0,first_sect_carry__0_i_2__0_n_0,first_sect_carry__0_i_3__0_n_0,first_sect_carry__0_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_1__0
       (.I0(\sect_cnt_reg_n_0_[22] ),
        .I1(p_0_in[22]),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .I3(p_0_in[21]),
        .I4(p_0_in[23]),
        .I5(\sect_cnt_reg_n_0_[23] ),
        .O(first_sect_carry__0_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_2__0
       (.I0(\sect_cnt_reg_n_0_[19] ),
        .I1(p_0_in[19]),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .I3(p_0_in[18]),
        .I4(p_0_in[20]),
        .I5(\sect_cnt_reg_n_0_[20] ),
        .O(first_sect_carry__0_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_3__0
       (.I0(\sect_cnt_reg_n_0_[16] ),
        .I1(p_0_in[16]),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .I3(p_0_in[15]),
        .I4(p_0_in[17]),
        .I5(\sect_cnt_reg_n_0_[17] ),
        .O(first_sect_carry__0_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_4__0
       (.I0(\sect_cnt_reg_n_0_[13] ),
        .I1(p_0_in[13]),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .I3(p_0_in[12]),
        .I4(p_0_in[14]),
        .I5(\sect_cnt_reg_n_0_[14] ),
        .O(first_sect_carry__0_i_4__0_n_0));
  CARRY4 first_sect_carry__1
       (.CI(first_sect_carry__0_n_0),
        .CO({first_sect_carry__1_n_0,first_sect_carry__1_n_1,first_sect_carry__1_n_2,first_sect_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__1_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__1_i_1__0_n_0,first_sect_carry__1_i_2__0_n_0,first_sect_carry__1_i_3__0_n_0,first_sect_carry__1_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_1__0
       (.I0(\sect_cnt_reg_n_0_[34] ),
        .I1(p_0_in[34]),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .I3(p_0_in[33]),
        .I4(p_0_in[35]),
        .I5(\sect_cnt_reg_n_0_[35] ),
        .O(first_sect_carry__1_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_2__0
       (.I0(\sect_cnt_reg_n_0_[31] ),
        .I1(p_0_in[31]),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .I3(p_0_in[30]),
        .I4(p_0_in[32]),
        .I5(\sect_cnt_reg_n_0_[32] ),
        .O(first_sect_carry__1_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_3__0
       (.I0(\sect_cnt_reg_n_0_[28] ),
        .I1(p_0_in[28]),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .I3(p_0_in[27]),
        .I4(p_0_in[29]),
        .I5(\sect_cnt_reg_n_0_[29] ),
        .O(first_sect_carry__1_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_4__0
       (.I0(\sect_cnt_reg_n_0_[25] ),
        .I1(p_0_in[25]),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .I3(p_0_in[24]),
        .I4(p_0_in[26]),
        .I5(\sect_cnt_reg_n_0_[26] ),
        .O(first_sect_carry__1_i_4__0_n_0));
  CARRY4 first_sect_carry__2
       (.CI(first_sect_carry__1_n_0),
        .CO({first_sect_carry__2_n_0,first_sect_carry__2_n_1,first_sect_carry__2_n_2,first_sect_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__2_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__2_i_1__0_n_0,first_sect_carry__2_i_2__0_n_0,first_sect_carry__2_i_3__0_n_0,first_sect_carry__2_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_1__0
       (.I0(\sect_cnt_reg_n_0_[46] ),
        .I1(p_0_in[46]),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .I3(p_0_in[45]),
        .I4(p_0_in[47]),
        .I5(\sect_cnt_reg_n_0_[47] ),
        .O(first_sect_carry__2_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_2__0
       (.I0(\sect_cnt_reg_n_0_[43] ),
        .I1(p_0_in[43]),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .I3(p_0_in[42]),
        .I4(p_0_in[44]),
        .I5(\sect_cnt_reg_n_0_[44] ),
        .O(first_sect_carry__2_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_3__0
       (.I0(\sect_cnt_reg_n_0_[40] ),
        .I1(p_0_in[40]),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .I3(p_0_in[39]),
        .I4(p_0_in[41]),
        .I5(\sect_cnt_reg_n_0_[41] ),
        .O(first_sect_carry__2_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_4__0
       (.I0(\sect_cnt_reg_n_0_[37] ),
        .I1(p_0_in[37]),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .I3(p_0_in[36]),
        .I4(p_0_in[38]),
        .I5(\sect_cnt_reg_n_0_[38] ),
        .O(first_sect_carry__2_i_4__0_n_0));
  CARRY4 first_sect_carry__3
       (.CI(first_sect_carry__2_n_0),
        .CO({NLW_first_sect_carry__3_CO_UNCONNECTED[3:2],first_sect,first_sect_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__3_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,first_sect_carry__3_i_1__0_n_0,first_sect_carry__3_i_2__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    first_sect_carry__3_i_1__0
       (.I0(p_0_in[51]),
        .I1(\sect_cnt_reg_n_0_[51] ),
        .O(first_sect_carry__3_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__3_i_2__0
       (.I0(\sect_cnt_reg_n_0_[49] ),
        .I1(p_0_in[49]),
        .I2(\sect_cnt_reg_n_0_[48] ),
        .I3(p_0_in[48]),
        .I4(p_0_in[50]),
        .I5(\sect_cnt_reg_n_0_[50] ),
        .O(first_sect_carry__3_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_1__0
       (.I0(\sect_cnt_reg_n_0_[10] ),
        .I1(p_0_in[10]),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .I3(p_0_in[9]),
        .I4(p_0_in[11]),
        .I5(\sect_cnt_reg_n_0_[11] ),
        .O(first_sect_carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_2__0
       (.I0(\sect_cnt_reg_n_0_[7] ),
        .I1(p_0_in[7]),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .I3(p_0_in[6]),
        .I4(p_0_in[8]),
        .I5(\sect_cnt_reg_n_0_[8] ),
        .O(first_sect_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_3__0
       (.I0(\sect_cnt_reg_n_0_[4] ),
        .I1(p_0_in[4]),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .I3(p_0_in[3]),
        .I4(p_0_in[5]),
        .I5(\sect_cnt_reg_n_0_[5] ),
        .O(first_sect_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_4__0
       (.I0(\sect_cnt_reg_n_0_[1] ),
        .I1(p_0_in[1]),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(\sect_cnt_reg_n_0_[2] ),
        .O(first_sect_carry_i_4__0_n_0));
  FDRE last_sect_buf_reg
       (.C(ap_clk),
        .CE(p_14_in),
        .D(last_sect),
        .Q(last_sect_buf_reg_n_0),
        .R(SR));
  CARRY4 last_sect_carry
       (.CI(1'b0),
        .CO({last_sect_carry_n_0,last_sect_carry_n_1,last_sect_carry_n_2,last_sect_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry_O_UNCONNECTED[3:0]),
        .S({last_sect_carry_i_1__0_n_0,last_sect_carry_i_2__0_n_0,last_sect_carry_i_3__0_n_0,last_sect_carry_i_4__0_n_0}));
  CARRY4 last_sect_carry__0
       (.CI(last_sect_carry_n_0),
        .CO({last_sect_carry__0_n_0,last_sect_carry__0_n_1,last_sect_carry__0_n_2,last_sect_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__0_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__0_i_1__0_n_0,last_sect_carry__0_i_2__0_n_0,last_sect_carry__0_i_3__0_n_0,last_sect_carry__0_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_1__0
       (.I0(\sect_cnt_reg_n_0_[22] ),
        .I1(p_0_in0_in[22]),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .I3(p_0_in0_in[21]),
        .I4(\sect_cnt_reg_n_0_[23] ),
        .I5(p_0_in0_in[23]),
        .O(last_sect_carry__0_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_2__0
       (.I0(\sect_cnt_reg_n_0_[19] ),
        .I1(p_0_in0_in[19]),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .I3(p_0_in0_in[18]),
        .I4(\sect_cnt_reg_n_0_[20] ),
        .I5(p_0_in0_in[20]),
        .O(last_sect_carry__0_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_3__0
       (.I0(\sect_cnt_reg_n_0_[16] ),
        .I1(p_0_in0_in[16]),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .I3(p_0_in0_in[15]),
        .I4(\sect_cnt_reg_n_0_[17] ),
        .I5(p_0_in0_in[17]),
        .O(last_sect_carry__0_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_4__0
       (.I0(\sect_cnt_reg_n_0_[13] ),
        .I1(p_0_in0_in[13]),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .I3(p_0_in0_in[12]),
        .I4(\sect_cnt_reg_n_0_[14] ),
        .I5(p_0_in0_in[14]),
        .O(last_sect_carry__0_i_4__0_n_0));
  CARRY4 last_sect_carry__1
       (.CI(last_sect_carry__0_n_0),
        .CO({last_sect_carry__1_n_0,last_sect_carry__1_n_1,last_sect_carry__1_n_2,last_sect_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__1_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__1_i_1__0_n_0,last_sect_carry__1_i_2__0_n_0,last_sect_carry__1_i_3__0_n_0,last_sect_carry__1_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_1__0
       (.I0(\sect_cnt_reg_n_0_[34] ),
        .I1(p_0_in0_in[34]),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .I3(p_0_in0_in[33]),
        .I4(\sect_cnt_reg_n_0_[35] ),
        .I5(p_0_in0_in[35]),
        .O(last_sect_carry__1_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_2__0
       (.I0(\sect_cnt_reg_n_0_[31] ),
        .I1(p_0_in0_in[31]),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .I3(p_0_in0_in[30]),
        .I4(\sect_cnt_reg_n_0_[32] ),
        .I5(p_0_in0_in[32]),
        .O(last_sect_carry__1_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_3__0
       (.I0(\sect_cnt_reg_n_0_[28] ),
        .I1(p_0_in0_in[28]),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .I3(p_0_in0_in[27]),
        .I4(\sect_cnt_reg_n_0_[29] ),
        .I5(p_0_in0_in[29]),
        .O(last_sect_carry__1_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_4__0
       (.I0(\sect_cnt_reg_n_0_[25] ),
        .I1(p_0_in0_in[25]),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .I3(p_0_in0_in[24]),
        .I4(\sect_cnt_reg_n_0_[26] ),
        .I5(p_0_in0_in[26]),
        .O(last_sect_carry__1_i_4__0_n_0));
  CARRY4 last_sect_carry__2
       (.CI(last_sect_carry__1_n_0),
        .CO({last_sect_carry__2_n_0,last_sect_carry__2_n_1,last_sect_carry__2_n_2,last_sect_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__2_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__2_i_1__0_n_0,last_sect_carry__2_i_2__0_n_0,last_sect_carry__2_i_3__0_n_0,last_sect_carry__2_i_4__0_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_1__0
       (.I0(\sect_cnt_reg_n_0_[46] ),
        .I1(p_0_in0_in[46]),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .I3(p_0_in0_in[45]),
        .I4(\sect_cnt_reg_n_0_[47] ),
        .I5(p_0_in0_in[47]),
        .O(last_sect_carry__2_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_2__0
       (.I0(\sect_cnt_reg_n_0_[43] ),
        .I1(p_0_in0_in[43]),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .I3(p_0_in0_in[42]),
        .I4(\sect_cnt_reg_n_0_[44] ),
        .I5(p_0_in0_in[44]),
        .O(last_sect_carry__2_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_3__0
       (.I0(\sect_cnt_reg_n_0_[40] ),
        .I1(p_0_in0_in[40]),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .I3(p_0_in0_in[39]),
        .I4(\sect_cnt_reg_n_0_[41] ),
        .I5(p_0_in0_in[41]),
        .O(last_sect_carry__2_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_4__0
       (.I0(\sect_cnt_reg_n_0_[37] ),
        .I1(p_0_in0_in[37]),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .I3(p_0_in0_in[36]),
        .I4(\sect_cnt_reg_n_0_[38] ),
        .I5(p_0_in0_in[38]),
        .O(last_sect_carry__2_i_4__0_n_0));
  CARRY4 last_sect_carry__3
       (.CI(last_sect_carry__2_n_0),
        .CO({NLW_last_sect_carry__3_CO_UNCONNECTED[3:2],last_sect,last_sect_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__3_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,rs_rreq_n_146,rs_rreq_n_147}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_1__0
       (.I0(\sect_cnt_reg_n_0_[10] ),
        .I1(p_0_in0_in[10]),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .I3(p_0_in0_in[9]),
        .I4(\sect_cnt_reg_n_0_[11] ),
        .I5(p_0_in0_in[11]),
        .O(last_sect_carry_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_2__0
       (.I0(\sect_cnt_reg_n_0_[7] ),
        .I1(p_0_in0_in[7]),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .I3(p_0_in0_in[6]),
        .I4(\sect_cnt_reg_n_0_[8] ),
        .I5(p_0_in0_in[8]),
        .O(last_sect_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_3__0
       (.I0(\sect_cnt_reg_n_0_[4] ),
        .I1(p_0_in0_in[4]),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .I3(p_0_in0_in[3]),
        .I4(\sect_cnt_reg_n_0_[5] ),
        .I5(p_0_in0_in[5]),
        .O(last_sect_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_4__0
       (.I0(\sect_cnt_reg_n_0_[1] ),
        .I1(p_0_in0_in[1]),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .I3(p_0_in0_in[0]),
        .I4(\sect_cnt_reg_n_0_[2] ),
        .I5(p_0_in0_in[2]),
        .O(last_sect_carry_i_4__0_n_0));
  FDRE rreq_handling_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_rctl_n_6),
        .Q(rreq_handling_reg_n_0),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized2 rs_rdata
       (.Q(Q),
        .RREADY_Dummy(RREADY_Dummy),
        .SR(SR),
        .ap_clk(ap_clk),
        .burst_valid(burst_valid),
        .\data_p1_reg[32]_0 (\data_p1_reg[32] ),
        .\data_p2_reg[32]_0 (\data_p2_reg[32] ),
        .\dout_reg[0] (fifo_burst_n_1),
        .mOutPtr18_out(mOutPtr18_out),
        .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
        .pop(pop),
        .pop_0(pop_0),
        .s_ready_t_reg_0(s_ready_t_reg));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice_16 rs_rreq
       (.ARVALID_Dummy(ARVALID_Dummy),
        .D({rs_rreq_n_2,rs_rreq_n_3,rs_rreq_n_4,rs_rreq_n_5,rs_rreq_n_6,rs_rreq_n_7,rs_rreq_n_8,rs_rreq_n_9,rs_rreq_n_10,rs_rreq_n_11,rs_rreq_n_12,rs_rreq_n_13,rs_rreq_n_14,rs_rreq_n_15,rs_rreq_n_16,rs_rreq_n_17,rs_rreq_n_18,rs_rreq_n_19,rs_rreq_n_20,rs_rreq_n_21,rs_rreq_n_22,rs_rreq_n_23,rs_rreq_n_24,rs_rreq_n_25,rs_rreq_n_26,rs_rreq_n_27,rs_rreq_n_28,rs_rreq_n_29,rs_rreq_n_30,rs_rreq_n_31,rs_rreq_n_32,rs_rreq_n_33,rs_rreq_n_34,rs_rreq_n_35,rs_rreq_n_36,rs_rreq_n_37,rs_rreq_n_38,rs_rreq_n_39,rs_rreq_n_40,rs_rreq_n_41,rs_rreq_n_42,rs_rreq_n_43,rs_rreq_n_44,rs_rreq_n_45,rs_rreq_n_46,rs_rreq_n_47,rs_rreq_n_48,rs_rreq_n_49,rs_rreq_n_50,rs_rreq_n_51,rs_rreq_n_52,rs_rreq_n_53}),
        .E(E),
        .Q(rreq_valid),
        .S({rs_rreq_n_146,rs_rreq_n_147}),
        .SR(SR),
        .ap_clk(ap_clk),
        .\data_p1_reg[63]_0 ({rs_rreq_n_148,rs_rreq_n_149,rs_rreq_n_150,rs_rreq_n_151,rs_rreq_n_152,rs_rreq_n_153,rs_rreq_n_154,rs_rreq_n_155,rs_rreq_n_156,rs_rreq_n_157,rs_rreq_n_158,rs_rreq_n_159,rs_rreq_n_160,rs_rreq_n_161,rs_rreq_n_162,rs_rreq_n_163,rs_rreq_n_164,rs_rreq_n_165,rs_rreq_n_166,rs_rreq_n_167,rs_rreq_n_168,rs_rreq_n_169,rs_rreq_n_170,rs_rreq_n_171,rs_rreq_n_172,rs_rreq_n_173,rs_rreq_n_174,rs_rreq_n_175,rs_rreq_n_176,rs_rreq_n_177,rs_rreq_n_178,rs_rreq_n_179,rs_rreq_n_180,rs_rreq_n_181,rs_rreq_n_182,rs_rreq_n_183,rs_rreq_n_184,rs_rreq_n_185,rs_rreq_n_186,rs_rreq_n_187,rs_rreq_n_188,rs_rreq_n_189,rs_rreq_n_190,rs_rreq_n_191,rs_rreq_n_192,rs_rreq_n_193,rs_rreq_n_194,rs_rreq_n_195,rs_rreq_n_196,rs_rreq_n_197,rs_rreq_n_198,rs_rreq_n_199,rs_rreq_n_200,rs_rreq_n_201,rs_rreq_n_202,rs_rreq_n_203,rs_rreq_n_204,rs_rreq_n_205,rs_rreq_n_206,rs_rreq_n_207,rs_rreq_n_208,rs_rreq_n_209}),
        .\data_p1_reg[95]_0 ({rs_rreq_n_54,rs_rreq_n_55,rs_rreq_n_56,rs_rreq_n_57,rs_rreq_n_58,rs_rreq_n_59,rs_rreq_n_60,rs_rreq_n_61,rs_rreq_n_62,rs_rreq_n_63,rs_rreq_n_64,rs_rreq_n_65,rs_rreq_n_66,rs_rreq_n_67,rs_rreq_n_68,rs_rreq_n_69,rs_rreq_n_70,rs_rreq_n_71,rs_rreq_n_72,rs_rreq_n_73,p_1_in,rs_rreq_n_84,rs_rreq_n_85,rs_rreq_n_86,rs_rreq_n_87,rs_rreq_n_88,rs_rreq_n_89,rs_rreq_n_90,rs_rreq_n_91,rs_rreq_n_92,rs_rreq_n_93,rs_rreq_n_94,rs_rreq_n_95,rs_rreq_n_96,rs_rreq_n_97,rs_rreq_n_98,rs_rreq_n_99,rs_rreq_n_100,rs_rreq_n_101,rs_rreq_n_102,rs_rreq_n_103,rs_rreq_n_104,rs_rreq_n_105,rs_rreq_n_106,rs_rreq_n_107,rs_rreq_n_108,rs_rreq_n_109,rs_rreq_n_110,rs_rreq_n_111,rs_rreq_n_112,rs_rreq_n_113,rs_rreq_n_114,rs_rreq_n_115,rs_rreq_n_116,rs_rreq_n_117,rs_rreq_n_118,rs_rreq_n_119,rs_rreq_n_120,rs_rreq_n_121,rs_rreq_n_122,rs_rreq_n_123,rs_rreq_n_124,rs_rreq_n_125,rs_rreq_n_126,rs_rreq_n_127,rs_rreq_n_128,rs_rreq_n_129,rs_rreq_n_130,rs_rreq_n_131,rs_rreq_n_132,rs_rreq_n_133,rs_rreq_n_134,rs_rreq_n_135,rs_rreq_n_136,rs_rreq_n_137,rs_rreq_n_138,rs_rreq_n_139,rs_rreq_n_140,rs_rreq_n_141,rs_rreq_n_142,rs_rreq_n_143,rs_rreq_n_144,rs_rreq_n_145}),
        .\data_p2_reg[95]_0 (D),
        .\end_addr_reg[13] ({\end_addr[13]_i_2_n_0 ,\end_addr[13]_i_3_n_0 ,\end_addr[13]_i_4_n_0 ,\end_addr[13]_i_5_n_0 }),
        .\end_addr_reg[17] ({\end_addr[17]_i_2_n_0 ,\end_addr[17]_i_3_n_0 ,\end_addr[17]_i_4_n_0 ,\end_addr[17]_i_5_n_0 }),
        .\end_addr_reg[21] ({\end_addr[21]_i_2_n_0 ,\end_addr[21]_i_3_n_0 ,\end_addr[21]_i_4_n_0 ,\end_addr[21]_i_5_n_0 }),
        .\end_addr_reg[25] ({\end_addr[25]_i_2_n_0 ,\end_addr[25]_i_3_n_0 ,\end_addr[25]_i_4_n_0 ,\end_addr[25]_i_5_n_0 }),
        .\end_addr_reg[29] ({\end_addr[29]_i_2_n_0 ,\end_addr[29]_i_3_n_0 ,\end_addr[29]_i_4_n_0 ,\end_addr[29]_i_5_n_0 }),
        .\end_addr_reg[33] ({\end_addr[33]_i_2_n_0 ,\end_addr[33]_i_3_n_0 }),
        .\end_addr_reg[5] ({\end_addr[5]_i_2_n_0 ,\end_addr[5]_i_3_n_0 ,\end_addr[5]_i_4_n_0 ,\end_addr[5]_i_5_n_0 }),
        .\end_addr_reg[9] ({\end_addr[9]_i_2_n_0 ,\end_addr[9]_i_3_n_0 ,\end_addr[9]_i_4_n_0 ,\end_addr[9]_i_5_n_0 }),
        .last_sect_buf_reg({\sect_cnt_reg_n_0_[51] ,\sect_cnt_reg_n_0_[50] ,\sect_cnt_reg_n_0_[49] ,\sect_cnt_reg_n_0_[48] ,\sect_cnt_reg_n_0_[0] }),
        .last_sect_buf_reg_0(p_0_in0_in[51:48]),
        .next_rreq(next_rreq),
        .s_ready_t_reg_0(ARREADY_Dummy),
        .sect_cnt0(sect_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[10]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[10] ),
        .O(sect_addr[10]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[11]_i_2__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[11] ),
        .O(sect_addr[11]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[12]_i_1__0 
       (.I0(p_0_in[0]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .O(sect_addr[12]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[13]_i_1__0 
       (.I0(p_0_in[1]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[1] ),
        .O(sect_addr[13]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[14]_i_1__0 
       (.I0(p_0_in[2]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[2] ),
        .O(sect_addr[14]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[15]_i_1__0 
       (.I0(p_0_in[3]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .O(sect_addr[15]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[16]_i_1__0 
       (.I0(p_0_in[4]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[4] ),
        .O(sect_addr[16]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[17]_i_1__0 
       (.I0(p_0_in[5]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[5] ),
        .O(sect_addr[17]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[18]_i_1__0 
       (.I0(p_0_in[6]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .O(sect_addr[18]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[19]_i_1__0 
       (.I0(p_0_in[7]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[7] ),
        .O(sect_addr[19]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[20]_i_1__0 
       (.I0(p_0_in[8]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[8] ),
        .O(sect_addr[20]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[21]_i_1__0 
       (.I0(p_0_in[9]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .O(sect_addr[21]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[22]_i_1__0 
       (.I0(p_0_in[10]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[10] ),
        .O(sect_addr[22]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[23]_i_1__0 
       (.I0(p_0_in[11]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[11] ),
        .O(sect_addr[23]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[24]_i_1__0 
       (.I0(p_0_in[12]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .O(sect_addr[24]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[25]_i_1__0 
       (.I0(p_0_in[13]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[13] ),
        .O(sect_addr[25]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[26]_i_1__0 
       (.I0(p_0_in[14]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[14] ),
        .O(sect_addr[26]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[27]_i_1__0 
       (.I0(p_0_in[15]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .O(sect_addr[27]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[28]_i_1__0 
       (.I0(p_0_in[16]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[16] ),
        .O(sect_addr[28]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[29]_i_1__0 
       (.I0(p_0_in[17]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[17] ),
        .O(sect_addr[29]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[2]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[2] ),
        .O(sect_addr[2]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[30]_i_1__0 
       (.I0(p_0_in[18]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .O(sect_addr[30]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[31]_i_1__0 
       (.I0(p_0_in[19]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[19] ),
        .O(sect_addr[31]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[32]_i_1__0 
       (.I0(p_0_in[20]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[20] ),
        .O(sect_addr[32]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[33]_i_1__0 
       (.I0(p_0_in[21]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .O(sect_addr[33]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[34]_i_1__0 
       (.I0(p_0_in[22]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[22] ),
        .O(sect_addr[34]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[35]_i_1__0 
       (.I0(p_0_in[23]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[23] ),
        .O(sect_addr[35]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[36]_i_1__0 
       (.I0(p_0_in[24]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .O(sect_addr[36]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[37]_i_1__0 
       (.I0(p_0_in[25]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[25] ),
        .O(sect_addr[37]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[38]_i_1__0 
       (.I0(p_0_in[26]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[26] ),
        .O(sect_addr[38]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[39]_i_1__0 
       (.I0(p_0_in[27]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .O(sect_addr[39]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[3]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[3] ),
        .O(sect_addr[3]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[40]_i_1__0 
       (.I0(p_0_in[28]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[28] ),
        .O(sect_addr[40]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[41]_i_1__0 
       (.I0(p_0_in[29]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[29] ),
        .O(sect_addr[41]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[42]_i_1__0 
       (.I0(p_0_in[30]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .O(sect_addr[42]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[43]_i_1__0 
       (.I0(p_0_in[31]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[31] ),
        .O(sect_addr[43]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[44]_i_1__0 
       (.I0(p_0_in[32]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[32] ),
        .O(sect_addr[44]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[45]_i_1__0 
       (.I0(p_0_in[33]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .O(sect_addr[45]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[46]_i_1__0 
       (.I0(p_0_in[34]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[34] ),
        .O(sect_addr[46]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[47]_i_1__0 
       (.I0(p_0_in[35]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[35] ),
        .O(sect_addr[47]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[48]_i_1__0 
       (.I0(p_0_in[36]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .O(sect_addr[48]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[49]_i_1__0 
       (.I0(p_0_in[37]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[37] ),
        .O(sect_addr[49]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[4]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[4] ),
        .O(sect_addr[4]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[50]_i_1__0 
       (.I0(p_0_in[38]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[38] ),
        .O(sect_addr[50]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[51]_i_1__0 
       (.I0(p_0_in[39]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .O(sect_addr[51]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[52]_i_1__0 
       (.I0(p_0_in[40]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[40] ),
        .O(sect_addr[52]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[53]_i_1__0 
       (.I0(p_0_in[41]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[41] ),
        .O(sect_addr[53]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[54]_i_1__0 
       (.I0(p_0_in[42]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .O(sect_addr[54]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[55]_i_1__0 
       (.I0(p_0_in[43]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[43] ),
        .O(sect_addr[55]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[56]_i_1__0 
       (.I0(p_0_in[44]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[44] ),
        .O(sect_addr[56]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[57]_i_1__0 
       (.I0(p_0_in[45]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .O(sect_addr[57]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[58]_i_1__0 
       (.I0(p_0_in[46]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[46] ),
        .O(sect_addr[58]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[59]_i_1__0 
       (.I0(p_0_in[47]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[47] ),
        .O(sect_addr[59]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[5]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[5] ),
        .O(sect_addr[5]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[60]_i_1__0 
       (.I0(p_0_in[48]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[48] ),
        .O(sect_addr[60]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[61]_i_1__0 
       (.I0(p_0_in[49]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[49] ),
        .O(sect_addr[61]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[62]_i_1__0 
       (.I0(p_0_in[50]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[50] ),
        .O(sect_addr[62]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[63]_i_1__0 
       (.I0(p_0_in[51]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[51] ),
        .O(sect_addr[63]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[6]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[6] ),
        .O(sect_addr[6]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[7]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[7] ),
        .O(sect_addr[7]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[8]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[8] ),
        .O(sect_addr[8]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[9]_i_1__0 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[9] ),
        .O(sect_addr[9]));
  FDRE \sect_addr_buf_reg[10] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[10]),
        .Q(\sect_addr_buf_reg_n_0_[10] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[11] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[11]),
        .Q(\sect_addr_buf_reg_n_0_[11] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[12] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[12]),
        .Q(\sect_addr_buf_reg_n_0_[12] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[13] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[13]),
        .Q(\sect_addr_buf_reg_n_0_[13] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[14] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[14]),
        .Q(\sect_addr_buf_reg_n_0_[14] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[15] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[15]),
        .Q(\sect_addr_buf_reg_n_0_[15] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[16] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[16]),
        .Q(\sect_addr_buf_reg_n_0_[16] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[17] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[17]),
        .Q(\sect_addr_buf_reg_n_0_[17] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[18] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[18]),
        .Q(\sect_addr_buf_reg_n_0_[18] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[19] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[19]),
        .Q(\sect_addr_buf_reg_n_0_[19] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[20] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[20]),
        .Q(\sect_addr_buf_reg_n_0_[20] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[21] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[21]),
        .Q(\sect_addr_buf_reg_n_0_[21] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[22] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[22]),
        .Q(\sect_addr_buf_reg_n_0_[22] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[23] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[23]),
        .Q(\sect_addr_buf_reg_n_0_[23] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[24] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[24]),
        .Q(\sect_addr_buf_reg_n_0_[24] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[25] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[25]),
        .Q(\sect_addr_buf_reg_n_0_[25] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[26] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[26]),
        .Q(\sect_addr_buf_reg_n_0_[26] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[27] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[27]),
        .Q(\sect_addr_buf_reg_n_0_[27] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[28] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[28]),
        .Q(\sect_addr_buf_reg_n_0_[28] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[29] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[29]),
        .Q(\sect_addr_buf_reg_n_0_[29] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[2] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[2]),
        .Q(\sect_addr_buf_reg_n_0_[2] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[30] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[30]),
        .Q(\sect_addr_buf_reg_n_0_[30] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[31] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[31]),
        .Q(\sect_addr_buf_reg_n_0_[31] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[32] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[32]),
        .Q(\sect_addr_buf_reg_n_0_[32] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[33] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[33]),
        .Q(\sect_addr_buf_reg_n_0_[33] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[34] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[34]),
        .Q(\sect_addr_buf_reg_n_0_[34] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[35] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[35]),
        .Q(\sect_addr_buf_reg_n_0_[35] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[36] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[36]),
        .Q(\sect_addr_buf_reg_n_0_[36] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[37] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[37]),
        .Q(\sect_addr_buf_reg_n_0_[37] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[38] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[38]),
        .Q(\sect_addr_buf_reg_n_0_[38] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[39] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[39]),
        .Q(\sect_addr_buf_reg_n_0_[39] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[3] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[3]),
        .Q(\sect_addr_buf_reg_n_0_[3] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[40] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[40]),
        .Q(\sect_addr_buf_reg_n_0_[40] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[41] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[41]),
        .Q(\sect_addr_buf_reg_n_0_[41] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[42] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[42]),
        .Q(\sect_addr_buf_reg_n_0_[42] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[43] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[43]),
        .Q(\sect_addr_buf_reg_n_0_[43] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[44] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[44]),
        .Q(\sect_addr_buf_reg_n_0_[44] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[45] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[45]),
        .Q(\sect_addr_buf_reg_n_0_[45] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[46] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[46]),
        .Q(\sect_addr_buf_reg_n_0_[46] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[47] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[47]),
        .Q(\sect_addr_buf_reg_n_0_[47] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[48] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[48]),
        .Q(\sect_addr_buf_reg_n_0_[48] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[49] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[49]),
        .Q(\sect_addr_buf_reg_n_0_[49] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[4] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[4]),
        .Q(\sect_addr_buf_reg_n_0_[4] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[50] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[50]),
        .Q(\sect_addr_buf_reg_n_0_[50] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[51] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[51]),
        .Q(\sect_addr_buf_reg_n_0_[51] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[52] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[52]),
        .Q(\sect_addr_buf_reg_n_0_[52] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[53] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[53]),
        .Q(\sect_addr_buf_reg_n_0_[53] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[54] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[54]),
        .Q(\sect_addr_buf_reg_n_0_[54] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[55] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[55]),
        .Q(\sect_addr_buf_reg_n_0_[55] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[56] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[56]),
        .Q(\sect_addr_buf_reg_n_0_[56] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[57] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[57]),
        .Q(\sect_addr_buf_reg_n_0_[57] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[58] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[58]),
        .Q(\sect_addr_buf_reg_n_0_[58] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[59] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[59]),
        .Q(\sect_addr_buf_reg_n_0_[59] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[5] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[5]),
        .Q(\sect_addr_buf_reg_n_0_[5] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[60] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[60]),
        .Q(\sect_addr_buf_reg_n_0_[60] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[61] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[61]),
        .Q(\sect_addr_buf_reg_n_0_[61] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[62] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[62]),
        .Q(\sect_addr_buf_reg_n_0_[62] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[63] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[63]),
        .Q(\sect_addr_buf_reg_n_0_[63] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[6] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[6]),
        .Q(\sect_addr_buf_reg_n_0_[6] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[7] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[7]),
        .Q(\sect_addr_buf_reg_n_0_[7] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[8] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[8]),
        .Q(\sect_addr_buf_reg_n_0_[8] ),
        .R(fifo_rctl_n_9));
  FDRE \sect_addr_buf_reg[9] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[9]),
        .Q(\sect_addr_buf_reg_n_0_[9] ),
        .R(fifo_rctl_n_9));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry
       (.CI(1'b0),
        .CO({sect_cnt0_carry_n_0,sect_cnt0_carry_n_1,sect_cnt0_carry_n_2,sect_cnt0_carry_n_3}),
        .CYINIT(\sect_cnt_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[4:1]),
        .S({\sect_cnt_reg_n_0_[4] ,\sect_cnt_reg_n_0_[3] ,\sect_cnt_reg_n_0_[2] ,\sect_cnt_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__0
       (.CI(sect_cnt0_carry_n_0),
        .CO({sect_cnt0_carry__0_n_0,sect_cnt0_carry__0_n_1,sect_cnt0_carry__0_n_2,sect_cnt0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[8:5]),
        .S({\sect_cnt_reg_n_0_[8] ,\sect_cnt_reg_n_0_[7] ,\sect_cnt_reg_n_0_[6] ,\sect_cnt_reg_n_0_[5] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__1
       (.CI(sect_cnt0_carry__0_n_0),
        .CO({sect_cnt0_carry__1_n_0,sect_cnt0_carry__1_n_1,sect_cnt0_carry__1_n_2,sect_cnt0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[12:9]),
        .S({\sect_cnt_reg_n_0_[12] ,\sect_cnt_reg_n_0_[11] ,\sect_cnt_reg_n_0_[10] ,\sect_cnt_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__10
       (.CI(sect_cnt0_carry__9_n_0),
        .CO({sect_cnt0_carry__10_n_0,sect_cnt0_carry__10_n_1,sect_cnt0_carry__10_n_2,sect_cnt0_carry__10_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[48:45]),
        .S({\sect_cnt_reg_n_0_[48] ,\sect_cnt_reg_n_0_[47] ,\sect_cnt_reg_n_0_[46] ,\sect_cnt_reg_n_0_[45] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__11
       (.CI(sect_cnt0_carry__10_n_0),
        .CO({NLW_sect_cnt0_carry__11_CO_UNCONNECTED[3:2],sect_cnt0_carry__11_n_2,sect_cnt0_carry__11_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sect_cnt0_carry__11_O_UNCONNECTED[3],sect_cnt0[51:49]}),
        .S({1'b0,\sect_cnt_reg_n_0_[51] ,\sect_cnt_reg_n_0_[50] ,\sect_cnt_reg_n_0_[49] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__2
       (.CI(sect_cnt0_carry__1_n_0),
        .CO({sect_cnt0_carry__2_n_0,sect_cnt0_carry__2_n_1,sect_cnt0_carry__2_n_2,sect_cnt0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[16:13]),
        .S({\sect_cnt_reg_n_0_[16] ,\sect_cnt_reg_n_0_[15] ,\sect_cnt_reg_n_0_[14] ,\sect_cnt_reg_n_0_[13] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__3
       (.CI(sect_cnt0_carry__2_n_0),
        .CO({sect_cnt0_carry__3_n_0,sect_cnt0_carry__3_n_1,sect_cnt0_carry__3_n_2,sect_cnt0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[20:17]),
        .S({\sect_cnt_reg_n_0_[20] ,\sect_cnt_reg_n_0_[19] ,\sect_cnt_reg_n_0_[18] ,\sect_cnt_reg_n_0_[17] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__4
       (.CI(sect_cnt0_carry__3_n_0),
        .CO({sect_cnt0_carry__4_n_0,sect_cnt0_carry__4_n_1,sect_cnt0_carry__4_n_2,sect_cnt0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[24:21]),
        .S({\sect_cnt_reg_n_0_[24] ,\sect_cnt_reg_n_0_[23] ,\sect_cnt_reg_n_0_[22] ,\sect_cnt_reg_n_0_[21] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__5
       (.CI(sect_cnt0_carry__4_n_0),
        .CO({sect_cnt0_carry__5_n_0,sect_cnt0_carry__5_n_1,sect_cnt0_carry__5_n_2,sect_cnt0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[28:25]),
        .S({\sect_cnt_reg_n_0_[28] ,\sect_cnt_reg_n_0_[27] ,\sect_cnt_reg_n_0_[26] ,\sect_cnt_reg_n_0_[25] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__6
       (.CI(sect_cnt0_carry__5_n_0),
        .CO({sect_cnt0_carry__6_n_0,sect_cnt0_carry__6_n_1,sect_cnt0_carry__6_n_2,sect_cnt0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[32:29]),
        .S({\sect_cnt_reg_n_0_[32] ,\sect_cnt_reg_n_0_[31] ,\sect_cnt_reg_n_0_[30] ,\sect_cnt_reg_n_0_[29] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__7
       (.CI(sect_cnt0_carry__6_n_0),
        .CO({sect_cnt0_carry__7_n_0,sect_cnt0_carry__7_n_1,sect_cnt0_carry__7_n_2,sect_cnt0_carry__7_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[36:33]),
        .S({\sect_cnt_reg_n_0_[36] ,\sect_cnt_reg_n_0_[35] ,\sect_cnt_reg_n_0_[34] ,\sect_cnt_reg_n_0_[33] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__8
       (.CI(sect_cnt0_carry__7_n_0),
        .CO({sect_cnt0_carry__8_n_0,sect_cnt0_carry__8_n_1,sect_cnt0_carry__8_n_2,sect_cnt0_carry__8_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[40:37]),
        .S({\sect_cnt_reg_n_0_[40] ,\sect_cnt_reg_n_0_[39] ,\sect_cnt_reg_n_0_[38] ,\sect_cnt_reg_n_0_[37] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__9
       (.CI(sect_cnt0_carry__8_n_0),
        .CO({sect_cnt0_carry__9_n_0,sect_cnt0_carry__9_n_1,sect_cnt0_carry__9_n_2,sect_cnt0_carry__9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[44:41]),
        .S({\sect_cnt_reg_n_0_[44] ,\sect_cnt_reg_n_0_[43] ,\sect_cnt_reg_n_0_[42] ,\sect_cnt_reg_n_0_[41] }));
  FDRE \sect_cnt_reg[0] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_53),
        .Q(\sect_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \sect_cnt_reg[10] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_43),
        .Q(\sect_cnt_reg_n_0_[10] ),
        .R(SR));
  FDRE \sect_cnt_reg[11] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_42),
        .Q(\sect_cnt_reg_n_0_[11] ),
        .R(SR));
  FDRE \sect_cnt_reg[12] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_41),
        .Q(\sect_cnt_reg_n_0_[12] ),
        .R(SR));
  FDRE \sect_cnt_reg[13] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_40),
        .Q(\sect_cnt_reg_n_0_[13] ),
        .R(SR));
  FDRE \sect_cnt_reg[14] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_39),
        .Q(\sect_cnt_reg_n_0_[14] ),
        .R(SR));
  FDRE \sect_cnt_reg[15] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_38),
        .Q(\sect_cnt_reg_n_0_[15] ),
        .R(SR));
  FDRE \sect_cnt_reg[16] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_37),
        .Q(\sect_cnt_reg_n_0_[16] ),
        .R(SR));
  FDRE \sect_cnt_reg[17] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_36),
        .Q(\sect_cnt_reg_n_0_[17] ),
        .R(SR));
  FDRE \sect_cnt_reg[18] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_35),
        .Q(\sect_cnt_reg_n_0_[18] ),
        .R(SR));
  FDRE \sect_cnt_reg[19] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_34),
        .Q(\sect_cnt_reg_n_0_[19] ),
        .R(SR));
  FDRE \sect_cnt_reg[1] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_52),
        .Q(\sect_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \sect_cnt_reg[20] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_33),
        .Q(\sect_cnt_reg_n_0_[20] ),
        .R(SR));
  FDRE \sect_cnt_reg[21] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_32),
        .Q(\sect_cnt_reg_n_0_[21] ),
        .R(SR));
  FDRE \sect_cnt_reg[22] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_31),
        .Q(\sect_cnt_reg_n_0_[22] ),
        .R(SR));
  FDRE \sect_cnt_reg[23] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_30),
        .Q(\sect_cnt_reg_n_0_[23] ),
        .R(SR));
  FDRE \sect_cnt_reg[24] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_29),
        .Q(\sect_cnt_reg_n_0_[24] ),
        .R(SR));
  FDRE \sect_cnt_reg[25] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_28),
        .Q(\sect_cnt_reg_n_0_[25] ),
        .R(SR));
  FDRE \sect_cnt_reg[26] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_27),
        .Q(\sect_cnt_reg_n_0_[26] ),
        .R(SR));
  FDRE \sect_cnt_reg[27] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_26),
        .Q(\sect_cnt_reg_n_0_[27] ),
        .R(SR));
  FDRE \sect_cnt_reg[28] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_25),
        .Q(\sect_cnt_reg_n_0_[28] ),
        .R(SR));
  FDRE \sect_cnt_reg[29] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_24),
        .Q(\sect_cnt_reg_n_0_[29] ),
        .R(SR));
  FDRE \sect_cnt_reg[2] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_51),
        .Q(\sect_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \sect_cnt_reg[30] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_23),
        .Q(\sect_cnt_reg_n_0_[30] ),
        .R(SR));
  FDRE \sect_cnt_reg[31] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_22),
        .Q(\sect_cnt_reg_n_0_[31] ),
        .R(SR));
  FDRE \sect_cnt_reg[32] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_21),
        .Q(\sect_cnt_reg_n_0_[32] ),
        .R(SR));
  FDRE \sect_cnt_reg[33] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_20),
        .Q(\sect_cnt_reg_n_0_[33] ),
        .R(SR));
  FDRE \sect_cnt_reg[34] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_19),
        .Q(\sect_cnt_reg_n_0_[34] ),
        .R(SR));
  FDRE \sect_cnt_reg[35] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_18),
        .Q(\sect_cnt_reg_n_0_[35] ),
        .R(SR));
  FDRE \sect_cnt_reg[36] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_17),
        .Q(\sect_cnt_reg_n_0_[36] ),
        .R(SR));
  FDRE \sect_cnt_reg[37] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_16),
        .Q(\sect_cnt_reg_n_0_[37] ),
        .R(SR));
  FDRE \sect_cnt_reg[38] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_15),
        .Q(\sect_cnt_reg_n_0_[38] ),
        .R(SR));
  FDRE \sect_cnt_reg[39] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_14),
        .Q(\sect_cnt_reg_n_0_[39] ),
        .R(SR));
  FDRE \sect_cnt_reg[3] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_50),
        .Q(\sect_cnt_reg_n_0_[3] ),
        .R(SR));
  FDRE \sect_cnt_reg[40] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_13),
        .Q(\sect_cnt_reg_n_0_[40] ),
        .R(SR));
  FDRE \sect_cnt_reg[41] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_12),
        .Q(\sect_cnt_reg_n_0_[41] ),
        .R(SR));
  FDRE \sect_cnt_reg[42] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_11),
        .Q(\sect_cnt_reg_n_0_[42] ),
        .R(SR));
  FDRE \sect_cnt_reg[43] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_10),
        .Q(\sect_cnt_reg_n_0_[43] ),
        .R(SR));
  FDRE \sect_cnt_reg[44] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_9),
        .Q(\sect_cnt_reg_n_0_[44] ),
        .R(SR));
  FDRE \sect_cnt_reg[45] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_8),
        .Q(\sect_cnt_reg_n_0_[45] ),
        .R(SR));
  FDRE \sect_cnt_reg[46] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_7),
        .Q(\sect_cnt_reg_n_0_[46] ),
        .R(SR));
  FDRE \sect_cnt_reg[47] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_6),
        .Q(\sect_cnt_reg_n_0_[47] ),
        .R(SR));
  FDRE \sect_cnt_reg[48] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_5),
        .Q(\sect_cnt_reg_n_0_[48] ),
        .R(SR));
  FDRE \sect_cnt_reg[49] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_4),
        .Q(\sect_cnt_reg_n_0_[49] ),
        .R(SR));
  FDRE \sect_cnt_reg[4] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_49),
        .Q(\sect_cnt_reg_n_0_[4] ),
        .R(SR));
  FDRE \sect_cnt_reg[50] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_3),
        .Q(\sect_cnt_reg_n_0_[50] ),
        .R(SR));
  FDRE \sect_cnt_reg[51] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_2),
        .Q(\sect_cnt_reg_n_0_[51] ),
        .R(SR));
  FDRE \sect_cnt_reg[5] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_48),
        .Q(\sect_cnt_reg_n_0_[5] ),
        .R(SR));
  FDRE \sect_cnt_reg[6] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_47),
        .Q(\sect_cnt_reg_n_0_[6] ),
        .R(SR));
  FDRE \sect_cnt_reg[7] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_46),
        .Q(\sect_cnt_reg_n_0_[7] ),
        .R(SR));
  FDRE \sect_cnt_reg[8] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_45),
        .Q(\sect_cnt_reg_n_0_[8] ),
        .R(SR));
  FDRE \sect_cnt_reg[9] 
       (.C(ap_clk),
        .CE(fifo_rctl_n_2),
        .D(rs_rreq_n_44),
        .Q(\sect_cnt_reg_n_0_[9] ),
        .R(SR));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[0]_i_1__0 
       (.I0(beat_len[0]),
        .I1(\start_addr_reg_n_0_[2] ),
        .I2(\end_addr_reg_n_0_[2] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[1]_i_1__0 
       (.I0(beat_len[1]),
        .I1(\start_addr_reg_n_0_[3] ),
        .I2(\end_addr_reg_n_0_[3] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[2]_i_1__0 
       (.I0(beat_len[2]),
        .I1(\start_addr_reg_n_0_[4] ),
        .I2(\end_addr_reg_n_0_[4] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[3]_i_1__0 
       (.I0(beat_len[3]),
        .I1(\start_addr_reg_n_0_[5] ),
        .I2(\end_addr_reg_n_0_[5] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[4]_i_1__0 
       (.I0(beat_len[4]),
        .I1(\start_addr_reg_n_0_[6] ),
        .I2(\end_addr_reg_n_0_[6] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[5]_i_1__0 
       (.I0(beat_len[5]),
        .I1(\start_addr_reg_n_0_[7] ),
        .I2(\end_addr_reg_n_0_[7] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[6]_i_1__0 
       (.I0(beat_len[6]),
        .I1(\start_addr_reg_n_0_[8] ),
        .I2(\end_addr_reg_n_0_[8] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[7]_i_1__0 
       (.I0(beat_len[7]),
        .I1(\start_addr_reg_n_0_[9] ),
        .I2(\end_addr_reg_n_0_[9] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[8]_i_1__0 
       (.I0(beat_len[8]),
        .I1(\start_addr_reg_n_0_[10] ),
        .I2(\end_addr_reg_n_0_[10] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[8]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[9]_i_2__0 
       (.I0(beat_len[9]),
        .I1(\start_addr_reg_n_0_[11] ),
        .I2(\end_addr_reg_n_0_[11] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[9]_i_2__0_n_0 ));
  FDRE \sect_len_buf_reg[0] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[0]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[0] ),
        .R(SR));
  FDRE \sect_len_buf_reg[1] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[1]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[1] ),
        .R(SR));
  FDRE \sect_len_buf_reg[2] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[2]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[2] ),
        .R(SR));
  FDRE \sect_len_buf_reg[3] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[3]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[3] ),
        .R(SR));
  FDRE \sect_len_buf_reg[4] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[4]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[4] ),
        .R(SR));
  FDRE \sect_len_buf_reg[5] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[5]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[5] ),
        .R(SR));
  FDRE \sect_len_buf_reg[6] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[6]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[6] ),
        .R(SR));
  FDRE \sect_len_buf_reg[7] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[7]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[7] ),
        .R(SR));
  FDRE \sect_len_buf_reg[8] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[8]_i_1__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[8] ),
        .R(SR));
  FDRE \sect_len_buf_reg[9] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[9]_i_2__0_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[9] ),
        .R(SR));
  FDRE \start_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_137),
        .Q(\start_addr_reg_n_0_[10] ),
        .R(SR));
  FDRE \start_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_136),
        .Q(\start_addr_reg_n_0_[11] ),
        .R(SR));
  FDRE \start_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_135),
        .Q(p_0_in[0]),
        .R(SR));
  FDRE \start_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_134),
        .Q(p_0_in[1]),
        .R(SR));
  FDRE \start_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_133),
        .Q(p_0_in[2]),
        .R(SR));
  FDRE \start_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_132),
        .Q(p_0_in[3]),
        .R(SR));
  FDRE \start_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_131),
        .Q(p_0_in[4]),
        .R(SR));
  FDRE \start_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_130),
        .Q(p_0_in[5]),
        .R(SR));
  FDRE \start_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_129),
        .Q(p_0_in[6]),
        .R(SR));
  FDRE \start_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_128),
        .Q(p_0_in[7]),
        .R(SR));
  FDRE \start_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_127),
        .Q(p_0_in[8]),
        .R(SR));
  FDRE \start_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_126),
        .Q(p_0_in[9]),
        .R(SR));
  FDRE \start_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_125),
        .Q(p_0_in[10]),
        .R(SR));
  FDRE \start_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_124),
        .Q(p_0_in[11]),
        .R(SR));
  FDRE \start_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_123),
        .Q(p_0_in[12]),
        .R(SR));
  FDRE \start_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_122),
        .Q(p_0_in[13]),
        .R(SR));
  FDRE \start_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_121),
        .Q(p_0_in[14]),
        .R(SR));
  FDRE \start_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_120),
        .Q(p_0_in[15]),
        .R(SR));
  FDRE \start_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_119),
        .Q(p_0_in[16]),
        .R(SR));
  FDRE \start_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_118),
        .Q(p_0_in[17]),
        .R(SR));
  FDRE \start_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_145),
        .Q(\start_addr_reg_n_0_[2] ),
        .R(SR));
  FDRE \start_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_117),
        .Q(p_0_in[18]),
        .R(SR));
  FDRE \start_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_116),
        .Q(p_0_in[19]),
        .R(SR));
  FDRE \start_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_115),
        .Q(p_0_in[20]),
        .R(SR));
  FDRE \start_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_114),
        .Q(p_0_in[21]),
        .R(SR));
  FDRE \start_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_113),
        .Q(p_0_in[22]),
        .R(SR));
  FDRE \start_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_112),
        .Q(p_0_in[23]),
        .R(SR));
  FDRE \start_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_111),
        .Q(p_0_in[24]),
        .R(SR));
  FDRE \start_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_110),
        .Q(p_0_in[25]),
        .R(SR));
  FDRE \start_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_109),
        .Q(p_0_in[26]),
        .R(SR));
  FDRE \start_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_108),
        .Q(p_0_in[27]),
        .R(SR));
  FDRE \start_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_144),
        .Q(\start_addr_reg_n_0_[3] ),
        .R(SR));
  FDRE \start_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_107),
        .Q(p_0_in[28]),
        .R(SR));
  FDRE \start_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_106),
        .Q(p_0_in[29]),
        .R(SR));
  FDRE \start_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_105),
        .Q(p_0_in[30]),
        .R(SR));
  FDRE \start_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_104),
        .Q(p_0_in[31]),
        .R(SR));
  FDRE \start_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_103),
        .Q(p_0_in[32]),
        .R(SR));
  FDRE \start_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_102),
        .Q(p_0_in[33]),
        .R(SR));
  FDRE \start_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_101),
        .Q(p_0_in[34]),
        .R(SR));
  FDRE \start_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_100),
        .Q(p_0_in[35]),
        .R(SR));
  FDRE \start_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_99),
        .Q(p_0_in[36]),
        .R(SR));
  FDRE \start_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_98),
        .Q(p_0_in[37]),
        .R(SR));
  FDRE \start_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_143),
        .Q(\start_addr_reg_n_0_[4] ),
        .R(SR));
  FDRE \start_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_97),
        .Q(p_0_in[38]),
        .R(SR));
  FDRE \start_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_96),
        .Q(p_0_in[39]),
        .R(SR));
  FDRE \start_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_95),
        .Q(p_0_in[40]),
        .R(SR));
  FDRE \start_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_94),
        .Q(p_0_in[41]),
        .R(SR));
  FDRE \start_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_93),
        .Q(p_0_in[42]),
        .R(SR));
  FDRE \start_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_92),
        .Q(p_0_in[43]),
        .R(SR));
  FDRE \start_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_91),
        .Q(p_0_in[44]),
        .R(SR));
  FDRE \start_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_90),
        .Q(p_0_in[45]),
        .R(SR));
  FDRE \start_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_89),
        .Q(p_0_in[46]),
        .R(SR));
  FDRE \start_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_88),
        .Q(p_0_in[47]),
        .R(SR));
  FDRE \start_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_142),
        .Q(\start_addr_reg_n_0_[5] ),
        .R(SR));
  FDRE \start_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_87),
        .Q(p_0_in[48]),
        .R(SR));
  FDRE \start_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_86),
        .Q(p_0_in[49]),
        .R(SR));
  FDRE \start_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_85),
        .Q(p_0_in[50]),
        .R(SR));
  FDRE \start_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_84),
        .Q(p_0_in[51]),
        .R(SR));
  FDRE \start_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_141),
        .Q(\start_addr_reg_n_0_[6] ),
        .R(SR));
  FDRE \start_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_140),
        .Q(\start_addr_reg_n_0_[7] ),
        .R(SR));
  FDRE \start_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_139),
        .Q(\start_addr_reg_n_0_[8] ),
        .R(SR));
  FDRE \start_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_rreq),
        .D(rs_rreq_n_138),
        .Q(\start_addr_reg_n_0_[9] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_reg_slice" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice
   (s_ready_t_reg_0,
    Q,
    D,
    \data_p1_reg[95]_0 ,
    S,
    \data_p1_reg[63]_0 ,
    SR,
    ap_clk,
    AWVALID_Dummy,
    next_wreq,
    sect_cnt0,
    last_sect_buf_reg,
    last_sect_buf_reg_0,
    \data_p2_reg[95]_0 ,
    \end_addr_reg[5] ,
    \end_addr_reg[9] ,
    \end_addr_reg[13] ,
    \end_addr_reg[17] ,
    \end_addr_reg[21] ,
    \end_addr_reg[25] ,
    \end_addr_reg[29] ,
    \end_addr_reg[33] ,
    E);
  output s_ready_t_reg_0;
  output [0:0]Q;
  output [51:0]D;
  output [91:0]\data_p1_reg[95]_0 ;
  output [1:0]S;
  output [61:0]\data_p1_reg[63]_0 ;
  input [0:0]SR;
  input ap_clk;
  input AWVALID_Dummy;
  input next_wreq;
  input [50:0]sect_cnt0;
  input [4:0]last_sect_buf_reg;
  input [3:0]last_sect_buf_reg_0;
  input [91:0]\data_p2_reg[95]_0 ;
  input [3:0]\end_addr_reg[5] ;
  input [3:0]\end_addr_reg[9] ;
  input [3:0]\end_addr_reg[13] ;
  input [3:0]\end_addr_reg[17] ;
  input [3:0]\end_addr_reg[21] ;
  input [3:0]\end_addr_reg[25] ;
  input [3:0]\end_addr_reg[29] ;
  input [1:0]\end_addr_reg[33] ;
  input [0:0]E;

  wire AWVALID_Dummy;
  wire [51:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire \data_p1[10]_i_1_n_0 ;
  wire \data_p1[11]_i_1_n_0 ;
  wire \data_p1[12]_i_1_n_0 ;
  wire \data_p1[13]_i_1_n_0 ;
  wire \data_p1[14]_i_1_n_0 ;
  wire \data_p1[15]_i_1_n_0 ;
  wire \data_p1[16]_i_1_n_0 ;
  wire \data_p1[17]_i_1_n_0 ;
  wire \data_p1[18]_i_1_n_0 ;
  wire \data_p1[19]_i_1_n_0 ;
  wire \data_p1[20]_i_1_n_0 ;
  wire \data_p1[21]_i_1_n_0 ;
  wire \data_p1[22]_i_1_n_0 ;
  wire \data_p1[23]_i_1_n_0 ;
  wire \data_p1[24]_i_1_n_0 ;
  wire \data_p1[25]_i_1_n_0 ;
  wire \data_p1[26]_i_1_n_0 ;
  wire \data_p1[27]_i_1_n_0 ;
  wire \data_p1[28]_i_1_n_0 ;
  wire \data_p1[29]_i_1_n_0 ;
  wire \data_p1[2]_i_1_n_0 ;
  wire \data_p1[30]_i_1_n_0 ;
  wire \data_p1[31]_i_1_n_0 ;
  wire \data_p1[32]_i_1_n_0 ;
  wire \data_p1[33]_i_1_n_0 ;
  wire \data_p1[34]_i_1_n_0 ;
  wire \data_p1[35]_i_1_n_0 ;
  wire \data_p1[36]_i_1_n_0 ;
  wire \data_p1[37]_i_1_n_0 ;
  wire \data_p1[38]_i_1_n_0 ;
  wire \data_p1[39]_i_1_n_0 ;
  wire \data_p1[3]_i_1_n_0 ;
  wire \data_p1[40]_i_1_n_0 ;
  wire \data_p1[41]_i_1_n_0 ;
  wire \data_p1[42]_i_1_n_0 ;
  wire \data_p1[43]_i_1_n_0 ;
  wire \data_p1[44]_i_1_n_0 ;
  wire \data_p1[45]_i_1_n_0 ;
  wire \data_p1[46]_i_1_n_0 ;
  wire \data_p1[47]_i_1_n_0 ;
  wire \data_p1[48]_i_1_n_0 ;
  wire \data_p1[49]_i_1_n_0 ;
  wire \data_p1[4]_i_1_n_0 ;
  wire \data_p1[50]_i_1_n_0 ;
  wire \data_p1[51]_i_1_n_0 ;
  wire \data_p1[52]_i_1_n_0 ;
  wire \data_p1[53]_i_1_n_0 ;
  wire \data_p1[54]_i_1_n_0 ;
  wire \data_p1[55]_i_1_n_0 ;
  wire \data_p1[56]_i_1_n_0 ;
  wire \data_p1[57]_i_1_n_0 ;
  wire \data_p1[58]_i_1_n_0 ;
  wire \data_p1[59]_i_1_n_0 ;
  wire \data_p1[5]_i_1_n_0 ;
  wire \data_p1[60]_i_1_n_0 ;
  wire \data_p1[61]_i_1_n_0 ;
  wire \data_p1[62]_i_1_n_0 ;
  wire \data_p1[63]_i_1_n_0 ;
  wire \data_p1[66]_i_1_n_0 ;
  wire \data_p1[67]_i_1_n_0 ;
  wire \data_p1[68]_i_1_n_0 ;
  wire \data_p1[69]_i_1_n_0 ;
  wire \data_p1[6]_i_1_n_0 ;
  wire \data_p1[70]_i_1_n_0 ;
  wire \data_p1[71]_i_1_n_0 ;
  wire \data_p1[72]_i_1_n_0 ;
  wire \data_p1[73]_i_1_n_0 ;
  wire \data_p1[74]_i_1_n_0 ;
  wire \data_p1[75]_i_1_n_0 ;
  wire \data_p1[76]_i_1_n_0 ;
  wire \data_p1[77]_i_1_n_0 ;
  wire \data_p1[78]_i_1_n_0 ;
  wire \data_p1[79]_i_1_n_0 ;
  wire \data_p1[7]_i_1_n_0 ;
  wire \data_p1[80]_i_1_n_0 ;
  wire \data_p1[81]_i_1_n_0 ;
  wire \data_p1[82]_i_1_n_0 ;
  wire \data_p1[83]_i_1_n_0 ;
  wire \data_p1[84]_i_1_n_0 ;
  wire \data_p1[85]_i_1_n_0 ;
  wire \data_p1[86]_i_1_n_0 ;
  wire \data_p1[87]_i_1_n_0 ;
  wire \data_p1[88]_i_1_n_0 ;
  wire \data_p1[89]_i_1_n_0 ;
  wire \data_p1[8]_i_1_n_0 ;
  wire \data_p1[90]_i_1_n_0 ;
  wire \data_p1[91]_i_1_n_0 ;
  wire \data_p1[92]_i_1_n_0 ;
  wire \data_p1[93]_i_1_n_0 ;
  wire \data_p1[94]_i_1_n_0 ;
  wire \data_p1[95]_i_2_n_0 ;
  wire \data_p1[9]_i_1_n_0 ;
  wire [61:0]\data_p1_reg[63]_0 ;
  wire [91:0]\data_p1_reg[95]_0 ;
  wire [91:0]\data_p2_reg[95]_0 ;
  wire \data_p2_reg_n_0_[10] ;
  wire \data_p2_reg_n_0_[11] ;
  wire \data_p2_reg_n_0_[12] ;
  wire \data_p2_reg_n_0_[13] ;
  wire \data_p2_reg_n_0_[14] ;
  wire \data_p2_reg_n_0_[15] ;
  wire \data_p2_reg_n_0_[16] ;
  wire \data_p2_reg_n_0_[17] ;
  wire \data_p2_reg_n_0_[18] ;
  wire \data_p2_reg_n_0_[19] ;
  wire \data_p2_reg_n_0_[20] ;
  wire \data_p2_reg_n_0_[21] ;
  wire \data_p2_reg_n_0_[22] ;
  wire \data_p2_reg_n_0_[23] ;
  wire \data_p2_reg_n_0_[24] ;
  wire \data_p2_reg_n_0_[25] ;
  wire \data_p2_reg_n_0_[26] ;
  wire \data_p2_reg_n_0_[27] ;
  wire \data_p2_reg_n_0_[28] ;
  wire \data_p2_reg_n_0_[29] ;
  wire \data_p2_reg_n_0_[2] ;
  wire \data_p2_reg_n_0_[30] ;
  wire \data_p2_reg_n_0_[31] ;
  wire \data_p2_reg_n_0_[32] ;
  wire \data_p2_reg_n_0_[33] ;
  wire \data_p2_reg_n_0_[34] ;
  wire \data_p2_reg_n_0_[35] ;
  wire \data_p2_reg_n_0_[36] ;
  wire \data_p2_reg_n_0_[37] ;
  wire \data_p2_reg_n_0_[38] ;
  wire \data_p2_reg_n_0_[39] ;
  wire \data_p2_reg_n_0_[3] ;
  wire \data_p2_reg_n_0_[40] ;
  wire \data_p2_reg_n_0_[41] ;
  wire \data_p2_reg_n_0_[42] ;
  wire \data_p2_reg_n_0_[43] ;
  wire \data_p2_reg_n_0_[44] ;
  wire \data_p2_reg_n_0_[45] ;
  wire \data_p2_reg_n_0_[46] ;
  wire \data_p2_reg_n_0_[47] ;
  wire \data_p2_reg_n_0_[48] ;
  wire \data_p2_reg_n_0_[49] ;
  wire \data_p2_reg_n_0_[4] ;
  wire \data_p2_reg_n_0_[50] ;
  wire \data_p2_reg_n_0_[51] ;
  wire \data_p2_reg_n_0_[52] ;
  wire \data_p2_reg_n_0_[53] ;
  wire \data_p2_reg_n_0_[54] ;
  wire \data_p2_reg_n_0_[55] ;
  wire \data_p2_reg_n_0_[56] ;
  wire \data_p2_reg_n_0_[57] ;
  wire \data_p2_reg_n_0_[58] ;
  wire \data_p2_reg_n_0_[59] ;
  wire \data_p2_reg_n_0_[5] ;
  wire \data_p2_reg_n_0_[60] ;
  wire \data_p2_reg_n_0_[61] ;
  wire \data_p2_reg_n_0_[62] ;
  wire \data_p2_reg_n_0_[63] ;
  wire \data_p2_reg_n_0_[66] ;
  wire \data_p2_reg_n_0_[67] ;
  wire \data_p2_reg_n_0_[68] ;
  wire \data_p2_reg_n_0_[69] ;
  wire \data_p2_reg_n_0_[6] ;
  wire \data_p2_reg_n_0_[70] ;
  wire \data_p2_reg_n_0_[71] ;
  wire \data_p2_reg_n_0_[72] ;
  wire \data_p2_reg_n_0_[73] ;
  wire \data_p2_reg_n_0_[74] ;
  wire \data_p2_reg_n_0_[75] ;
  wire \data_p2_reg_n_0_[76] ;
  wire \data_p2_reg_n_0_[77] ;
  wire \data_p2_reg_n_0_[78] ;
  wire \data_p2_reg_n_0_[79] ;
  wire \data_p2_reg_n_0_[7] ;
  wire \data_p2_reg_n_0_[80] ;
  wire \data_p2_reg_n_0_[81] ;
  wire \data_p2_reg_n_0_[82] ;
  wire \data_p2_reg_n_0_[83] ;
  wire \data_p2_reg_n_0_[84] ;
  wire \data_p2_reg_n_0_[85] ;
  wire \data_p2_reg_n_0_[86] ;
  wire \data_p2_reg_n_0_[87] ;
  wire \data_p2_reg_n_0_[88] ;
  wire \data_p2_reg_n_0_[89] ;
  wire \data_p2_reg_n_0_[8] ;
  wire \data_p2_reg_n_0_[90] ;
  wire \data_p2_reg_n_0_[91] ;
  wire \data_p2_reg_n_0_[92] ;
  wire \data_p2_reg_n_0_[93] ;
  wire \data_p2_reg_n_0_[94] ;
  wire \data_p2_reg_n_0_[95] ;
  wire \data_p2_reg_n_0_[9] ;
  wire [3:0]\end_addr_reg[13] ;
  wire \end_addr_reg[13]_i_1_n_0 ;
  wire \end_addr_reg[13]_i_1_n_1 ;
  wire \end_addr_reg[13]_i_1_n_2 ;
  wire \end_addr_reg[13]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[17] ;
  wire \end_addr_reg[17]_i_1_n_0 ;
  wire \end_addr_reg[17]_i_1_n_1 ;
  wire \end_addr_reg[17]_i_1_n_2 ;
  wire \end_addr_reg[17]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[21] ;
  wire \end_addr_reg[21]_i_1_n_0 ;
  wire \end_addr_reg[21]_i_1_n_1 ;
  wire \end_addr_reg[21]_i_1_n_2 ;
  wire \end_addr_reg[21]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[25] ;
  wire \end_addr_reg[25]_i_1_n_0 ;
  wire \end_addr_reg[25]_i_1_n_1 ;
  wire \end_addr_reg[25]_i_1_n_2 ;
  wire \end_addr_reg[25]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[29] ;
  wire \end_addr_reg[29]_i_1_n_0 ;
  wire \end_addr_reg[29]_i_1_n_1 ;
  wire \end_addr_reg[29]_i_1_n_2 ;
  wire \end_addr_reg[29]_i_1_n_3 ;
  wire [1:0]\end_addr_reg[33] ;
  wire \end_addr_reg[33]_i_1_n_0 ;
  wire \end_addr_reg[33]_i_1_n_1 ;
  wire \end_addr_reg[33]_i_1_n_2 ;
  wire \end_addr_reg[33]_i_1_n_3 ;
  wire \end_addr_reg[37]_i_1_n_0 ;
  wire \end_addr_reg[37]_i_1_n_1 ;
  wire \end_addr_reg[37]_i_1_n_2 ;
  wire \end_addr_reg[37]_i_1_n_3 ;
  wire \end_addr_reg[41]_i_1_n_0 ;
  wire \end_addr_reg[41]_i_1_n_1 ;
  wire \end_addr_reg[41]_i_1_n_2 ;
  wire \end_addr_reg[41]_i_1_n_3 ;
  wire \end_addr_reg[45]_i_1_n_0 ;
  wire \end_addr_reg[45]_i_1_n_1 ;
  wire \end_addr_reg[45]_i_1_n_2 ;
  wire \end_addr_reg[45]_i_1_n_3 ;
  wire \end_addr_reg[49]_i_1_n_0 ;
  wire \end_addr_reg[49]_i_1_n_1 ;
  wire \end_addr_reg[49]_i_1_n_2 ;
  wire \end_addr_reg[49]_i_1_n_3 ;
  wire \end_addr_reg[53]_i_1_n_0 ;
  wire \end_addr_reg[53]_i_1_n_1 ;
  wire \end_addr_reg[53]_i_1_n_2 ;
  wire \end_addr_reg[53]_i_1_n_3 ;
  wire \end_addr_reg[57]_i_1_n_0 ;
  wire \end_addr_reg[57]_i_1_n_1 ;
  wire \end_addr_reg[57]_i_1_n_2 ;
  wire \end_addr_reg[57]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[5] ;
  wire \end_addr_reg[5]_i_1_n_0 ;
  wire \end_addr_reg[5]_i_1_n_1 ;
  wire \end_addr_reg[5]_i_1_n_2 ;
  wire \end_addr_reg[5]_i_1_n_3 ;
  wire \end_addr_reg[61]_i_1_n_0 ;
  wire \end_addr_reg[61]_i_1_n_1 ;
  wire \end_addr_reg[61]_i_1_n_2 ;
  wire \end_addr_reg[61]_i_1_n_3 ;
  wire \end_addr_reg[63]_i_1_n_3 ;
  wire [3:0]\end_addr_reg[9] ;
  wire \end_addr_reg[9]_i_1_n_0 ;
  wire \end_addr_reg[9]_i_1_n_1 ;
  wire \end_addr_reg[9]_i_1_n_2 ;
  wire \end_addr_reg[9]_i_1_n_3 ;
  wire [4:0]last_sect_buf_reg;
  wire [3:0]last_sect_buf_reg_0;
  wire load_p1;
  wire [1:0]next__0;
  wire next_wreq;
  wire s_ready_t_i_1_n_0;
  wire s_ready_t_reg_0;
  wire [50:0]sect_cnt0;
  wire [1:1]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire [1:0]state__0;
  wire [3:1]\NLW_end_addr_reg[63]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_end_addr_reg[63]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h0230)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(AWVALID_Dummy),
        .I1(next_wreq),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(next__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h00C3F088)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(s_ready_t_reg_0),
        .I1(AWVALID_Dummy),
        .I2(next_wreq),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .O(next__0[1]));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[0]),
        .Q(state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[1]),
        .Q(state__0[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[10]_i_1 
       (.I0(\data_p2_reg_n_0_[10] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [8]),
        .O(\data_p1[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[11]_i_1 
       (.I0(\data_p2_reg_n_0_[11] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [9]),
        .O(\data_p1[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[12]_i_1 
       (.I0(\data_p2_reg_n_0_[12] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [10]),
        .O(\data_p1[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[13]_i_1 
       (.I0(\data_p2_reg_n_0_[13] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [11]),
        .O(\data_p1[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[14]_i_1 
       (.I0(\data_p2_reg_n_0_[14] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [12]),
        .O(\data_p1[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[15]_i_1 
       (.I0(\data_p2_reg_n_0_[15] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [13]),
        .O(\data_p1[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[16]_i_1 
       (.I0(\data_p2_reg_n_0_[16] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [14]),
        .O(\data_p1[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[17]_i_1 
       (.I0(\data_p2_reg_n_0_[17] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [15]),
        .O(\data_p1[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[18]_i_1 
       (.I0(\data_p2_reg_n_0_[18] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [16]),
        .O(\data_p1[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[19]_i_1 
       (.I0(\data_p2_reg_n_0_[19] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [17]),
        .O(\data_p1[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[20]_i_1 
       (.I0(\data_p2_reg_n_0_[20] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [18]),
        .O(\data_p1[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[21]_i_1 
       (.I0(\data_p2_reg_n_0_[21] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [19]),
        .O(\data_p1[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[22]_i_1 
       (.I0(\data_p2_reg_n_0_[22] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [20]),
        .O(\data_p1[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[23]_i_1 
       (.I0(\data_p2_reg_n_0_[23] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [21]),
        .O(\data_p1[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[24]_i_1 
       (.I0(\data_p2_reg_n_0_[24] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [22]),
        .O(\data_p1[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[25]_i_1 
       (.I0(\data_p2_reg_n_0_[25] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [23]),
        .O(\data_p1[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[26]_i_1 
       (.I0(\data_p2_reg_n_0_[26] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [24]),
        .O(\data_p1[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[27]_i_1 
       (.I0(\data_p2_reg_n_0_[27] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [25]),
        .O(\data_p1[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[28]_i_1 
       (.I0(\data_p2_reg_n_0_[28] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [26]),
        .O(\data_p1[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[29]_i_1 
       (.I0(\data_p2_reg_n_0_[29] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [27]),
        .O(\data_p1[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[2]_i_1 
       (.I0(\data_p2_reg_n_0_[2] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [0]),
        .O(\data_p1[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[30]_i_1 
       (.I0(\data_p2_reg_n_0_[30] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [28]),
        .O(\data_p1[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[31]_i_1 
       (.I0(\data_p2_reg_n_0_[31] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [29]),
        .O(\data_p1[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[32]_i_1 
       (.I0(\data_p2_reg_n_0_[32] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [30]),
        .O(\data_p1[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[33]_i_1 
       (.I0(\data_p2_reg_n_0_[33] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [31]),
        .O(\data_p1[33]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[34]_i_1 
       (.I0(\data_p2_reg_n_0_[34] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [32]),
        .O(\data_p1[34]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[35]_i_1 
       (.I0(\data_p2_reg_n_0_[35] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [33]),
        .O(\data_p1[35]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[36]_i_1 
       (.I0(\data_p2_reg_n_0_[36] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [34]),
        .O(\data_p1[36]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[37]_i_1 
       (.I0(\data_p2_reg_n_0_[37] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [35]),
        .O(\data_p1[37]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[38]_i_1 
       (.I0(\data_p2_reg_n_0_[38] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [36]),
        .O(\data_p1[38]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[39]_i_1 
       (.I0(\data_p2_reg_n_0_[39] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [37]),
        .O(\data_p1[39]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[3]_i_1 
       (.I0(\data_p2_reg_n_0_[3] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [1]),
        .O(\data_p1[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[40]_i_1 
       (.I0(\data_p2_reg_n_0_[40] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [38]),
        .O(\data_p1[40]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[41]_i_1 
       (.I0(\data_p2_reg_n_0_[41] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [39]),
        .O(\data_p1[41]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[42]_i_1 
       (.I0(\data_p2_reg_n_0_[42] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [40]),
        .O(\data_p1[42]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[43]_i_1 
       (.I0(\data_p2_reg_n_0_[43] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [41]),
        .O(\data_p1[43]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[44]_i_1 
       (.I0(\data_p2_reg_n_0_[44] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [42]),
        .O(\data_p1[44]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[45]_i_1 
       (.I0(\data_p2_reg_n_0_[45] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [43]),
        .O(\data_p1[45]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[46]_i_1 
       (.I0(\data_p2_reg_n_0_[46] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [44]),
        .O(\data_p1[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[47]_i_1 
       (.I0(\data_p2_reg_n_0_[47] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [45]),
        .O(\data_p1[47]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[48]_i_1 
       (.I0(\data_p2_reg_n_0_[48] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [46]),
        .O(\data_p1[48]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[49]_i_1 
       (.I0(\data_p2_reg_n_0_[49] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [47]),
        .O(\data_p1[49]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[4]_i_1 
       (.I0(\data_p2_reg_n_0_[4] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [2]),
        .O(\data_p1[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[50]_i_1 
       (.I0(\data_p2_reg_n_0_[50] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [48]),
        .O(\data_p1[50]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[51]_i_1 
       (.I0(\data_p2_reg_n_0_[51] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [49]),
        .O(\data_p1[51]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[52]_i_1 
       (.I0(\data_p2_reg_n_0_[52] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [50]),
        .O(\data_p1[52]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[53]_i_1 
       (.I0(\data_p2_reg_n_0_[53] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [51]),
        .O(\data_p1[53]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[54]_i_1 
       (.I0(\data_p2_reg_n_0_[54] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [52]),
        .O(\data_p1[54]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[55]_i_1 
       (.I0(\data_p2_reg_n_0_[55] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [53]),
        .O(\data_p1[55]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[56]_i_1 
       (.I0(\data_p2_reg_n_0_[56] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [54]),
        .O(\data_p1[56]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[57]_i_1 
       (.I0(\data_p2_reg_n_0_[57] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [55]),
        .O(\data_p1[57]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[58]_i_1 
       (.I0(\data_p2_reg_n_0_[58] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [56]),
        .O(\data_p1[58]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[59]_i_1 
       (.I0(\data_p2_reg_n_0_[59] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [57]),
        .O(\data_p1[59]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[5]_i_1 
       (.I0(\data_p2_reg_n_0_[5] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [3]),
        .O(\data_p1[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[60]_i_1 
       (.I0(\data_p2_reg_n_0_[60] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [58]),
        .O(\data_p1[60]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[61]_i_1 
       (.I0(\data_p2_reg_n_0_[61] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [59]),
        .O(\data_p1[61]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[62]_i_1 
       (.I0(\data_p2_reg_n_0_[62] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [60]),
        .O(\data_p1[62]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[63]_i_1 
       (.I0(\data_p2_reg_n_0_[63] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [61]),
        .O(\data_p1[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[66]_i_1 
       (.I0(\data_p2_reg_n_0_[66] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [62]),
        .O(\data_p1[66]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[67]_i_1 
       (.I0(\data_p2_reg_n_0_[67] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [63]),
        .O(\data_p1[67]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[68]_i_1 
       (.I0(\data_p2_reg_n_0_[68] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [64]),
        .O(\data_p1[68]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[69]_i_1 
       (.I0(\data_p2_reg_n_0_[69] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [65]),
        .O(\data_p1[69]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[6]_i_1 
       (.I0(\data_p2_reg_n_0_[6] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [4]),
        .O(\data_p1[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[70]_i_1 
       (.I0(\data_p2_reg_n_0_[70] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [66]),
        .O(\data_p1[70]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[71]_i_1 
       (.I0(\data_p2_reg_n_0_[71] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [67]),
        .O(\data_p1[71]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[72]_i_1 
       (.I0(\data_p2_reg_n_0_[72] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [68]),
        .O(\data_p1[72]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[73]_i_1 
       (.I0(\data_p2_reg_n_0_[73] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [69]),
        .O(\data_p1[73]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[74]_i_1 
       (.I0(\data_p2_reg_n_0_[74] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [70]),
        .O(\data_p1[74]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[75]_i_1 
       (.I0(\data_p2_reg_n_0_[75] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [71]),
        .O(\data_p1[75]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[76]_i_1 
       (.I0(\data_p2_reg_n_0_[76] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [72]),
        .O(\data_p1[76]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[77]_i_1 
       (.I0(\data_p2_reg_n_0_[77] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [73]),
        .O(\data_p1[77]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[78]_i_1 
       (.I0(\data_p2_reg_n_0_[78] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [74]),
        .O(\data_p1[78]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[79]_i_1 
       (.I0(\data_p2_reg_n_0_[79] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [75]),
        .O(\data_p1[79]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[7]_i_1 
       (.I0(\data_p2_reg_n_0_[7] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [5]),
        .O(\data_p1[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[80]_i_1 
       (.I0(\data_p2_reg_n_0_[80] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [76]),
        .O(\data_p1[80]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[81]_i_1 
       (.I0(\data_p2_reg_n_0_[81] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [77]),
        .O(\data_p1[81]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[82]_i_1 
       (.I0(\data_p2_reg_n_0_[82] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [78]),
        .O(\data_p1[82]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[83]_i_1 
       (.I0(\data_p2_reg_n_0_[83] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [79]),
        .O(\data_p1[83]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[84]_i_1 
       (.I0(\data_p2_reg_n_0_[84] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [80]),
        .O(\data_p1[84]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[85]_i_1 
       (.I0(\data_p2_reg_n_0_[85] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [81]),
        .O(\data_p1[85]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[86]_i_1 
       (.I0(\data_p2_reg_n_0_[86] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [82]),
        .O(\data_p1[86]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[87]_i_1 
       (.I0(\data_p2_reg_n_0_[87] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [83]),
        .O(\data_p1[87]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[88]_i_1 
       (.I0(\data_p2_reg_n_0_[88] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [84]),
        .O(\data_p1[88]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[89]_i_1 
       (.I0(\data_p2_reg_n_0_[89] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [85]),
        .O(\data_p1[89]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[8]_i_1 
       (.I0(\data_p2_reg_n_0_[8] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [6]),
        .O(\data_p1[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[90]_i_1 
       (.I0(\data_p2_reg_n_0_[90] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [86]),
        .O(\data_p1[90]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[91]_i_1 
       (.I0(\data_p2_reg_n_0_[91] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [87]),
        .O(\data_p1[91]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[92]_i_1 
       (.I0(\data_p2_reg_n_0_[92] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [88]),
        .O(\data_p1[92]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[93]_i_1 
       (.I0(\data_p2_reg_n_0_[93] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [89]),
        .O(\data_p1[93]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[94]_i_1 
       (.I0(\data_p2_reg_n_0_[94] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [90]),
        .O(\data_p1[94]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2B08)) 
    \data_p1[95]_i_1 
       (.I0(next_wreq),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(AWVALID_Dummy),
        .O(load_p1));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[95]_i_2 
       (.I0(\data_p2_reg_n_0_[95] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [91]),
        .O(\data_p1[95]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[9]_i_1 
       (.I0(\data_p2_reg_n_0_[9] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [7]),
        .O(\data_p1[9]_i_1_n_0 ));
  FDRE \data_p1_reg[10] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[10]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [8]),
        .R(1'b0));
  FDRE \data_p1_reg[11] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[11]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [9]),
        .R(1'b0));
  FDRE \data_p1_reg[12] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[12]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [10]),
        .R(1'b0));
  FDRE \data_p1_reg[13] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[13]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [11]),
        .R(1'b0));
  FDRE \data_p1_reg[14] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[14]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [12]),
        .R(1'b0));
  FDRE \data_p1_reg[15] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[15]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [13]),
        .R(1'b0));
  FDRE \data_p1_reg[16] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[16]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [14]),
        .R(1'b0));
  FDRE \data_p1_reg[17] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[17]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [15]),
        .R(1'b0));
  FDRE \data_p1_reg[18] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[18]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [16]),
        .R(1'b0));
  FDRE \data_p1_reg[19] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[19]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [17]),
        .R(1'b0));
  FDRE \data_p1_reg[20] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[20]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [18]),
        .R(1'b0));
  FDRE \data_p1_reg[21] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[21]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [19]),
        .R(1'b0));
  FDRE \data_p1_reg[22] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[22]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [20]),
        .R(1'b0));
  FDRE \data_p1_reg[23] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[23]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [21]),
        .R(1'b0));
  FDRE \data_p1_reg[24] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[24]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [22]),
        .R(1'b0));
  FDRE \data_p1_reg[25] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[25]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [23]),
        .R(1'b0));
  FDRE \data_p1_reg[26] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[26]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [24]),
        .R(1'b0));
  FDRE \data_p1_reg[27] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[27]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [25]),
        .R(1'b0));
  FDRE \data_p1_reg[28] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[28]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [26]),
        .R(1'b0));
  FDRE \data_p1_reg[29] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[29]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [27]),
        .R(1'b0));
  FDRE \data_p1_reg[2] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[2]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [0]),
        .R(1'b0));
  FDRE \data_p1_reg[30] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[30]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [28]),
        .R(1'b0));
  FDRE \data_p1_reg[31] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[31]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [29]),
        .R(1'b0));
  FDRE \data_p1_reg[32] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[32]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [30]),
        .R(1'b0));
  FDRE \data_p1_reg[33] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[33]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [31]),
        .R(1'b0));
  FDRE \data_p1_reg[34] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[34]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [32]),
        .R(1'b0));
  FDRE \data_p1_reg[35] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[35]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [33]),
        .R(1'b0));
  FDRE \data_p1_reg[36] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[36]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [34]),
        .R(1'b0));
  FDRE \data_p1_reg[37] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[37]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [35]),
        .R(1'b0));
  FDRE \data_p1_reg[38] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[38]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [36]),
        .R(1'b0));
  FDRE \data_p1_reg[39] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[39]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [37]),
        .R(1'b0));
  FDRE \data_p1_reg[3] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[3]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [1]),
        .R(1'b0));
  FDRE \data_p1_reg[40] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[40]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [38]),
        .R(1'b0));
  FDRE \data_p1_reg[41] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[41]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [39]),
        .R(1'b0));
  FDRE \data_p1_reg[42] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[42]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [40]),
        .R(1'b0));
  FDRE \data_p1_reg[43] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[43]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [41]),
        .R(1'b0));
  FDRE \data_p1_reg[44] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[44]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [42]),
        .R(1'b0));
  FDRE \data_p1_reg[45] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[45]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [43]),
        .R(1'b0));
  FDRE \data_p1_reg[46] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[46]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [44]),
        .R(1'b0));
  FDRE \data_p1_reg[47] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[47]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [45]),
        .R(1'b0));
  FDRE \data_p1_reg[48] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[48]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [46]),
        .R(1'b0));
  FDRE \data_p1_reg[49] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[49]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [47]),
        .R(1'b0));
  FDRE \data_p1_reg[4] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[4]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [2]),
        .R(1'b0));
  FDRE \data_p1_reg[50] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[50]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [48]),
        .R(1'b0));
  FDRE \data_p1_reg[51] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[51]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [49]),
        .R(1'b0));
  FDRE \data_p1_reg[52] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[52]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [50]),
        .R(1'b0));
  FDRE \data_p1_reg[53] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[53]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [51]),
        .R(1'b0));
  FDRE \data_p1_reg[54] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[54]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [52]),
        .R(1'b0));
  FDRE \data_p1_reg[55] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[55]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [53]),
        .R(1'b0));
  FDRE \data_p1_reg[56] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[56]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [54]),
        .R(1'b0));
  FDRE \data_p1_reg[57] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[57]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [55]),
        .R(1'b0));
  FDRE \data_p1_reg[58] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[58]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [56]),
        .R(1'b0));
  FDRE \data_p1_reg[59] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[59]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [57]),
        .R(1'b0));
  FDRE \data_p1_reg[5] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[5]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [3]),
        .R(1'b0));
  FDRE \data_p1_reg[60] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[60]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [58]),
        .R(1'b0));
  FDRE \data_p1_reg[61] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[61]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [59]),
        .R(1'b0));
  FDRE \data_p1_reg[62] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[62]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [60]),
        .R(1'b0));
  FDRE \data_p1_reg[63] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[63]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [61]),
        .R(1'b0));
  FDRE \data_p1_reg[66] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[66]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [62]),
        .R(1'b0));
  FDRE \data_p1_reg[67] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[67]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [63]),
        .R(1'b0));
  FDRE \data_p1_reg[68] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[68]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [64]),
        .R(1'b0));
  FDRE \data_p1_reg[69] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[69]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [65]),
        .R(1'b0));
  FDRE \data_p1_reg[6] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[6]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [4]),
        .R(1'b0));
  FDRE \data_p1_reg[70] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[70]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [66]),
        .R(1'b0));
  FDRE \data_p1_reg[71] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[71]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [67]),
        .R(1'b0));
  FDRE \data_p1_reg[72] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[72]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [68]),
        .R(1'b0));
  FDRE \data_p1_reg[73] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[73]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [69]),
        .R(1'b0));
  FDRE \data_p1_reg[74] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[74]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [70]),
        .R(1'b0));
  FDRE \data_p1_reg[75] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[75]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [71]),
        .R(1'b0));
  FDRE \data_p1_reg[76] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[76]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [72]),
        .R(1'b0));
  FDRE \data_p1_reg[77] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[77]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [73]),
        .R(1'b0));
  FDRE \data_p1_reg[78] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[78]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [74]),
        .R(1'b0));
  FDRE \data_p1_reg[79] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[79]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [75]),
        .R(1'b0));
  FDRE \data_p1_reg[7] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[7]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [5]),
        .R(1'b0));
  FDRE \data_p1_reg[80] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[80]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [76]),
        .R(1'b0));
  FDRE \data_p1_reg[81] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[81]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [77]),
        .R(1'b0));
  FDRE \data_p1_reg[82] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[82]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [78]),
        .R(1'b0));
  FDRE \data_p1_reg[83] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[83]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [79]),
        .R(1'b0));
  FDRE \data_p1_reg[84] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[84]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [80]),
        .R(1'b0));
  FDRE \data_p1_reg[85] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[85]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [81]),
        .R(1'b0));
  FDRE \data_p1_reg[86] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[86]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [82]),
        .R(1'b0));
  FDRE \data_p1_reg[87] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[87]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [83]),
        .R(1'b0));
  FDRE \data_p1_reg[88] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[88]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [84]),
        .R(1'b0));
  FDRE \data_p1_reg[89] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[89]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [85]),
        .R(1'b0));
  FDRE \data_p1_reg[8] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[8]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [6]),
        .R(1'b0));
  FDRE \data_p1_reg[90] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[90]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [86]),
        .R(1'b0));
  FDRE \data_p1_reg[91] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[91]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [87]),
        .R(1'b0));
  FDRE \data_p1_reg[92] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[92]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [88]),
        .R(1'b0));
  FDRE \data_p1_reg[93] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[93]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [89]),
        .R(1'b0));
  FDRE \data_p1_reg[94] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[94]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [90]),
        .R(1'b0));
  FDRE \data_p1_reg[95] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[95]_i_2_n_0 ),
        .Q(\data_p1_reg[95]_0 [91]),
        .R(1'b0));
  FDRE \data_p1_reg[9] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[9]_i_1_n_0 ),
        .Q(\data_p1_reg[95]_0 [7]),
        .R(1'b0));
  FDRE \data_p2_reg[10] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [8]),
        .Q(\data_p2_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \data_p2_reg[11] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [9]),
        .Q(\data_p2_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \data_p2_reg[12] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [10]),
        .Q(\data_p2_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \data_p2_reg[13] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [11]),
        .Q(\data_p2_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \data_p2_reg[14] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [12]),
        .Q(\data_p2_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \data_p2_reg[15] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [13]),
        .Q(\data_p2_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \data_p2_reg[16] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [14]),
        .Q(\data_p2_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \data_p2_reg[17] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [15]),
        .Q(\data_p2_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \data_p2_reg[18] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [16]),
        .Q(\data_p2_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \data_p2_reg[19] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [17]),
        .Q(\data_p2_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \data_p2_reg[20] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [18]),
        .Q(\data_p2_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \data_p2_reg[21] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [19]),
        .Q(\data_p2_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \data_p2_reg[22] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [20]),
        .Q(\data_p2_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \data_p2_reg[23] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [21]),
        .Q(\data_p2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \data_p2_reg[24] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [22]),
        .Q(\data_p2_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \data_p2_reg[25] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [23]),
        .Q(\data_p2_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \data_p2_reg[26] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [24]),
        .Q(\data_p2_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \data_p2_reg[27] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [25]),
        .Q(\data_p2_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \data_p2_reg[28] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [26]),
        .Q(\data_p2_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \data_p2_reg[29] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [27]),
        .Q(\data_p2_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \data_p2_reg[2] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [0]),
        .Q(\data_p2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_p2_reg[30] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [28]),
        .Q(\data_p2_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \data_p2_reg[31] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [29]),
        .Q(\data_p2_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \data_p2_reg[32] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [30]),
        .Q(\data_p2_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \data_p2_reg[33] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [31]),
        .Q(\data_p2_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \data_p2_reg[34] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [32]),
        .Q(\data_p2_reg_n_0_[34] ),
        .R(1'b0));
  FDRE \data_p2_reg[35] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [33]),
        .Q(\data_p2_reg_n_0_[35] ),
        .R(1'b0));
  FDRE \data_p2_reg[36] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [34]),
        .Q(\data_p2_reg_n_0_[36] ),
        .R(1'b0));
  FDRE \data_p2_reg[37] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [35]),
        .Q(\data_p2_reg_n_0_[37] ),
        .R(1'b0));
  FDRE \data_p2_reg[38] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [36]),
        .Q(\data_p2_reg_n_0_[38] ),
        .R(1'b0));
  FDRE \data_p2_reg[39] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [37]),
        .Q(\data_p2_reg_n_0_[39] ),
        .R(1'b0));
  FDRE \data_p2_reg[3] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [1]),
        .Q(\data_p2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \data_p2_reg[40] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [38]),
        .Q(\data_p2_reg_n_0_[40] ),
        .R(1'b0));
  FDRE \data_p2_reg[41] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [39]),
        .Q(\data_p2_reg_n_0_[41] ),
        .R(1'b0));
  FDRE \data_p2_reg[42] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [40]),
        .Q(\data_p2_reg_n_0_[42] ),
        .R(1'b0));
  FDRE \data_p2_reg[43] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [41]),
        .Q(\data_p2_reg_n_0_[43] ),
        .R(1'b0));
  FDRE \data_p2_reg[44] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [42]),
        .Q(\data_p2_reg_n_0_[44] ),
        .R(1'b0));
  FDRE \data_p2_reg[45] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [43]),
        .Q(\data_p2_reg_n_0_[45] ),
        .R(1'b0));
  FDRE \data_p2_reg[46] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [44]),
        .Q(\data_p2_reg_n_0_[46] ),
        .R(1'b0));
  FDRE \data_p2_reg[47] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [45]),
        .Q(\data_p2_reg_n_0_[47] ),
        .R(1'b0));
  FDRE \data_p2_reg[48] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [46]),
        .Q(\data_p2_reg_n_0_[48] ),
        .R(1'b0));
  FDRE \data_p2_reg[49] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [47]),
        .Q(\data_p2_reg_n_0_[49] ),
        .R(1'b0));
  FDRE \data_p2_reg[4] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [2]),
        .Q(\data_p2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \data_p2_reg[50] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [48]),
        .Q(\data_p2_reg_n_0_[50] ),
        .R(1'b0));
  FDRE \data_p2_reg[51] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [49]),
        .Q(\data_p2_reg_n_0_[51] ),
        .R(1'b0));
  FDRE \data_p2_reg[52] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [50]),
        .Q(\data_p2_reg_n_0_[52] ),
        .R(1'b0));
  FDRE \data_p2_reg[53] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [51]),
        .Q(\data_p2_reg_n_0_[53] ),
        .R(1'b0));
  FDRE \data_p2_reg[54] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [52]),
        .Q(\data_p2_reg_n_0_[54] ),
        .R(1'b0));
  FDRE \data_p2_reg[55] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [53]),
        .Q(\data_p2_reg_n_0_[55] ),
        .R(1'b0));
  FDRE \data_p2_reg[56] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [54]),
        .Q(\data_p2_reg_n_0_[56] ),
        .R(1'b0));
  FDRE \data_p2_reg[57] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [55]),
        .Q(\data_p2_reg_n_0_[57] ),
        .R(1'b0));
  FDRE \data_p2_reg[58] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [56]),
        .Q(\data_p2_reg_n_0_[58] ),
        .R(1'b0));
  FDRE \data_p2_reg[59] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [57]),
        .Q(\data_p2_reg_n_0_[59] ),
        .R(1'b0));
  FDRE \data_p2_reg[5] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [3]),
        .Q(\data_p2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \data_p2_reg[60] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [58]),
        .Q(\data_p2_reg_n_0_[60] ),
        .R(1'b0));
  FDRE \data_p2_reg[61] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [59]),
        .Q(\data_p2_reg_n_0_[61] ),
        .R(1'b0));
  FDRE \data_p2_reg[62] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [60]),
        .Q(\data_p2_reg_n_0_[62] ),
        .R(1'b0));
  FDRE \data_p2_reg[63] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [61]),
        .Q(\data_p2_reg_n_0_[63] ),
        .R(1'b0));
  FDRE \data_p2_reg[66] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [62]),
        .Q(\data_p2_reg_n_0_[66] ),
        .R(1'b0));
  FDRE \data_p2_reg[67] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [63]),
        .Q(\data_p2_reg_n_0_[67] ),
        .R(1'b0));
  FDRE \data_p2_reg[68] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [64]),
        .Q(\data_p2_reg_n_0_[68] ),
        .R(1'b0));
  FDRE \data_p2_reg[69] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [65]),
        .Q(\data_p2_reg_n_0_[69] ),
        .R(1'b0));
  FDRE \data_p2_reg[6] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [4]),
        .Q(\data_p2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \data_p2_reg[70] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [66]),
        .Q(\data_p2_reg_n_0_[70] ),
        .R(1'b0));
  FDRE \data_p2_reg[71] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [67]),
        .Q(\data_p2_reg_n_0_[71] ),
        .R(1'b0));
  FDRE \data_p2_reg[72] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [68]),
        .Q(\data_p2_reg_n_0_[72] ),
        .R(1'b0));
  FDRE \data_p2_reg[73] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [69]),
        .Q(\data_p2_reg_n_0_[73] ),
        .R(1'b0));
  FDRE \data_p2_reg[74] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [70]),
        .Q(\data_p2_reg_n_0_[74] ),
        .R(1'b0));
  FDRE \data_p2_reg[75] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [71]),
        .Q(\data_p2_reg_n_0_[75] ),
        .R(1'b0));
  FDRE \data_p2_reg[76] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [72]),
        .Q(\data_p2_reg_n_0_[76] ),
        .R(1'b0));
  FDRE \data_p2_reg[77] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [73]),
        .Q(\data_p2_reg_n_0_[77] ),
        .R(1'b0));
  FDRE \data_p2_reg[78] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [74]),
        .Q(\data_p2_reg_n_0_[78] ),
        .R(1'b0));
  FDRE \data_p2_reg[79] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [75]),
        .Q(\data_p2_reg_n_0_[79] ),
        .R(1'b0));
  FDRE \data_p2_reg[7] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [5]),
        .Q(\data_p2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \data_p2_reg[80] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [76]),
        .Q(\data_p2_reg_n_0_[80] ),
        .R(1'b0));
  FDRE \data_p2_reg[81] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [77]),
        .Q(\data_p2_reg_n_0_[81] ),
        .R(1'b0));
  FDRE \data_p2_reg[82] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [78]),
        .Q(\data_p2_reg_n_0_[82] ),
        .R(1'b0));
  FDRE \data_p2_reg[83] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [79]),
        .Q(\data_p2_reg_n_0_[83] ),
        .R(1'b0));
  FDRE \data_p2_reg[84] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [80]),
        .Q(\data_p2_reg_n_0_[84] ),
        .R(1'b0));
  FDRE \data_p2_reg[85] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [81]),
        .Q(\data_p2_reg_n_0_[85] ),
        .R(1'b0));
  FDRE \data_p2_reg[86] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [82]),
        .Q(\data_p2_reg_n_0_[86] ),
        .R(1'b0));
  FDRE \data_p2_reg[87] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [83]),
        .Q(\data_p2_reg_n_0_[87] ),
        .R(1'b0));
  FDRE \data_p2_reg[88] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [84]),
        .Q(\data_p2_reg_n_0_[88] ),
        .R(1'b0));
  FDRE \data_p2_reg[89] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [85]),
        .Q(\data_p2_reg_n_0_[89] ),
        .R(1'b0));
  FDRE \data_p2_reg[8] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [6]),
        .Q(\data_p2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \data_p2_reg[90] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [86]),
        .Q(\data_p2_reg_n_0_[90] ),
        .R(1'b0));
  FDRE \data_p2_reg[91] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [87]),
        .Q(\data_p2_reg_n_0_[91] ),
        .R(1'b0));
  FDRE \data_p2_reg[92] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [88]),
        .Q(\data_p2_reg_n_0_[92] ),
        .R(1'b0));
  FDRE \data_p2_reg[93] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [89]),
        .Q(\data_p2_reg_n_0_[93] ),
        .R(1'b0));
  FDRE \data_p2_reg[94] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [90]),
        .Q(\data_p2_reg_n_0_[94] ),
        .R(1'b0));
  FDRE \data_p2_reg[95] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [91]),
        .Q(\data_p2_reg_n_0_[95] ),
        .R(1'b0));
  FDRE \data_p2_reg[9] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [7]),
        .Q(\data_p2_reg_n_0_[9] ),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[13]_i_1 
       (.CI(\end_addr_reg[9]_i_1_n_0 ),
        .CO({\end_addr_reg[13]_i_1_n_0 ,\end_addr_reg[13]_i_1_n_1 ,\end_addr_reg[13]_i_1_n_2 ,\end_addr_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [11:8]),
        .O(\data_p1_reg[63]_0 [11:8]),
        .S(\end_addr_reg[13] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[17]_i_1 
       (.CI(\end_addr_reg[13]_i_1_n_0 ),
        .CO({\end_addr_reg[17]_i_1_n_0 ,\end_addr_reg[17]_i_1_n_1 ,\end_addr_reg[17]_i_1_n_2 ,\end_addr_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [15:12]),
        .O(\data_p1_reg[63]_0 [15:12]),
        .S(\end_addr_reg[17] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[21]_i_1 
       (.CI(\end_addr_reg[17]_i_1_n_0 ),
        .CO({\end_addr_reg[21]_i_1_n_0 ,\end_addr_reg[21]_i_1_n_1 ,\end_addr_reg[21]_i_1_n_2 ,\end_addr_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [19:16]),
        .O(\data_p1_reg[63]_0 [19:16]),
        .S(\end_addr_reg[21] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[25]_i_1 
       (.CI(\end_addr_reg[21]_i_1_n_0 ),
        .CO({\end_addr_reg[25]_i_1_n_0 ,\end_addr_reg[25]_i_1_n_1 ,\end_addr_reg[25]_i_1_n_2 ,\end_addr_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [23:20]),
        .O(\data_p1_reg[63]_0 [23:20]),
        .S(\end_addr_reg[25] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[29]_i_1 
       (.CI(\end_addr_reg[25]_i_1_n_0 ),
        .CO({\end_addr_reg[29]_i_1_n_0 ,\end_addr_reg[29]_i_1_n_1 ,\end_addr_reg[29]_i_1_n_2 ,\end_addr_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [27:24]),
        .O(\data_p1_reg[63]_0 [27:24]),
        .S(\end_addr_reg[29] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[33]_i_1 
       (.CI(\end_addr_reg[29]_i_1_n_0 ),
        .CO({\end_addr_reg[33]_i_1_n_0 ,\end_addr_reg[33]_i_1_n_1 ,\end_addr_reg[33]_i_1_n_2 ,\end_addr_reg[33]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\data_p1_reg[95]_0 [29:28]}),
        .O(\data_p1_reg[63]_0 [31:28]),
        .S({\data_p1_reg[95]_0 [31:30],\end_addr_reg[33] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[37]_i_1 
       (.CI(\end_addr_reg[33]_i_1_n_0 ),
        .CO({\end_addr_reg[37]_i_1_n_0 ,\end_addr_reg[37]_i_1_n_1 ,\end_addr_reg[37]_i_1_n_2 ,\end_addr_reg[37]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [35:32]),
        .S(\data_p1_reg[95]_0 [35:32]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[41]_i_1 
       (.CI(\end_addr_reg[37]_i_1_n_0 ),
        .CO({\end_addr_reg[41]_i_1_n_0 ,\end_addr_reg[41]_i_1_n_1 ,\end_addr_reg[41]_i_1_n_2 ,\end_addr_reg[41]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [39:36]),
        .S(\data_p1_reg[95]_0 [39:36]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[45]_i_1 
       (.CI(\end_addr_reg[41]_i_1_n_0 ),
        .CO({\end_addr_reg[45]_i_1_n_0 ,\end_addr_reg[45]_i_1_n_1 ,\end_addr_reg[45]_i_1_n_2 ,\end_addr_reg[45]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [43:40]),
        .S(\data_p1_reg[95]_0 [43:40]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[49]_i_1 
       (.CI(\end_addr_reg[45]_i_1_n_0 ),
        .CO({\end_addr_reg[49]_i_1_n_0 ,\end_addr_reg[49]_i_1_n_1 ,\end_addr_reg[49]_i_1_n_2 ,\end_addr_reg[49]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [47:44]),
        .S(\data_p1_reg[95]_0 [47:44]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[53]_i_1 
       (.CI(\end_addr_reg[49]_i_1_n_0 ),
        .CO({\end_addr_reg[53]_i_1_n_0 ,\end_addr_reg[53]_i_1_n_1 ,\end_addr_reg[53]_i_1_n_2 ,\end_addr_reg[53]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [51:48]),
        .S(\data_p1_reg[95]_0 [51:48]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[57]_i_1 
       (.CI(\end_addr_reg[53]_i_1_n_0 ),
        .CO({\end_addr_reg[57]_i_1_n_0 ,\end_addr_reg[57]_i_1_n_1 ,\end_addr_reg[57]_i_1_n_2 ,\end_addr_reg[57]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [55:52]),
        .S(\data_p1_reg[95]_0 [55:52]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[5]_i_1 
       (.CI(1'b0),
        .CO({\end_addr_reg[5]_i_1_n_0 ,\end_addr_reg[5]_i_1_n_1 ,\end_addr_reg[5]_i_1_n_2 ,\end_addr_reg[5]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [3:0]),
        .O(\data_p1_reg[63]_0 [3:0]),
        .S(\end_addr_reg[5] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[61]_i_1 
       (.CI(\end_addr_reg[57]_i_1_n_0 ),
        .CO({\end_addr_reg[61]_i_1_n_0 ,\end_addr_reg[61]_i_1_n_1 ,\end_addr_reg[61]_i_1_n_2 ,\end_addr_reg[61]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [59:56]),
        .S(\data_p1_reg[95]_0 [59:56]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[63]_i_1 
       (.CI(\end_addr_reg[61]_i_1_n_0 ),
        .CO({\NLW_end_addr_reg[63]_i_1_CO_UNCONNECTED [3:1],\end_addr_reg[63]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_end_addr_reg[63]_i_1_O_UNCONNECTED [3:2],\data_p1_reg[63]_0 [61:60]}),
        .S({1'b0,1'b0,\data_p1_reg[95]_0 [61:60]}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[9]_i_1 
       (.CI(\end_addr_reg[5]_i_1_n_0 ),
        .CO({\end_addr_reg[9]_i_1_n_0 ,\end_addr_reg[9]_i_1_n_1 ,\end_addr_reg[9]_i_1_n_2 ,\end_addr_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [7:4]),
        .O(\data_p1_reg[63]_0 [7:4]),
        .S(\end_addr_reg[9] ));
  LUT2 #(
    .INIT(4'h9)) 
    last_sect_carry__3_i_1
       (.I0(last_sect_buf_reg_0[3]),
        .I1(last_sect_buf_reg[4]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__3_i_2
       (.I0(last_sect_buf_reg[2]),
        .I1(last_sect_buf_reg_0[1]),
        .I2(last_sect_buf_reg[1]),
        .I3(last_sect_buf_reg_0[0]),
        .I4(last_sect_buf_reg[3]),
        .I5(last_sect_buf_reg_0[2]),
        .O(S[0]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'hAAFAA2FF)) 
    s_ready_t_i_1
       (.I0(s_ready_t_reg_0),
        .I1(AWVALID_Dummy),
        .I2(next_wreq),
        .I3(state__0[1]),
        .I4(state__0[0]),
        .O(s_ready_t_i_1_n_0));
  FDRE s_ready_t_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(s_ready_t_i_1_n_0),
        .Q(s_ready_t_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \sect_cnt[0]_i_1 
       (.I0(\data_p1_reg[95]_0 [10]),
        .I1(next_wreq),
        .I2(last_sect_buf_reg[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[10]_i_1 
       (.I0(\data_p1_reg[95]_0 [20]),
        .I1(next_wreq),
        .I2(sect_cnt0[9]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[11]_i_1 
       (.I0(\data_p1_reg[95]_0 [21]),
        .I1(next_wreq),
        .I2(sect_cnt0[10]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[12]_i_1 
       (.I0(\data_p1_reg[95]_0 [22]),
        .I1(next_wreq),
        .I2(sect_cnt0[11]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[13]_i_1 
       (.I0(\data_p1_reg[95]_0 [23]),
        .I1(next_wreq),
        .I2(sect_cnt0[12]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[14]_i_1 
       (.I0(\data_p1_reg[95]_0 [24]),
        .I1(next_wreq),
        .I2(sect_cnt0[13]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[15]_i_1 
       (.I0(\data_p1_reg[95]_0 [25]),
        .I1(next_wreq),
        .I2(sect_cnt0[14]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[16]_i_1 
       (.I0(\data_p1_reg[95]_0 [26]),
        .I1(next_wreq),
        .I2(sect_cnt0[15]),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[17]_i_1 
       (.I0(\data_p1_reg[95]_0 [27]),
        .I1(next_wreq),
        .I2(sect_cnt0[16]),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[18]_i_1 
       (.I0(\data_p1_reg[95]_0 [28]),
        .I1(next_wreq),
        .I2(sect_cnt0[17]),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[19]_i_1 
       (.I0(\data_p1_reg[95]_0 [29]),
        .I1(next_wreq),
        .I2(sect_cnt0[18]),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[1]_i_1 
       (.I0(\data_p1_reg[95]_0 [11]),
        .I1(next_wreq),
        .I2(sect_cnt0[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[20]_i_1 
       (.I0(\data_p1_reg[95]_0 [30]),
        .I1(next_wreq),
        .I2(sect_cnt0[19]),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[21]_i_1 
       (.I0(\data_p1_reg[95]_0 [31]),
        .I1(next_wreq),
        .I2(sect_cnt0[20]),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[22]_i_1 
       (.I0(\data_p1_reg[95]_0 [32]),
        .I1(next_wreq),
        .I2(sect_cnt0[21]),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[23]_i_1 
       (.I0(\data_p1_reg[95]_0 [33]),
        .I1(next_wreq),
        .I2(sect_cnt0[22]),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[24]_i_1 
       (.I0(\data_p1_reg[95]_0 [34]),
        .I1(next_wreq),
        .I2(sect_cnt0[23]),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[25]_i_1 
       (.I0(\data_p1_reg[95]_0 [35]),
        .I1(next_wreq),
        .I2(sect_cnt0[24]),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[26]_i_1 
       (.I0(\data_p1_reg[95]_0 [36]),
        .I1(next_wreq),
        .I2(sect_cnt0[25]),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[27]_i_1 
       (.I0(\data_p1_reg[95]_0 [37]),
        .I1(next_wreq),
        .I2(sect_cnt0[26]),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[28]_i_1 
       (.I0(\data_p1_reg[95]_0 [38]),
        .I1(next_wreq),
        .I2(sect_cnt0[27]),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[29]_i_1 
       (.I0(\data_p1_reg[95]_0 [39]),
        .I1(next_wreq),
        .I2(sect_cnt0[28]),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[2]_i_1 
       (.I0(\data_p1_reg[95]_0 [12]),
        .I1(next_wreq),
        .I2(sect_cnt0[1]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[30]_i_1 
       (.I0(\data_p1_reg[95]_0 [40]),
        .I1(next_wreq),
        .I2(sect_cnt0[29]),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[31]_i_1 
       (.I0(\data_p1_reg[95]_0 [41]),
        .I1(next_wreq),
        .I2(sect_cnt0[30]),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[32]_i_1 
       (.I0(\data_p1_reg[95]_0 [42]),
        .I1(next_wreq),
        .I2(sect_cnt0[31]),
        .O(D[32]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[33]_i_1 
       (.I0(\data_p1_reg[95]_0 [43]),
        .I1(next_wreq),
        .I2(sect_cnt0[32]),
        .O(D[33]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[34]_i_1 
       (.I0(\data_p1_reg[95]_0 [44]),
        .I1(next_wreq),
        .I2(sect_cnt0[33]),
        .O(D[34]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[35]_i_1 
       (.I0(\data_p1_reg[95]_0 [45]),
        .I1(next_wreq),
        .I2(sect_cnt0[34]),
        .O(D[35]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[36]_i_1 
       (.I0(\data_p1_reg[95]_0 [46]),
        .I1(next_wreq),
        .I2(sect_cnt0[35]),
        .O(D[36]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[37]_i_1 
       (.I0(\data_p1_reg[95]_0 [47]),
        .I1(next_wreq),
        .I2(sect_cnt0[36]),
        .O(D[37]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[38]_i_1 
       (.I0(\data_p1_reg[95]_0 [48]),
        .I1(next_wreq),
        .I2(sect_cnt0[37]),
        .O(D[38]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[39]_i_1 
       (.I0(\data_p1_reg[95]_0 [49]),
        .I1(next_wreq),
        .I2(sect_cnt0[38]),
        .O(D[39]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[3]_i_1 
       (.I0(\data_p1_reg[95]_0 [13]),
        .I1(next_wreq),
        .I2(sect_cnt0[2]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[40]_i_1 
       (.I0(\data_p1_reg[95]_0 [50]),
        .I1(next_wreq),
        .I2(sect_cnt0[39]),
        .O(D[40]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[41]_i_1 
       (.I0(\data_p1_reg[95]_0 [51]),
        .I1(next_wreq),
        .I2(sect_cnt0[40]),
        .O(D[41]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[42]_i_1 
       (.I0(\data_p1_reg[95]_0 [52]),
        .I1(next_wreq),
        .I2(sect_cnt0[41]),
        .O(D[42]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[43]_i_1 
       (.I0(\data_p1_reg[95]_0 [53]),
        .I1(next_wreq),
        .I2(sect_cnt0[42]),
        .O(D[43]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[44]_i_1 
       (.I0(\data_p1_reg[95]_0 [54]),
        .I1(next_wreq),
        .I2(sect_cnt0[43]),
        .O(D[44]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[45]_i_1 
       (.I0(\data_p1_reg[95]_0 [55]),
        .I1(next_wreq),
        .I2(sect_cnt0[44]),
        .O(D[45]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[46]_i_1 
       (.I0(\data_p1_reg[95]_0 [56]),
        .I1(next_wreq),
        .I2(sect_cnt0[45]),
        .O(D[46]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[47]_i_1 
       (.I0(\data_p1_reg[95]_0 [57]),
        .I1(next_wreq),
        .I2(sect_cnt0[46]),
        .O(D[47]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[48]_i_1 
       (.I0(\data_p1_reg[95]_0 [58]),
        .I1(next_wreq),
        .I2(sect_cnt0[47]),
        .O(D[48]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[49]_i_1 
       (.I0(\data_p1_reg[95]_0 [59]),
        .I1(next_wreq),
        .I2(sect_cnt0[48]),
        .O(D[49]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[4]_i_1 
       (.I0(\data_p1_reg[95]_0 [14]),
        .I1(next_wreq),
        .I2(sect_cnt0[3]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[50]_i_1 
       (.I0(\data_p1_reg[95]_0 [60]),
        .I1(next_wreq),
        .I2(sect_cnt0[49]),
        .O(D[50]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[51]_i_2 
       (.I0(\data_p1_reg[95]_0 [61]),
        .I1(next_wreq),
        .I2(sect_cnt0[50]),
        .O(D[51]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[5]_i_1 
       (.I0(\data_p1_reg[95]_0 [15]),
        .I1(next_wreq),
        .I2(sect_cnt0[4]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[6]_i_1 
       (.I0(\data_p1_reg[95]_0 [16]),
        .I1(next_wreq),
        .I2(sect_cnt0[5]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[7]_i_1 
       (.I0(\data_p1_reg[95]_0 [17]),
        .I1(next_wreq),
        .I2(sect_cnt0[6]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[8]_i_1 
       (.I0(\data_p1_reg[95]_0 [18]),
        .I1(next_wreq),
        .I2(sect_cnt0[7]),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[9]_i_1 
       (.I0(\data_p1_reg[95]_0 [19]),
        .I1(next_wreq),
        .I2(sect_cnt0[8]),
        .O(D[9]));
  LUT5 #(
    .INIT(32'hFF5F8800)) 
    \state[0]_i_1 
       (.I0(state),
        .I1(s_ready_t_reg_0),
        .I2(next_wreq),
        .I3(AWVALID_Dummy),
        .I4(Q),
        .O(\state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF75)) 
    \state[1]_i_1 
       (.I0(Q),
        .I1(AWVALID_Dummy),
        .I2(state),
        .I3(next_wreq),
        .O(\state[1]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(Q),
        .R(SR));
  FDSE \state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_reg_slice" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice_16
   (s_ready_t_reg_0,
    Q,
    D,
    \data_p1_reg[95]_0 ,
    S,
    \data_p1_reg[63]_0 ,
    SR,
    ap_clk,
    ARVALID_Dummy,
    next_rreq,
    sect_cnt0,
    last_sect_buf_reg,
    last_sect_buf_reg_0,
    \data_p2_reg[95]_0 ,
    \end_addr_reg[5] ,
    \end_addr_reg[9] ,
    \end_addr_reg[13] ,
    \end_addr_reg[17] ,
    \end_addr_reg[21] ,
    \end_addr_reg[25] ,
    \end_addr_reg[29] ,
    \end_addr_reg[33] ,
    E);
  output s_ready_t_reg_0;
  output [0:0]Q;
  output [51:0]D;
  output [91:0]\data_p1_reg[95]_0 ;
  output [1:0]S;
  output [61:0]\data_p1_reg[63]_0 ;
  input [0:0]SR;
  input ap_clk;
  input ARVALID_Dummy;
  input next_rreq;
  input [50:0]sect_cnt0;
  input [4:0]last_sect_buf_reg;
  input [3:0]last_sect_buf_reg_0;
  input [91:0]\data_p2_reg[95]_0 ;
  input [3:0]\end_addr_reg[5] ;
  input [3:0]\end_addr_reg[9] ;
  input [3:0]\end_addr_reg[13] ;
  input [3:0]\end_addr_reg[17] ;
  input [3:0]\end_addr_reg[21] ;
  input [3:0]\end_addr_reg[25] ;
  input [3:0]\end_addr_reg[29] ;
  input [1:0]\end_addr_reg[33] ;
  input [0:0]E;

  wire ARVALID_Dummy;
  wire [51:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire \data_p1[10]_i_1__1_n_0 ;
  wire \data_p1[11]_i_1__1_n_0 ;
  wire \data_p1[12]_i_1__1_n_0 ;
  wire \data_p1[13]_i_1__1_n_0 ;
  wire \data_p1[14]_i_1__1_n_0 ;
  wire \data_p1[15]_i_1__1_n_0 ;
  wire \data_p1[16]_i_1__1_n_0 ;
  wire \data_p1[17]_i_1__1_n_0 ;
  wire \data_p1[18]_i_1__1_n_0 ;
  wire \data_p1[19]_i_1__1_n_0 ;
  wire \data_p1[20]_i_1__1_n_0 ;
  wire \data_p1[21]_i_1__1_n_0 ;
  wire \data_p1[22]_i_1__1_n_0 ;
  wire \data_p1[23]_i_1__1_n_0 ;
  wire \data_p1[24]_i_1__1_n_0 ;
  wire \data_p1[25]_i_1__1_n_0 ;
  wire \data_p1[26]_i_1__1_n_0 ;
  wire \data_p1[27]_i_1__1_n_0 ;
  wire \data_p1[28]_i_1__1_n_0 ;
  wire \data_p1[29]_i_1__1_n_0 ;
  wire \data_p1[2]_i_1__1_n_0 ;
  wire \data_p1[30]_i_1__1_n_0 ;
  wire \data_p1[31]_i_1__1_n_0 ;
  wire \data_p1[32]_i_1__1_n_0 ;
  wire \data_p1[33]_i_1__1_n_0 ;
  wire \data_p1[34]_i_1__1_n_0 ;
  wire \data_p1[35]_i_1__1_n_0 ;
  wire \data_p1[36]_i_1__1_n_0 ;
  wire \data_p1[37]_i_1__1_n_0 ;
  wire \data_p1[38]_i_1__1_n_0 ;
  wire \data_p1[39]_i_1__1_n_0 ;
  wire \data_p1[3]_i_1__1_n_0 ;
  wire \data_p1[40]_i_1__1_n_0 ;
  wire \data_p1[41]_i_1__1_n_0 ;
  wire \data_p1[42]_i_1__1_n_0 ;
  wire \data_p1[43]_i_1__1_n_0 ;
  wire \data_p1[44]_i_1__1_n_0 ;
  wire \data_p1[45]_i_1__1_n_0 ;
  wire \data_p1[46]_i_1__1_n_0 ;
  wire \data_p1[47]_i_1__1_n_0 ;
  wire \data_p1[48]_i_1__1_n_0 ;
  wire \data_p1[49]_i_1__1_n_0 ;
  wire \data_p1[4]_i_1__1_n_0 ;
  wire \data_p1[50]_i_1__1_n_0 ;
  wire \data_p1[51]_i_1__1_n_0 ;
  wire \data_p1[52]_i_1__1_n_0 ;
  wire \data_p1[53]_i_1__1_n_0 ;
  wire \data_p1[54]_i_1__1_n_0 ;
  wire \data_p1[55]_i_1__1_n_0 ;
  wire \data_p1[56]_i_1__1_n_0 ;
  wire \data_p1[57]_i_1__1_n_0 ;
  wire \data_p1[58]_i_1__1_n_0 ;
  wire \data_p1[59]_i_1__1_n_0 ;
  wire \data_p1[5]_i_1__1_n_0 ;
  wire \data_p1[60]_i_1__1_n_0 ;
  wire \data_p1[61]_i_1__1_n_0 ;
  wire \data_p1[62]_i_1__1_n_0 ;
  wire \data_p1[63]_i_1__0_n_0 ;
  wire \data_p1[66]_i_1__1_n_0 ;
  wire \data_p1[67]_i_1__1_n_0 ;
  wire \data_p1[68]_i_1__0_n_0 ;
  wire \data_p1[69]_i_1__0_n_0 ;
  wire \data_p1[6]_i_1__1_n_0 ;
  wire \data_p1[70]_i_1__0_n_0 ;
  wire \data_p1[71]_i_1__0_n_0 ;
  wire \data_p1[72]_i_1__0_n_0 ;
  wire \data_p1[73]_i_1__0_n_0 ;
  wire \data_p1[74]_i_1__0_n_0 ;
  wire \data_p1[75]_i_1__0_n_0 ;
  wire \data_p1[76]_i_1__0_n_0 ;
  wire \data_p1[77]_i_1__0_n_0 ;
  wire \data_p1[78]_i_1__0_n_0 ;
  wire \data_p1[79]_i_1__0_n_0 ;
  wire \data_p1[7]_i_1__1_n_0 ;
  wire \data_p1[80]_i_1__0_n_0 ;
  wire \data_p1[81]_i_1__0_n_0 ;
  wire \data_p1[82]_i_1__0_n_0 ;
  wire \data_p1[83]_i_1__0_n_0 ;
  wire \data_p1[84]_i_1__0_n_0 ;
  wire \data_p1[85]_i_1__0_n_0 ;
  wire \data_p1[86]_i_1__0_n_0 ;
  wire \data_p1[87]_i_1__0_n_0 ;
  wire \data_p1[88]_i_1__0_n_0 ;
  wire \data_p1[89]_i_1__0_n_0 ;
  wire \data_p1[8]_i_1__1_n_0 ;
  wire \data_p1[90]_i_1__0_n_0 ;
  wire \data_p1[91]_i_1__0_n_0 ;
  wire \data_p1[92]_i_1__0_n_0 ;
  wire \data_p1[93]_i_1__0_n_0 ;
  wire \data_p1[94]_i_1__0_n_0 ;
  wire \data_p1[95]_i_2__0_n_0 ;
  wire \data_p1[9]_i_1__1_n_0 ;
  wire [61:0]\data_p1_reg[63]_0 ;
  wire [91:0]\data_p1_reg[95]_0 ;
  wire [95:2]data_p2;
  wire [91:0]\data_p2_reg[95]_0 ;
  wire [3:0]\end_addr_reg[13] ;
  wire \end_addr_reg[13]_i_1__0_n_0 ;
  wire \end_addr_reg[13]_i_1__0_n_1 ;
  wire \end_addr_reg[13]_i_1__0_n_2 ;
  wire \end_addr_reg[13]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[17] ;
  wire \end_addr_reg[17]_i_1__0_n_0 ;
  wire \end_addr_reg[17]_i_1__0_n_1 ;
  wire \end_addr_reg[17]_i_1__0_n_2 ;
  wire \end_addr_reg[17]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[21] ;
  wire \end_addr_reg[21]_i_1__0_n_0 ;
  wire \end_addr_reg[21]_i_1__0_n_1 ;
  wire \end_addr_reg[21]_i_1__0_n_2 ;
  wire \end_addr_reg[21]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[25] ;
  wire \end_addr_reg[25]_i_1__0_n_0 ;
  wire \end_addr_reg[25]_i_1__0_n_1 ;
  wire \end_addr_reg[25]_i_1__0_n_2 ;
  wire \end_addr_reg[25]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[29] ;
  wire \end_addr_reg[29]_i_1__0_n_0 ;
  wire \end_addr_reg[29]_i_1__0_n_1 ;
  wire \end_addr_reg[29]_i_1__0_n_2 ;
  wire \end_addr_reg[29]_i_1__0_n_3 ;
  wire [1:0]\end_addr_reg[33] ;
  wire \end_addr_reg[33]_i_1__0_n_0 ;
  wire \end_addr_reg[33]_i_1__0_n_1 ;
  wire \end_addr_reg[33]_i_1__0_n_2 ;
  wire \end_addr_reg[33]_i_1__0_n_3 ;
  wire \end_addr_reg[37]_i_1__0_n_0 ;
  wire \end_addr_reg[37]_i_1__0_n_1 ;
  wire \end_addr_reg[37]_i_1__0_n_2 ;
  wire \end_addr_reg[37]_i_1__0_n_3 ;
  wire \end_addr_reg[41]_i_1__0_n_0 ;
  wire \end_addr_reg[41]_i_1__0_n_1 ;
  wire \end_addr_reg[41]_i_1__0_n_2 ;
  wire \end_addr_reg[41]_i_1__0_n_3 ;
  wire \end_addr_reg[45]_i_1__0_n_0 ;
  wire \end_addr_reg[45]_i_1__0_n_1 ;
  wire \end_addr_reg[45]_i_1__0_n_2 ;
  wire \end_addr_reg[45]_i_1__0_n_3 ;
  wire \end_addr_reg[49]_i_1__0_n_0 ;
  wire \end_addr_reg[49]_i_1__0_n_1 ;
  wire \end_addr_reg[49]_i_1__0_n_2 ;
  wire \end_addr_reg[49]_i_1__0_n_3 ;
  wire \end_addr_reg[53]_i_1__0_n_0 ;
  wire \end_addr_reg[53]_i_1__0_n_1 ;
  wire \end_addr_reg[53]_i_1__0_n_2 ;
  wire \end_addr_reg[53]_i_1__0_n_3 ;
  wire \end_addr_reg[57]_i_1__0_n_0 ;
  wire \end_addr_reg[57]_i_1__0_n_1 ;
  wire \end_addr_reg[57]_i_1__0_n_2 ;
  wire \end_addr_reg[57]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[5] ;
  wire \end_addr_reg[5]_i_1__0_n_0 ;
  wire \end_addr_reg[5]_i_1__0_n_1 ;
  wire \end_addr_reg[5]_i_1__0_n_2 ;
  wire \end_addr_reg[5]_i_1__0_n_3 ;
  wire \end_addr_reg[61]_i_1__0_n_0 ;
  wire \end_addr_reg[61]_i_1__0_n_1 ;
  wire \end_addr_reg[61]_i_1__0_n_2 ;
  wire \end_addr_reg[61]_i_1__0_n_3 ;
  wire \end_addr_reg[63]_i_1__0_n_3 ;
  wire [3:0]\end_addr_reg[9] ;
  wire \end_addr_reg[9]_i_1__0_n_0 ;
  wire \end_addr_reg[9]_i_1__0_n_1 ;
  wire \end_addr_reg[9]_i_1__0_n_2 ;
  wire \end_addr_reg[9]_i_1__0_n_3 ;
  wire [4:0]last_sect_buf_reg;
  wire [3:0]last_sect_buf_reg_0;
  wire load_p1;
  wire [1:0]next__0;
  wire next_rreq;
  wire s_ready_t_i_1__1_n_0;
  wire s_ready_t_reg_0;
  wire [50:0]sect_cnt0;
  wire [1:1]state;
  wire \state[0]_i_1__1_n_0 ;
  wire \state[1]_i_1__1_n_0 ;
  wire [1:0]state__0;
  wire [3:1]\NLW_end_addr_reg[63]_i_1__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_end_addr_reg[63]_i_1__0_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h0230)) 
    \FSM_sequential_state[0]_i_1__1 
       (.I0(ARVALID_Dummy),
        .I1(next_rreq),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(next__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'h00C3F088)) 
    \FSM_sequential_state[1]_i_1__1 
       (.I0(s_ready_t_reg_0),
        .I1(ARVALID_Dummy),
        .I2(next_rreq),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .O(next__0[1]));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[0]),
        .Q(state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[1]),
        .Q(state__0[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[10]_i_1__1 
       (.I0(data_p2[10]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [8]),
        .O(\data_p1[10]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[11]_i_1__1 
       (.I0(data_p2[11]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [9]),
        .O(\data_p1[11]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[12]_i_1__1 
       (.I0(data_p2[12]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [10]),
        .O(\data_p1[12]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[13]_i_1__1 
       (.I0(data_p2[13]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [11]),
        .O(\data_p1[13]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[14]_i_1__1 
       (.I0(data_p2[14]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [12]),
        .O(\data_p1[14]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[15]_i_1__1 
       (.I0(data_p2[15]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [13]),
        .O(\data_p1[15]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[16]_i_1__1 
       (.I0(data_p2[16]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [14]),
        .O(\data_p1[16]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[17]_i_1__1 
       (.I0(data_p2[17]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [15]),
        .O(\data_p1[17]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[18]_i_1__1 
       (.I0(data_p2[18]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [16]),
        .O(\data_p1[18]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[19]_i_1__1 
       (.I0(data_p2[19]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [17]),
        .O(\data_p1[19]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[20]_i_1__1 
       (.I0(data_p2[20]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [18]),
        .O(\data_p1[20]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[21]_i_1__1 
       (.I0(data_p2[21]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [19]),
        .O(\data_p1[21]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[22]_i_1__1 
       (.I0(data_p2[22]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [20]),
        .O(\data_p1[22]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[23]_i_1__1 
       (.I0(data_p2[23]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [21]),
        .O(\data_p1[23]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[24]_i_1__1 
       (.I0(data_p2[24]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [22]),
        .O(\data_p1[24]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[25]_i_1__1 
       (.I0(data_p2[25]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [23]),
        .O(\data_p1[25]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[26]_i_1__1 
       (.I0(data_p2[26]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [24]),
        .O(\data_p1[26]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[27]_i_1__1 
       (.I0(data_p2[27]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [25]),
        .O(\data_p1[27]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[28]_i_1__1 
       (.I0(data_p2[28]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [26]),
        .O(\data_p1[28]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[29]_i_1__1 
       (.I0(data_p2[29]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [27]),
        .O(\data_p1[29]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[2]_i_1__1 
       (.I0(data_p2[2]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [0]),
        .O(\data_p1[2]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[30]_i_1__1 
       (.I0(data_p2[30]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [28]),
        .O(\data_p1[30]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[31]_i_1__1 
       (.I0(data_p2[31]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [29]),
        .O(\data_p1[31]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[32]_i_1__1 
       (.I0(data_p2[32]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [30]),
        .O(\data_p1[32]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[33]_i_1__1 
       (.I0(data_p2[33]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [31]),
        .O(\data_p1[33]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[34]_i_1__1 
       (.I0(data_p2[34]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [32]),
        .O(\data_p1[34]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[35]_i_1__1 
       (.I0(data_p2[35]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [33]),
        .O(\data_p1[35]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[36]_i_1__1 
       (.I0(data_p2[36]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [34]),
        .O(\data_p1[36]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[37]_i_1__1 
       (.I0(data_p2[37]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [35]),
        .O(\data_p1[37]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[38]_i_1__1 
       (.I0(data_p2[38]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [36]),
        .O(\data_p1[38]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[39]_i_1__1 
       (.I0(data_p2[39]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [37]),
        .O(\data_p1[39]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[3]_i_1__1 
       (.I0(data_p2[3]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [1]),
        .O(\data_p1[3]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[40]_i_1__1 
       (.I0(data_p2[40]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [38]),
        .O(\data_p1[40]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[41]_i_1__1 
       (.I0(data_p2[41]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [39]),
        .O(\data_p1[41]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[42]_i_1__1 
       (.I0(data_p2[42]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [40]),
        .O(\data_p1[42]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[43]_i_1__1 
       (.I0(data_p2[43]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [41]),
        .O(\data_p1[43]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[44]_i_1__1 
       (.I0(data_p2[44]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [42]),
        .O(\data_p1[44]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[45]_i_1__1 
       (.I0(data_p2[45]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [43]),
        .O(\data_p1[45]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[46]_i_1__1 
       (.I0(data_p2[46]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [44]),
        .O(\data_p1[46]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[47]_i_1__1 
       (.I0(data_p2[47]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [45]),
        .O(\data_p1[47]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[48]_i_1__1 
       (.I0(data_p2[48]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [46]),
        .O(\data_p1[48]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[49]_i_1__1 
       (.I0(data_p2[49]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [47]),
        .O(\data_p1[49]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[4]_i_1__1 
       (.I0(data_p2[4]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [2]),
        .O(\data_p1[4]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[50]_i_1__1 
       (.I0(data_p2[50]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [48]),
        .O(\data_p1[50]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[51]_i_1__1 
       (.I0(data_p2[51]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [49]),
        .O(\data_p1[51]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[52]_i_1__1 
       (.I0(data_p2[52]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [50]),
        .O(\data_p1[52]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[53]_i_1__1 
       (.I0(data_p2[53]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [51]),
        .O(\data_p1[53]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[54]_i_1__1 
       (.I0(data_p2[54]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [52]),
        .O(\data_p1[54]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[55]_i_1__1 
       (.I0(data_p2[55]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [53]),
        .O(\data_p1[55]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[56]_i_1__1 
       (.I0(data_p2[56]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [54]),
        .O(\data_p1[56]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[57]_i_1__1 
       (.I0(data_p2[57]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [55]),
        .O(\data_p1[57]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[58]_i_1__1 
       (.I0(data_p2[58]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [56]),
        .O(\data_p1[58]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[59]_i_1__1 
       (.I0(data_p2[59]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [57]),
        .O(\data_p1[59]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[5]_i_1__1 
       (.I0(data_p2[5]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [3]),
        .O(\data_p1[5]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[60]_i_1__1 
       (.I0(data_p2[60]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [58]),
        .O(\data_p1[60]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[61]_i_1__1 
       (.I0(data_p2[61]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [59]),
        .O(\data_p1[61]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[62]_i_1__1 
       (.I0(data_p2[62]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [60]),
        .O(\data_p1[62]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[63]_i_1__0 
       (.I0(data_p2[63]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [61]),
        .O(\data_p1[63]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[66]_i_1__1 
       (.I0(data_p2[66]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [62]),
        .O(\data_p1[66]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[67]_i_1__1 
       (.I0(data_p2[67]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [63]),
        .O(\data_p1[67]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[68]_i_1__0 
       (.I0(data_p2[68]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [64]),
        .O(\data_p1[68]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[69]_i_1__0 
       (.I0(data_p2[69]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [65]),
        .O(\data_p1[69]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[6]_i_1__1 
       (.I0(data_p2[6]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [4]),
        .O(\data_p1[6]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[70]_i_1__0 
       (.I0(data_p2[70]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [66]),
        .O(\data_p1[70]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[71]_i_1__0 
       (.I0(data_p2[71]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [67]),
        .O(\data_p1[71]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[72]_i_1__0 
       (.I0(data_p2[72]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [68]),
        .O(\data_p1[72]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[73]_i_1__0 
       (.I0(data_p2[73]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [69]),
        .O(\data_p1[73]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[74]_i_1__0 
       (.I0(data_p2[74]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [70]),
        .O(\data_p1[74]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[75]_i_1__0 
       (.I0(data_p2[75]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [71]),
        .O(\data_p1[75]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[76]_i_1__0 
       (.I0(data_p2[76]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [72]),
        .O(\data_p1[76]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[77]_i_1__0 
       (.I0(data_p2[77]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [73]),
        .O(\data_p1[77]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[78]_i_1__0 
       (.I0(data_p2[78]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [74]),
        .O(\data_p1[78]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[79]_i_1__0 
       (.I0(data_p2[79]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [75]),
        .O(\data_p1[79]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[7]_i_1__1 
       (.I0(data_p2[7]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [5]),
        .O(\data_p1[7]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[80]_i_1__0 
       (.I0(data_p2[80]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [76]),
        .O(\data_p1[80]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[81]_i_1__0 
       (.I0(data_p2[81]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [77]),
        .O(\data_p1[81]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[82]_i_1__0 
       (.I0(data_p2[82]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [78]),
        .O(\data_p1[82]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[83]_i_1__0 
       (.I0(data_p2[83]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [79]),
        .O(\data_p1[83]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[84]_i_1__0 
       (.I0(data_p2[84]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [80]),
        .O(\data_p1[84]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[85]_i_1__0 
       (.I0(data_p2[85]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [81]),
        .O(\data_p1[85]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[86]_i_1__0 
       (.I0(data_p2[86]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [82]),
        .O(\data_p1[86]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[87]_i_1__0 
       (.I0(data_p2[87]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [83]),
        .O(\data_p1[87]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[88]_i_1__0 
       (.I0(data_p2[88]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [84]),
        .O(\data_p1[88]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[89]_i_1__0 
       (.I0(data_p2[89]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [85]),
        .O(\data_p1[89]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[8]_i_1__1 
       (.I0(data_p2[8]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [6]),
        .O(\data_p1[8]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[90]_i_1__0 
       (.I0(data_p2[90]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [86]),
        .O(\data_p1[90]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[91]_i_1__0 
       (.I0(data_p2[91]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [87]),
        .O(\data_p1[91]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[92]_i_1__0 
       (.I0(data_p2[92]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [88]),
        .O(\data_p1[92]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[93]_i_1__0 
       (.I0(data_p2[93]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [89]),
        .O(\data_p1[93]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[94]_i_1__0 
       (.I0(data_p2[94]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [90]),
        .O(\data_p1[94]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h2B08)) 
    \data_p1[95]_i_1__0 
       (.I0(next_rreq),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(ARVALID_Dummy),
        .O(load_p1));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[95]_i_2__0 
       (.I0(data_p2[95]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [91]),
        .O(\data_p1[95]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[9]_i_1__1 
       (.I0(data_p2[9]),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[95]_0 [7]),
        .O(\data_p1[9]_i_1__1_n_0 ));
  FDRE \data_p1_reg[10] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[10]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [8]),
        .R(1'b0));
  FDRE \data_p1_reg[11] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[11]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [9]),
        .R(1'b0));
  FDRE \data_p1_reg[12] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[12]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [10]),
        .R(1'b0));
  FDRE \data_p1_reg[13] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[13]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [11]),
        .R(1'b0));
  FDRE \data_p1_reg[14] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[14]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [12]),
        .R(1'b0));
  FDRE \data_p1_reg[15] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[15]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [13]),
        .R(1'b0));
  FDRE \data_p1_reg[16] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[16]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [14]),
        .R(1'b0));
  FDRE \data_p1_reg[17] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[17]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [15]),
        .R(1'b0));
  FDRE \data_p1_reg[18] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[18]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [16]),
        .R(1'b0));
  FDRE \data_p1_reg[19] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[19]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [17]),
        .R(1'b0));
  FDRE \data_p1_reg[20] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[20]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [18]),
        .R(1'b0));
  FDRE \data_p1_reg[21] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[21]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [19]),
        .R(1'b0));
  FDRE \data_p1_reg[22] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[22]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [20]),
        .R(1'b0));
  FDRE \data_p1_reg[23] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[23]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [21]),
        .R(1'b0));
  FDRE \data_p1_reg[24] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[24]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [22]),
        .R(1'b0));
  FDRE \data_p1_reg[25] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[25]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [23]),
        .R(1'b0));
  FDRE \data_p1_reg[26] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[26]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [24]),
        .R(1'b0));
  FDRE \data_p1_reg[27] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[27]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [25]),
        .R(1'b0));
  FDRE \data_p1_reg[28] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[28]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [26]),
        .R(1'b0));
  FDRE \data_p1_reg[29] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[29]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [27]),
        .R(1'b0));
  FDRE \data_p1_reg[2] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[2]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [0]),
        .R(1'b0));
  FDRE \data_p1_reg[30] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[30]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [28]),
        .R(1'b0));
  FDRE \data_p1_reg[31] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[31]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [29]),
        .R(1'b0));
  FDRE \data_p1_reg[32] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[32]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [30]),
        .R(1'b0));
  FDRE \data_p1_reg[33] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[33]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [31]),
        .R(1'b0));
  FDRE \data_p1_reg[34] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[34]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [32]),
        .R(1'b0));
  FDRE \data_p1_reg[35] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[35]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [33]),
        .R(1'b0));
  FDRE \data_p1_reg[36] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[36]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [34]),
        .R(1'b0));
  FDRE \data_p1_reg[37] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[37]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [35]),
        .R(1'b0));
  FDRE \data_p1_reg[38] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[38]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [36]),
        .R(1'b0));
  FDRE \data_p1_reg[39] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[39]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [37]),
        .R(1'b0));
  FDRE \data_p1_reg[3] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[3]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [1]),
        .R(1'b0));
  FDRE \data_p1_reg[40] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[40]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [38]),
        .R(1'b0));
  FDRE \data_p1_reg[41] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[41]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [39]),
        .R(1'b0));
  FDRE \data_p1_reg[42] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[42]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [40]),
        .R(1'b0));
  FDRE \data_p1_reg[43] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[43]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [41]),
        .R(1'b0));
  FDRE \data_p1_reg[44] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[44]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [42]),
        .R(1'b0));
  FDRE \data_p1_reg[45] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[45]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [43]),
        .R(1'b0));
  FDRE \data_p1_reg[46] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[46]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [44]),
        .R(1'b0));
  FDRE \data_p1_reg[47] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[47]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [45]),
        .R(1'b0));
  FDRE \data_p1_reg[48] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[48]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [46]),
        .R(1'b0));
  FDRE \data_p1_reg[49] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[49]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [47]),
        .R(1'b0));
  FDRE \data_p1_reg[4] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[4]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [2]),
        .R(1'b0));
  FDRE \data_p1_reg[50] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[50]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [48]),
        .R(1'b0));
  FDRE \data_p1_reg[51] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[51]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [49]),
        .R(1'b0));
  FDRE \data_p1_reg[52] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[52]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [50]),
        .R(1'b0));
  FDRE \data_p1_reg[53] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[53]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [51]),
        .R(1'b0));
  FDRE \data_p1_reg[54] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[54]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [52]),
        .R(1'b0));
  FDRE \data_p1_reg[55] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[55]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [53]),
        .R(1'b0));
  FDRE \data_p1_reg[56] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[56]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [54]),
        .R(1'b0));
  FDRE \data_p1_reg[57] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[57]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [55]),
        .R(1'b0));
  FDRE \data_p1_reg[58] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[58]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [56]),
        .R(1'b0));
  FDRE \data_p1_reg[59] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[59]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [57]),
        .R(1'b0));
  FDRE \data_p1_reg[5] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[5]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [3]),
        .R(1'b0));
  FDRE \data_p1_reg[60] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[60]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [58]),
        .R(1'b0));
  FDRE \data_p1_reg[61] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[61]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [59]),
        .R(1'b0));
  FDRE \data_p1_reg[62] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[62]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [60]),
        .R(1'b0));
  FDRE \data_p1_reg[63] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[63]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [61]),
        .R(1'b0));
  FDRE \data_p1_reg[66] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[66]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [62]),
        .R(1'b0));
  FDRE \data_p1_reg[67] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[67]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [63]),
        .R(1'b0));
  FDRE \data_p1_reg[68] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[68]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [64]),
        .R(1'b0));
  FDRE \data_p1_reg[69] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[69]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [65]),
        .R(1'b0));
  FDRE \data_p1_reg[6] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[6]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [4]),
        .R(1'b0));
  FDRE \data_p1_reg[70] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[70]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [66]),
        .R(1'b0));
  FDRE \data_p1_reg[71] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[71]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [67]),
        .R(1'b0));
  FDRE \data_p1_reg[72] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[72]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [68]),
        .R(1'b0));
  FDRE \data_p1_reg[73] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[73]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [69]),
        .R(1'b0));
  FDRE \data_p1_reg[74] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[74]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [70]),
        .R(1'b0));
  FDRE \data_p1_reg[75] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[75]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [71]),
        .R(1'b0));
  FDRE \data_p1_reg[76] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[76]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [72]),
        .R(1'b0));
  FDRE \data_p1_reg[77] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[77]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [73]),
        .R(1'b0));
  FDRE \data_p1_reg[78] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[78]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [74]),
        .R(1'b0));
  FDRE \data_p1_reg[79] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[79]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [75]),
        .R(1'b0));
  FDRE \data_p1_reg[7] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[7]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [5]),
        .R(1'b0));
  FDRE \data_p1_reg[80] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[80]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [76]),
        .R(1'b0));
  FDRE \data_p1_reg[81] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[81]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [77]),
        .R(1'b0));
  FDRE \data_p1_reg[82] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[82]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [78]),
        .R(1'b0));
  FDRE \data_p1_reg[83] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[83]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [79]),
        .R(1'b0));
  FDRE \data_p1_reg[84] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[84]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [80]),
        .R(1'b0));
  FDRE \data_p1_reg[85] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[85]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [81]),
        .R(1'b0));
  FDRE \data_p1_reg[86] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[86]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [82]),
        .R(1'b0));
  FDRE \data_p1_reg[87] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[87]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [83]),
        .R(1'b0));
  FDRE \data_p1_reg[88] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[88]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [84]),
        .R(1'b0));
  FDRE \data_p1_reg[89] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[89]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [85]),
        .R(1'b0));
  FDRE \data_p1_reg[8] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[8]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [6]),
        .R(1'b0));
  FDRE \data_p1_reg[90] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[90]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [86]),
        .R(1'b0));
  FDRE \data_p1_reg[91] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[91]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [87]),
        .R(1'b0));
  FDRE \data_p1_reg[92] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[92]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [88]),
        .R(1'b0));
  FDRE \data_p1_reg[93] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[93]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [89]),
        .R(1'b0));
  FDRE \data_p1_reg[94] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[94]_i_1__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [90]),
        .R(1'b0));
  FDRE \data_p1_reg[95] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[95]_i_2__0_n_0 ),
        .Q(\data_p1_reg[95]_0 [91]),
        .R(1'b0));
  FDRE \data_p1_reg[9] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[9]_i_1__1_n_0 ),
        .Q(\data_p1_reg[95]_0 [7]),
        .R(1'b0));
  FDRE \data_p2_reg[10] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [8]),
        .Q(data_p2[10]),
        .R(1'b0));
  FDRE \data_p2_reg[11] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [9]),
        .Q(data_p2[11]),
        .R(1'b0));
  FDRE \data_p2_reg[12] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [10]),
        .Q(data_p2[12]),
        .R(1'b0));
  FDRE \data_p2_reg[13] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [11]),
        .Q(data_p2[13]),
        .R(1'b0));
  FDRE \data_p2_reg[14] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [12]),
        .Q(data_p2[14]),
        .R(1'b0));
  FDRE \data_p2_reg[15] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [13]),
        .Q(data_p2[15]),
        .R(1'b0));
  FDRE \data_p2_reg[16] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [14]),
        .Q(data_p2[16]),
        .R(1'b0));
  FDRE \data_p2_reg[17] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [15]),
        .Q(data_p2[17]),
        .R(1'b0));
  FDRE \data_p2_reg[18] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [16]),
        .Q(data_p2[18]),
        .R(1'b0));
  FDRE \data_p2_reg[19] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [17]),
        .Q(data_p2[19]),
        .R(1'b0));
  FDRE \data_p2_reg[20] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [18]),
        .Q(data_p2[20]),
        .R(1'b0));
  FDRE \data_p2_reg[21] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [19]),
        .Q(data_p2[21]),
        .R(1'b0));
  FDRE \data_p2_reg[22] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [20]),
        .Q(data_p2[22]),
        .R(1'b0));
  FDRE \data_p2_reg[23] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [21]),
        .Q(data_p2[23]),
        .R(1'b0));
  FDRE \data_p2_reg[24] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [22]),
        .Q(data_p2[24]),
        .R(1'b0));
  FDRE \data_p2_reg[25] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [23]),
        .Q(data_p2[25]),
        .R(1'b0));
  FDRE \data_p2_reg[26] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [24]),
        .Q(data_p2[26]),
        .R(1'b0));
  FDRE \data_p2_reg[27] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [25]),
        .Q(data_p2[27]),
        .R(1'b0));
  FDRE \data_p2_reg[28] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [26]),
        .Q(data_p2[28]),
        .R(1'b0));
  FDRE \data_p2_reg[29] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [27]),
        .Q(data_p2[29]),
        .R(1'b0));
  FDRE \data_p2_reg[2] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [0]),
        .Q(data_p2[2]),
        .R(1'b0));
  FDRE \data_p2_reg[30] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [28]),
        .Q(data_p2[30]),
        .R(1'b0));
  FDRE \data_p2_reg[31] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [29]),
        .Q(data_p2[31]),
        .R(1'b0));
  FDRE \data_p2_reg[32] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [30]),
        .Q(data_p2[32]),
        .R(1'b0));
  FDRE \data_p2_reg[33] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [31]),
        .Q(data_p2[33]),
        .R(1'b0));
  FDRE \data_p2_reg[34] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [32]),
        .Q(data_p2[34]),
        .R(1'b0));
  FDRE \data_p2_reg[35] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [33]),
        .Q(data_p2[35]),
        .R(1'b0));
  FDRE \data_p2_reg[36] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [34]),
        .Q(data_p2[36]),
        .R(1'b0));
  FDRE \data_p2_reg[37] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [35]),
        .Q(data_p2[37]),
        .R(1'b0));
  FDRE \data_p2_reg[38] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [36]),
        .Q(data_p2[38]),
        .R(1'b0));
  FDRE \data_p2_reg[39] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [37]),
        .Q(data_p2[39]),
        .R(1'b0));
  FDRE \data_p2_reg[3] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [1]),
        .Q(data_p2[3]),
        .R(1'b0));
  FDRE \data_p2_reg[40] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [38]),
        .Q(data_p2[40]),
        .R(1'b0));
  FDRE \data_p2_reg[41] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [39]),
        .Q(data_p2[41]),
        .R(1'b0));
  FDRE \data_p2_reg[42] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [40]),
        .Q(data_p2[42]),
        .R(1'b0));
  FDRE \data_p2_reg[43] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [41]),
        .Q(data_p2[43]),
        .R(1'b0));
  FDRE \data_p2_reg[44] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [42]),
        .Q(data_p2[44]),
        .R(1'b0));
  FDRE \data_p2_reg[45] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [43]),
        .Q(data_p2[45]),
        .R(1'b0));
  FDRE \data_p2_reg[46] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [44]),
        .Q(data_p2[46]),
        .R(1'b0));
  FDRE \data_p2_reg[47] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [45]),
        .Q(data_p2[47]),
        .R(1'b0));
  FDRE \data_p2_reg[48] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [46]),
        .Q(data_p2[48]),
        .R(1'b0));
  FDRE \data_p2_reg[49] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [47]),
        .Q(data_p2[49]),
        .R(1'b0));
  FDRE \data_p2_reg[4] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [2]),
        .Q(data_p2[4]),
        .R(1'b0));
  FDRE \data_p2_reg[50] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [48]),
        .Q(data_p2[50]),
        .R(1'b0));
  FDRE \data_p2_reg[51] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [49]),
        .Q(data_p2[51]),
        .R(1'b0));
  FDRE \data_p2_reg[52] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [50]),
        .Q(data_p2[52]),
        .R(1'b0));
  FDRE \data_p2_reg[53] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [51]),
        .Q(data_p2[53]),
        .R(1'b0));
  FDRE \data_p2_reg[54] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [52]),
        .Q(data_p2[54]),
        .R(1'b0));
  FDRE \data_p2_reg[55] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [53]),
        .Q(data_p2[55]),
        .R(1'b0));
  FDRE \data_p2_reg[56] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [54]),
        .Q(data_p2[56]),
        .R(1'b0));
  FDRE \data_p2_reg[57] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [55]),
        .Q(data_p2[57]),
        .R(1'b0));
  FDRE \data_p2_reg[58] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [56]),
        .Q(data_p2[58]),
        .R(1'b0));
  FDRE \data_p2_reg[59] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [57]),
        .Q(data_p2[59]),
        .R(1'b0));
  FDRE \data_p2_reg[5] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [3]),
        .Q(data_p2[5]),
        .R(1'b0));
  FDRE \data_p2_reg[60] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [58]),
        .Q(data_p2[60]),
        .R(1'b0));
  FDRE \data_p2_reg[61] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [59]),
        .Q(data_p2[61]),
        .R(1'b0));
  FDRE \data_p2_reg[62] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [60]),
        .Q(data_p2[62]),
        .R(1'b0));
  FDRE \data_p2_reg[63] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [61]),
        .Q(data_p2[63]),
        .R(1'b0));
  FDRE \data_p2_reg[66] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [62]),
        .Q(data_p2[66]),
        .R(1'b0));
  FDRE \data_p2_reg[67] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [63]),
        .Q(data_p2[67]),
        .R(1'b0));
  FDRE \data_p2_reg[68] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [64]),
        .Q(data_p2[68]),
        .R(1'b0));
  FDRE \data_p2_reg[69] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [65]),
        .Q(data_p2[69]),
        .R(1'b0));
  FDRE \data_p2_reg[6] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [4]),
        .Q(data_p2[6]),
        .R(1'b0));
  FDRE \data_p2_reg[70] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [66]),
        .Q(data_p2[70]),
        .R(1'b0));
  FDRE \data_p2_reg[71] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [67]),
        .Q(data_p2[71]),
        .R(1'b0));
  FDRE \data_p2_reg[72] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [68]),
        .Q(data_p2[72]),
        .R(1'b0));
  FDRE \data_p2_reg[73] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [69]),
        .Q(data_p2[73]),
        .R(1'b0));
  FDRE \data_p2_reg[74] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [70]),
        .Q(data_p2[74]),
        .R(1'b0));
  FDRE \data_p2_reg[75] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [71]),
        .Q(data_p2[75]),
        .R(1'b0));
  FDRE \data_p2_reg[76] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [72]),
        .Q(data_p2[76]),
        .R(1'b0));
  FDRE \data_p2_reg[77] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [73]),
        .Q(data_p2[77]),
        .R(1'b0));
  FDRE \data_p2_reg[78] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [74]),
        .Q(data_p2[78]),
        .R(1'b0));
  FDRE \data_p2_reg[79] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [75]),
        .Q(data_p2[79]),
        .R(1'b0));
  FDRE \data_p2_reg[7] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [5]),
        .Q(data_p2[7]),
        .R(1'b0));
  FDRE \data_p2_reg[80] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [76]),
        .Q(data_p2[80]),
        .R(1'b0));
  FDRE \data_p2_reg[81] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [77]),
        .Q(data_p2[81]),
        .R(1'b0));
  FDRE \data_p2_reg[82] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [78]),
        .Q(data_p2[82]),
        .R(1'b0));
  FDRE \data_p2_reg[83] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [79]),
        .Q(data_p2[83]),
        .R(1'b0));
  FDRE \data_p2_reg[84] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [80]),
        .Q(data_p2[84]),
        .R(1'b0));
  FDRE \data_p2_reg[85] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [81]),
        .Q(data_p2[85]),
        .R(1'b0));
  FDRE \data_p2_reg[86] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [82]),
        .Q(data_p2[86]),
        .R(1'b0));
  FDRE \data_p2_reg[87] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [83]),
        .Q(data_p2[87]),
        .R(1'b0));
  FDRE \data_p2_reg[88] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [84]),
        .Q(data_p2[88]),
        .R(1'b0));
  FDRE \data_p2_reg[89] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [85]),
        .Q(data_p2[89]),
        .R(1'b0));
  FDRE \data_p2_reg[8] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [6]),
        .Q(data_p2[8]),
        .R(1'b0));
  FDRE \data_p2_reg[90] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [86]),
        .Q(data_p2[90]),
        .R(1'b0));
  FDRE \data_p2_reg[91] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [87]),
        .Q(data_p2[91]),
        .R(1'b0));
  FDRE \data_p2_reg[92] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [88]),
        .Q(data_p2[92]),
        .R(1'b0));
  FDRE \data_p2_reg[93] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [89]),
        .Q(data_p2[93]),
        .R(1'b0));
  FDRE \data_p2_reg[94] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [90]),
        .Q(data_p2[94]),
        .R(1'b0));
  FDRE \data_p2_reg[95] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [91]),
        .Q(data_p2[95]),
        .R(1'b0));
  FDRE \data_p2_reg[9] 
       (.C(ap_clk),
        .CE(E),
        .D(\data_p2_reg[95]_0 [7]),
        .Q(data_p2[9]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[13]_i_1__0 
       (.CI(\end_addr_reg[9]_i_1__0_n_0 ),
        .CO({\end_addr_reg[13]_i_1__0_n_0 ,\end_addr_reg[13]_i_1__0_n_1 ,\end_addr_reg[13]_i_1__0_n_2 ,\end_addr_reg[13]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [11:8]),
        .O(\data_p1_reg[63]_0 [11:8]),
        .S(\end_addr_reg[13] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[17]_i_1__0 
       (.CI(\end_addr_reg[13]_i_1__0_n_0 ),
        .CO({\end_addr_reg[17]_i_1__0_n_0 ,\end_addr_reg[17]_i_1__0_n_1 ,\end_addr_reg[17]_i_1__0_n_2 ,\end_addr_reg[17]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [15:12]),
        .O(\data_p1_reg[63]_0 [15:12]),
        .S(\end_addr_reg[17] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[21]_i_1__0 
       (.CI(\end_addr_reg[17]_i_1__0_n_0 ),
        .CO({\end_addr_reg[21]_i_1__0_n_0 ,\end_addr_reg[21]_i_1__0_n_1 ,\end_addr_reg[21]_i_1__0_n_2 ,\end_addr_reg[21]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [19:16]),
        .O(\data_p1_reg[63]_0 [19:16]),
        .S(\end_addr_reg[21] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[25]_i_1__0 
       (.CI(\end_addr_reg[21]_i_1__0_n_0 ),
        .CO({\end_addr_reg[25]_i_1__0_n_0 ,\end_addr_reg[25]_i_1__0_n_1 ,\end_addr_reg[25]_i_1__0_n_2 ,\end_addr_reg[25]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [23:20]),
        .O(\data_p1_reg[63]_0 [23:20]),
        .S(\end_addr_reg[25] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[29]_i_1__0 
       (.CI(\end_addr_reg[25]_i_1__0_n_0 ),
        .CO({\end_addr_reg[29]_i_1__0_n_0 ,\end_addr_reg[29]_i_1__0_n_1 ,\end_addr_reg[29]_i_1__0_n_2 ,\end_addr_reg[29]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [27:24]),
        .O(\data_p1_reg[63]_0 [27:24]),
        .S(\end_addr_reg[29] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[33]_i_1__0 
       (.CI(\end_addr_reg[29]_i_1__0_n_0 ),
        .CO({\end_addr_reg[33]_i_1__0_n_0 ,\end_addr_reg[33]_i_1__0_n_1 ,\end_addr_reg[33]_i_1__0_n_2 ,\end_addr_reg[33]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\data_p1_reg[95]_0 [29:28]}),
        .O(\data_p1_reg[63]_0 [31:28]),
        .S({\data_p1_reg[95]_0 [31:30],\end_addr_reg[33] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[37]_i_1__0 
       (.CI(\end_addr_reg[33]_i_1__0_n_0 ),
        .CO({\end_addr_reg[37]_i_1__0_n_0 ,\end_addr_reg[37]_i_1__0_n_1 ,\end_addr_reg[37]_i_1__0_n_2 ,\end_addr_reg[37]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [35:32]),
        .S(\data_p1_reg[95]_0 [35:32]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[41]_i_1__0 
       (.CI(\end_addr_reg[37]_i_1__0_n_0 ),
        .CO({\end_addr_reg[41]_i_1__0_n_0 ,\end_addr_reg[41]_i_1__0_n_1 ,\end_addr_reg[41]_i_1__0_n_2 ,\end_addr_reg[41]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [39:36]),
        .S(\data_p1_reg[95]_0 [39:36]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[45]_i_1__0 
       (.CI(\end_addr_reg[41]_i_1__0_n_0 ),
        .CO({\end_addr_reg[45]_i_1__0_n_0 ,\end_addr_reg[45]_i_1__0_n_1 ,\end_addr_reg[45]_i_1__0_n_2 ,\end_addr_reg[45]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [43:40]),
        .S(\data_p1_reg[95]_0 [43:40]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[49]_i_1__0 
       (.CI(\end_addr_reg[45]_i_1__0_n_0 ),
        .CO({\end_addr_reg[49]_i_1__0_n_0 ,\end_addr_reg[49]_i_1__0_n_1 ,\end_addr_reg[49]_i_1__0_n_2 ,\end_addr_reg[49]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [47:44]),
        .S(\data_p1_reg[95]_0 [47:44]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[53]_i_1__0 
       (.CI(\end_addr_reg[49]_i_1__0_n_0 ),
        .CO({\end_addr_reg[53]_i_1__0_n_0 ,\end_addr_reg[53]_i_1__0_n_1 ,\end_addr_reg[53]_i_1__0_n_2 ,\end_addr_reg[53]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [51:48]),
        .S(\data_p1_reg[95]_0 [51:48]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[57]_i_1__0 
       (.CI(\end_addr_reg[53]_i_1__0_n_0 ),
        .CO({\end_addr_reg[57]_i_1__0_n_0 ,\end_addr_reg[57]_i_1__0_n_1 ,\end_addr_reg[57]_i_1__0_n_2 ,\end_addr_reg[57]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [55:52]),
        .S(\data_p1_reg[95]_0 [55:52]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[5]_i_1__0 
       (.CI(1'b0),
        .CO({\end_addr_reg[5]_i_1__0_n_0 ,\end_addr_reg[5]_i_1__0_n_1 ,\end_addr_reg[5]_i_1__0_n_2 ,\end_addr_reg[5]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [3:0]),
        .O(\data_p1_reg[63]_0 [3:0]),
        .S(\end_addr_reg[5] ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[61]_i_1__0 
       (.CI(\end_addr_reg[57]_i_1__0_n_0 ),
        .CO({\end_addr_reg[61]_i_1__0_n_0 ,\end_addr_reg[61]_i_1__0_n_1 ,\end_addr_reg[61]_i_1__0_n_2 ,\end_addr_reg[61]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\data_p1_reg[63]_0 [59:56]),
        .S(\data_p1_reg[95]_0 [59:56]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[63]_i_1__0 
       (.CI(\end_addr_reg[61]_i_1__0_n_0 ),
        .CO({\NLW_end_addr_reg[63]_i_1__0_CO_UNCONNECTED [3:1],\end_addr_reg[63]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_end_addr_reg[63]_i_1__0_O_UNCONNECTED [3:2],\data_p1_reg[63]_0 [61:60]}),
        .S({1'b0,1'b0,\data_p1_reg[95]_0 [61:60]}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \end_addr_reg[9]_i_1__0 
       (.CI(\end_addr_reg[5]_i_1__0_n_0 ),
        .CO({\end_addr_reg[9]_i_1__0_n_0 ,\end_addr_reg[9]_i_1__0_n_1 ,\end_addr_reg[9]_i_1__0_n_2 ,\end_addr_reg[9]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI(\data_p1_reg[95]_0 [7:4]),
        .O(\data_p1_reg[63]_0 [7:4]),
        .S(\end_addr_reg[9] ));
  LUT2 #(
    .INIT(4'h9)) 
    last_sect_carry__3_i_1__0
       (.I0(last_sect_buf_reg_0[3]),
        .I1(last_sect_buf_reg[4]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__3_i_2__0
       (.I0(last_sect_buf_reg[2]),
        .I1(last_sect_buf_reg_0[1]),
        .I2(last_sect_buf_reg[1]),
        .I3(last_sect_buf_reg_0[0]),
        .I4(last_sect_buf_reg[3]),
        .I5(last_sect_buf_reg_0[2]),
        .O(S[0]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hAAFAA2FF)) 
    s_ready_t_i_1__1
       (.I0(s_ready_t_reg_0),
        .I1(ARVALID_Dummy),
        .I2(next_rreq),
        .I3(state__0[1]),
        .I4(state__0[0]),
        .O(s_ready_t_i_1__1_n_0));
  FDRE s_ready_t_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(s_ready_t_i_1__1_n_0),
        .Q(s_ready_t_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \sect_cnt[0]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [10]),
        .I1(next_rreq),
        .I2(last_sect_buf_reg[0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[10]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [20]),
        .I1(next_rreq),
        .I2(sect_cnt0[9]),
        .O(D[10]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[11]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [21]),
        .I1(next_rreq),
        .I2(sect_cnt0[10]),
        .O(D[11]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[12]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [22]),
        .I1(next_rreq),
        .I2(sect_cnt0[11]),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[13]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [23]),
        .I1(next_rreq),
        .I2(sect_cnt0[12]),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[14]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [24]),
        .I1(next_rreq),
        .I2(sect_cnt0[13]),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[15]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [25]),
        .I1(next_rreq),
        .I2(sect_cnt0[14]),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[16]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [26]),
        .I1(next_rreq),
        .I2(sect_cnt0[15]),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[17]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [27]),
        .I1(next_rreq),
        .I2(sect_cnt0[16]),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[18]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [28]),
        .I1(next_rreq),
        .I2(sect_cnt0[17]),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[19]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [29]),
        .I1(next_rreq),
        .I2(sect_cnt0[18]),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[1]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [11]),
        .I1(next_rreq),
        .I2(sect_cnt0[0]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[20]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [30]),
        .I1(next_rreq),
        .I2(sect_cnt0[19]),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[21]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [31]),
        .I1(next_rreq),
        .I2(sect_cnt0[20]),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[22]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [32]),
        .I1(next_rreq),
        .I2(sect_cnt0[21]),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[23]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [33]),
        .I1(next_rreq),
        .I2(sect_cnt0[22]),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[24]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [34]),
        .I1(next_rreq),
        .I2(sect_cnt0[23]),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[25]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [35]),
        .I1(next_rreq),
        .I2(sect_cnt0[24]),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[26]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [36]),
        .I1(next_rreq),
        .I2(sect_cnt0[25]),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[27]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [37]),
        .I1(next_rreq),
        .I2(sect_cnt0[26]),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[28]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [38]),
        .I1(next_rreq),
        .I2(sect_cnt0[27]),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[29]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [39]),
        .I1(next_rreq),
        .I2(sect_cnt0[28]),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[2]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [12]),
        .I1(next_rreq),
        .I2(sect_cnt0[1]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[30]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [40]),
        .I1(next_rreq),
        .I2(sect_cnt0[29]),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[31]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [41]),
        .I1(next_rreq),
        .I2(sect_cnt0[30]),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[32]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [42]),
        .I1(next_rreq),
        .I2(sect_cnt0[31]),
        .O(D[32]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[33]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [43]),
        .I1(next_rreq),
        .I2(sect_cnt0[32]),
        .O(D[33]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[34]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [44]),
        .I1(next_rreq),
        .I2(sect_cnt0[33]),
        .O(D[34]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[35]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [45]),
        .I1(next_rreq),
        .I2(sect_cnt0[34]),
        .O(D[35]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[36]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [46]),
        .I1(next_rreq),
        .I2(sect_cnt0[35]),
        .O(D[36]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[37]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [47]),
        .I1(next_rreq),
        .I2(sect_cnt0[36]),
        .O(D[37]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[38]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [48]),
        .I1(next_rreq),
        .I2(sect_cnt0[37]),
        .O(D[38]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[39]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [49]),
        .I1(next_rreq),
        .I2(sect_cnt0[38]),
        .O(D[39]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[3]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [13]),
        .I1(next_rreq),
        .I2(sect_cnt0[2]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[40]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [50]),
        .I1(next_rreq),
        .I2(sect_cnt0[39]),
        .O(D[40]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[41]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [51]),
        .I1(next_rreq),
        .I2(sect_cnt0[40]),
        .O(D[41]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[42]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [52]),
        .I1(next_rreq),
        .I2(sect_cnt0[41]),
        .O(D[42]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[43]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [53]),
        .I1(next_rreq),
        .I2(sect_cnt0[42]),
        .O(D[43]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[44]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [54]),
        .I1(next_rreq),
        .I2(sect_cnt0[43]),
        .O(D[44]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[45]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [55]),
        .I1(next_rreq),
        .I2(sect_cnt0[44]),
        .O(D[45]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[46]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [56]),
        .I1(next_rreq),
        .I2(sect_cnt0[45]),
        .O(D[46]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[47]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [57]),
        .I1(next_rreq),
        .I2(sect_cnt0[46]),
        .O(D[47]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[48]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [58]),
        .I1(next_rreq),
        .I2(sect_cnt0[47]),
        .O(D[48]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[49]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [59]),
        .I1(next_rreq),
        .I2(sect_cnt0[48]),
        .O(D[49]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[4]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [14]),
        .I1(next_rreq),
        .I2(sect_cnt0[3]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[50]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [60]),
        .I1(next_rreq),
        .I2(sect_cnt0[49]),
        .O(D[50]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[51]_i_2__0 
       (.I0(\data_p1_reg[95]_0 [61]),
        .I1(next_rreq),
        .I2(sect_cnt0[50]),
        .O(D[51]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[5]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [15]),
        .I1(next_rreq),
        .I2(sect_cnt0[4]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[6]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [16]),
        .I1(next_rreq),
        .I2(sect_cnt0[5]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[7]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [17]),
        .I1(next_rreq),
        .I2(sect_cnt0[6]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[8]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [18]),
        .I1(next_rreq),
        .I2(sect_cnt0[7]),
        .O(D[8]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_cnt[9]_i_1__0 
       (.I0(\data_p1_reg[95]_0 [19]),
        .I1(next_rreq),
        .I2(sect_cnt0[8]),
        .O(D[9]));
  LUT5 #(
    .INIT(32'hFF5F8800)) 
    \state[0]_i_1__1 
       (.I0(state),
        .I1(s_ready_t_reg_0),
        .I2(next_rreq),
        .I3(ARVALID_Dummy),
        .I4(Q),
        .O(\state[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF75)) 
    \state[1]_i_1__1 
       (.I0(Q),
        .I1(ARVALID_Dummy),
        .I2(state),
        .I3(next_rreq),
        .O(\state[1]_i_1__1_n_0 ));
  FDRE \state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[0]_i_1__1_n_0 ),
        .Q(Q),
        .R(SR));
  FDSE \state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[1]_i_1__1_n_0 ),
        .Q(state),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_reg_slice" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized0
   (rs_req_ready,
    \last_cnt_reg[2] ,
    m_axi_gmem_AWVALID,
    \data_p1_reg[67]_0 ,
    SR,
    ap_clk,
    Q,
    \state[0]_i_3 ,
    D,
    req_en__0,
    req_fifo_valid,
    m_axi_gmem_AWREADY,
    E);
  output rs_req_ready;
  output \last_cnt_reg[2] ;
  output m_axi_gmem_AWVALID;
  output [65:0]\data_p1_reg[67]_0 ;
  input [0:0]SR;
  input ap_clk;
  input [3:0]Q;
  input \state[0]_i_3 ;
  input [65:0]D;
  input req_en__0;
  input req_fifo_valid;
  input m_axi_gmem_AWREADY;
  input [0:0]E;

  wire [65:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire \data_p1[10]_i_1__0_n_0 ;
  wire \data_p1[11]_i_1__0_n_0 ;
  wire \data_p1[12]_i_1__0_n_0 ;
  wire \data_p1[13]_i_1__0_n_0 ;
  wire \data_p1[14]_i_1__0_n_0 ;
  wire \data_p1[15]_i_1__0_n_0 ;
  wire \data_p1[16]_i_1__0_n_0 ;
  wire \data_p1[17]_i_1__0_n_0 ;
  wire \data_p1[18]_i_1__0_n_0 ;
  wire \data_p1[19]_i_1__0_n_0 ;
  wire \data_p1[20]_i_1__0_n_0 ;
  wire \data_p1[21]_i_1__0_n_0 ;
  wire \data_p1[22]_i_1__0_n_0 ;
  wire \data_p1[23]_i_1__0_n_0 ;
  wire \data_p1[24]_i_1__0_n_0 ;
  wire \data_p1[25]_i_1__0_n_0 ;
  wire \data_p1[26]_i_1__0_n_0 ;
  wire \data_p1[27]_i_1__0_n_0 ;
  wire \data_p1[28]_i_1__0_n_0 ;
  wire \data_p1[29]_i_1__0_n_0 ;
  wire \data_p1[2]_i_1__0_n_0 ;
  wire \data_p1[30]_i_1__0_n_0 ;
  wire \data_p1[31]_i_1__0_n_0 ;
  wire \data_p1[32]_i_1__0_n_0 ;
  wire \data_p1[33]_i_1__0_n_0 ;
  wire \data_p1[34]_i_1__0_n_0 ;
  wire \data_p1[35]_i_1__0_n_0 ;
  wire \data_p1[36]_i_1__0_n_0 ;
  wire \data_p1[37]_i_1__0_n_0 ;
  wire \data_p1[38]_i_1__0_n_0 ;
  wire \data_p1[39]_i_1__0_n_0 ;
  wire \data_p1[3]_i_1__0_n_0 ;
  wire \data_p1[40]_i_1__0_n_0 ;
  wire \data_p1[41]_i_1__0_n_0 ;
  wire \data_p1[42]_i_1__0_n_0 ;
  wire \data_p1[43]_i_1__0_n_0 ;
  wire \data_p1[44]_i_1__0_n_0 ;
  wire \data_p1[45]_i_1__0_n_0 ;
  wire \data_p1[46]_i_1__0_n_0 ;
  wire \data_p1[47]_i_1__0_n_0 ;
  wire \data_p1[48]_i_1__0_n_0 ;
  wire \data_p1[49]_i_1__0_n_0 ;
  wire \data_p1[4]_i_1__0_n_0 ;
  wire \data_p1[50]_i_1__0_n_0 ;
  wire \data_p1[51]_i_1__0_n_0 ;
  wire \data_p1[52]_i_1__0_n_0 ;
  wire \data_p1[53]_i_1__0_n_0 ;
  wire \data_p1[54]_i_1__0_n_0 ;
  wire \data_p1[55]_i_1__0_n_0 ;
  wire \data_p1[56]_i_1__0_n_0 ;
  wire \data_p1[57]_i_1__0_n_0 ;
  wire \data_p1[58]_i_1__0_n_0 ;
  wire \data_p1[59]_i_1__0_n_0 ;
  wire \data_p1[5]_i_1__0_n_0 ;
  wire \data_p1[60]_i_1__0_n_0 ;
  wire \data_p1[61]_i_1__0_n_0 ;
  wire \data_p1[62]_i_1__0_n_0 ;
  wire \data_p1[63]_i_2_n_0 ;
  wire \data_p1[64]_i_1_n_0 ;
  wire \data_p1[65]_i_1_n_0 ;
  wire \data_p1[66]_i_1__0_n_0 ;
  wire \data_p1[67]_i_1__0_n_0 ;
  wire \data_p1[6]_i_1__0_n_0 ;
  wire \data_p1[7]_i_1__0_n_0 ;
  wire \data_p1[8]_i_1__0_n_0 ;
  wire \data_p1[9]_i_1__0_n_0 ;
  wire [65:0]\data_p1_reg[67]_0 ;
  wire \data_p2_reg_n_0_[10] ;
  wire \data_p2_reg_n_0_[11] ;
  wire \data_p2_reg_n_0_[12] ;
  wire \data_p2_reg_n_0_[13] ;
  wire \data_p2_reg_n_0_[14] ;
  wire \data_p2_reg_n_0_[15] ;
  wire \data_p2_reg_n_0_[16] ;
  wire \data_p2_reg_n_0_[17] ;
  wire \data_p2_reg_n_0_[18] ;
  wire \data_p2_reg_n_0_[19] ;
  wire \data_p2_reg_n_0_[20] ;
  wire \data_p2_reg_n_0_[21] ;
  wire \data_p2_reg_n_0_[22] ;
  wire \data_p2_reg_n_0_[23] ;
  wire \data_p2_reg_n_0_[24] ;
  wire \data_p2_reg_n_0_[25] ;
  wire \data_p2_reg_n_0_[26] ;
  wire \data_p2_reg_n_0_[27] ;
  wire \data_p2_reg_n_0_[28] ;
  wire \data_p2_reg_n_0_[29] ;
  wire \data_p2_reg_n_0_[2] ;
  wire \data_p2_reg_n_0_[30] ;
  wire \data_p2_reg_n_0_[31] ;
  wire \data_p2_reg_n_0_[32] ;
  wire \data_p2_reg_n_0_[33] ;
  wire \data_p2_reg_n_0_[34] ;
  wire \data_p2_reg_n_0_[35] ;
  wire \data_p2_reg_n_0_[36] ;
  wire \data_p2_reg_n_0_[37] ;
  wire \data_p2_reg_n_0_[38] ;
  wire \data_p2_reg_n_0_[39] ;
  wire \data_p2_reg_n_0_[3] ;
  wire \data_p2_reg_n_0_[40] ;
  wire \data_p2_reg_n_0_[41] ;
  wire \data_p2_reg_n_0_[42] ;
  wire \data_p2_reg_n_0_[43] ;
  wire \data_p2_reg_n_0_[44] ;
  wire \data_p2_reg_n_0_[45] ;
  wire \data_p2_reg_n_0_[46] ;
  wire \data_p2_reg_n_0_[47] ;
  wire \data_p2_reg_n_0_[48] ;
  wire \data_p2_reg_n_0_[49] ;
  wire \data_p2_reg_n_0_[4] ;
  wire \data_p2_reg_n_0_[50] ;
  wire \data_p2_reg_n_0_[51] ;
  wire \data_p2_reg_n_0_[52] ;
  wire \data_p2_reg_n_0_[53] ;
  wire \data_p2_reg_n_0_[54] ;
  wire \data_p2_reg_n_0_[55] ;
  wire \data_p2_reg_n_0_[56] ;
  wire \data_p2_reg_n_0_[57] ;
  wire \data_p2_reg_n_0_[58] ;
  wire \data_p2_reg_n_0_[59] ;
  wire \data_p2_reg_n_0_[5] ;
  wire \data_p2_reg_n_0_[60] ;
  wire \data_p2_reg_n_0_[61] ;
  wire \data_p2_reg_n_0_[62] ;
  wire \data_p2_reg_n_0_[63] ;
  wire \data_p2_reg_n_0_[64] ;
  wire \data_p2_reg_n_0_[65] ;
  wire \data_p2_reg_n_0_[66] ;
  wire \data_p2_reg_n_0_[67] ;
  wire \data_p2_reg_n_0_[6] ;
  wire \data_p2_reg_n_0_[7] ;
  wire \data_p2_reg_n_0_[8] ;
  wire \data_p2_reg_n_0_[9] ;
  wire \last_cnt_reg[2] ;
  wire load_p1;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire [1:0]next__0;
  wire req_en__0;
  wire req_fifo_valid;
  wire rs_req_ready;
  wire s_ready_t_i_1__3_n_0;
  wire [1:1]state;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3 ;
  wire \state[1]_i_1__3_n_0 ;
  wire [1:0]state__0;

  LUT5 #(
    .INIT(32'h00080F00)) 
    \FSM_sequential_state[0]_i_1__3 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(m_axi_gmem_AWREADY),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .O(next__0[0]));
  LUT6 #(
    .INIT(64'h00008877FF008080)) 
    \FSM_sequential_state[1]_i_1__3 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(rs_req_ready),
        .I3(m_axi_gmem_AWREADY),
        .I4(state__0[0]),
        .I5(state__0[1]),
        .O(next__0[1]));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[0]),
        .Q(state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[1]),
        .Q(state__0[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[10]_i_1__0 
       (.I0(\data_p2_reg_n_0_[10] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[8]),
        .O(\data_p1[10]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[11]_i_1__0 
       (.I0(\data_p2_reg_n_0_[11] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[9]),
        .O(\data_p1[11]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[12]_i_1__0 
       (.I0(\data_p2_reg_n_0_[12] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[10]),
        .O(\data_p1[12]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[13]_i_1__0 
       (.I0(\data_p2_reg_n_0_[13] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[11]),
        .O(\data_p1[13]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[14]_i_1__0 
       (.I0(\data_p2_reg_n_0_[14] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[12]),
        .O(\data_p1[14]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[15]_i_1__0 
       (.I0(\data_p2_reg_n_0_[15] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[13]),
        .O(\data_p1[15]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[16]_i_1__0 
       (.I0(\data_p2_reg_n_0_[16] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[14]),
        .O(\data_p1[16]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[17]_i_1__0 
       (.I0(\data_p2_reg_n_0_[17] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[15]),
        .O(\data_p1[17]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[18]_i_1__0 
       (.I0(\data_p2_reg_n_0_[18] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[16]),
        .O(\data_p1[18]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[19]_i_1__0 
       (.I0(\data_p2_reg_n_0_[19] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[17]),
        .O(\data_p1[19]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[20]_i_1__0 
       (.I0(\data_p2_reg_n_0_[20] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[18]),
        .O(\data_p1[20]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[21]_i_1__0 
       (.I0(\data_p2_reg_n_0_[21] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[19]),
        .O(\data_p1[21]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[22]_i_1__0 
       (.I0(\data_p2_reg_n_0_[22] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[20]),
        .O(\data_p1[22]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[23]_i_1__0 
       (.I0(\data_p2_reg_n_0_[23] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[21]),
        .O(\data_p1[23]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[24]_i_1__0 
       (.I0(\data_p2_reg_n_0_[24] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[22]),
        .O(\data_p1[24]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[25]_i_1__0 
       (.I0(\data_p2_reg_n_0_[25] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[23]),
        .O(\data_p1[25]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[26]_i_1__0 
       (.I0(\data_p2_reg_n_0_[26] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[24]),
        .O(\data_p1[26]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[27]_i_1__0 
       (.I0(\data_p2_reg_n_0_[27] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[25]),
        .O(\data_p1[27]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[28]_i_1__0 
       (.I0(\data_p2_reg_n_0_[28] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[26]),
        .O(\data_p1[28]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[29]_i_1__0 
       (.I0(\data_p2_reg_n_0_[29] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[27]),
        .O(\data_p1[29]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[2]_i_1__0 
       (.I0(\data_p2_reg_n_0_[2] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[0]),
        .O(\data_p1[2]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[30]_i_1__0 
       (.I0(\data_p2_reg_n_0_[30] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[28]),
        .O(\data_p1[30]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[31]_i_1__0 
       (.I0(\data_p2_reg_n_0_[31] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[29]),
        .O(\data_p1[31]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[32]_i_1__0 
       (.I0(\data_p2_reg_n_0_[32] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[30]),
        .O(\data_p1[32]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[33]_i_1__0 
       (.I0(\data_p2_reg_n_0_[33] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[31]),
        .O(\data_p1[33]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[34]_i_1__0 
       (.I0(\data_p2_reg_n_0_[34] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[32]),
        .O(\data_p1[34]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[35]_i_1__0 
       (.I0(\data_p2_reg_n_0_[35] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[33]),
        .O(\data_p1[35]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[36]_i_1__0 
       (.I0(\data_p2_reg_n_0_[36] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[34]),
        .O(\data_p1[36]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[37]_i_1__0 
       (.I0(\data_p2_reg_n_0_[37] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[35]),
        .O(\data_p1[37]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[38]_i_1__0 
       (.I0(\data_p2_reg_n_0_[38] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[36]),
        .O(\data_p1[38]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[39]_i_1__0 
       (.I0(\data_p2_reg_n_0_[39] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[37]),
        .O(\data_p1[39]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[3]_i_1__0 
       (.I0(\data_p2_reg_n_0_[3] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[1]),
        .O(\data_p1[3]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[40]_i_1__0 
       (.I0(\data_p2_reg_n_0_[40] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[38]),
        .O(\data_p1[40]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[41]_i_1__0 
       (.I0(\data_p2_reg_n_0_[41] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[39]),
        .O(\data_p1[41]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[42]_i_1__0 
       (.I0(\data_p2_reg_n_0_[42] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[40]),
        .O(\data_p1[42]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[43]_i_1__0 
       (.I0(\data_p2_reg_n_0_[43] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[41]),
        .O(\data_p1[43]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[44]_i_1__0 
       (.I0(\data_p2_reg_n_0_[44] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[42]),
        .O(\data_p1[44]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[45]_i_1__0 
       (.I0(\data_p2_reg_n_0_[45] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[43]),
        .O(\data_p1[45]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[46]_i_1__0 
       (.I0(\data_p2_reg_n_0_[46] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[44]),
        .O(\data_p1[46]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[47]_i_1__0 
       (.I0(\data_p2_reg_n_0_[47] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[45]),
        .O(\data_p1[47]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[48]_i_1__0 
       (.I0(\data_p2_reg_n_0_[48] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[46]),
        .O(\data_p1[48]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[49]_i_1__0 
       (.I0(\data_p2_reg_n_0_[49] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[47]),
        .O(\data_p1[49]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[4]_i_1__0 
       (.I0(\data_p2_reg_n_0_[4] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[2]),
        .O(\data_p1[4]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[50]_i_1__0 
       (.I0(\data_p2_reg_n_0_[50] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[48]),
        .O(\data_p1[50]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[51]_i_1__0 
       (.I0(\data_p2_reg_n_0_[51] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[49]),
        .O(\data_p1[51]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[52]_i_1__0 
       (.I0(\data_p2_reg_n_0_[52] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[50]),
        .O(\data_p1[52]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[53]_i_1__0 
       (.I0(\data_p2_reg_n_0_[53] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[51]),
        .O(\data_p1[53]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[54]_i_1__0 
       (.I0(\data_p2_reg_n_0_[54] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[52]),
        .O(\data_p1[54]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[55]_i_1__0 
       (.I0(\data_p2_reg_n_0_[55] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[53]),
        .O(\data_p1[55]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[56]_i_1__0 
       (.I0(\data_p2_reg_n_0_[56] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[54]),
        .O(\data_p1[56]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[57]_i_1__0 
       (.I0(\data_p2_reg_n_0_[57] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[55]),
        .O(\data_p1[57]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[58]_i_1__0 
       (.I0(\data_p2_reg_n_0_[58] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[56]),
        .O(\data_p1[58]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[59]_i_1__0 
       (.I0(\data_p2_reg_n_0_[59] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[57]),
        .O(\data_p1[59]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[5]_i_1__0 
       (.I0(\data_p2_reg_n_0_[5] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[3]),
        .O(\data_p1[5]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[60]_i_1__0 
       (.I0(\data_p2_reg_n_0_[60] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[58]),
        .O(\data_p1[60]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[61]_i_1__0 
       (.I0(\data_p2_reg_n_0_[61] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[59]),
        .O(\data_p1[61]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[62]_i_1__0 
       (.I0(\data_p2_reg_n_0_[62] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[60]),
        .O(\data_p1[62]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h08F80008)) 
    \data_p1[63]_i_1__1 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(m_axi_gmem_AWREADY),
        .O(load_p1));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[63]_i_2 
       (.I0(\data_p2_reg_n_0_[63] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[61]),
        .O(\data_p1[63]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[64]_i_1 
       (.I0(\data_p2_reg_n_0_[64] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[62]),
        .O(\data_p1[64]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[65]_i_1 
       (.I0(\data_p2_reg_n_0_[65] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[63]),
        .O(\data_p1[65]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[66]_i_1__0 
       (.I0(\data_p2_reg_n_0_[66] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[64]),
        .O(\data_p1[66]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[67]_i_1__0 
       (.I0(\data_p2_reg_n_0_[67] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[65]),
        .O(\data_p1[67]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[6]_i_1__0 
       (.I0(\data_p2_reg_n_0_[6] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[4]),
        .O(\data_p1[6]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[7]_i_1__0 
       (.I0(\data_p2_reg_n_0_[7] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[5]),
        .O(\data_p1[7]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[8]_i_1__0 
       (.I0(\data_p2_reg_n_0_[8] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[6]),
        .O(\data_p1[8]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[9]_i_1__0 
       (.I0(\data_p2_reg_n_0_[9] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(D[7]),
        .O(\data_p1[9]_i_1__0_n_0 ));
  FDRE \data_p1_reg[10] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[10]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [8]),
        .R(1'b0));
  FDRE \data_p1_reg[11] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[11]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [9]),
        .R(1'b0));
  FDRE \data_p1_reg[12] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[12]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [10]),
        .R(1'b0));
  FDRE \data_p1_reg[13] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[13]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [11]),
        .R(1'b0));
  FDRE \data_p1_reg[14] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[14]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [12]),
        .R(1'b0));
  FDRE \data_p1_reg[15] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[15]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [13]),
        .R(1'b0));
  FDRE \data_p1_reg[16] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[16]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [14]),
        .R(1'b0));
  FDRE \data_p1_reg[17] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[17]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [15]),
        .R(1'b0));
  FDRE \data_p1_reg[18] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[18]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [16]),
        .R(1'b0));
  FDRE \data_p1_reg[19] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[19]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [17]),
        .R(1'b0));
  FDRE \data_p1_reg[20] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[20]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [18]),
        .R(1'b0));
  FDRE \data_p1_reg[21] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[21]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [19]),
        .R(1'b0));
  FDRE \data_p1_reg[22] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[22]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [20]),
        .R(1'b0));
  FDRE \data_p1_reg[23] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[23]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [21]),
        .R(1'b0));
  FDRE \data_p1_reg[24] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[24]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [22]),
        .R(1'b0));
  FDRE \data_p1_reg[25] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[25]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [23]),
        .R(1'b0));
  FDRE \data_p1_reg[26] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[26]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [24]),
        .R(1'b0));
  FDRE \data_p1_reg[27] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[27]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [25]),
        .R(1'b0));
  FDRE \data_p1_reg[28] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[28]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [26]),
        .R(1'b0));
  FDRE \data_p1_reg[29] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[29]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [27]),
        .R(1'b0));
  FDRE \data_p1_reg[2] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[2]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [0]),
        .R(1'b0));
  FDRE \data_p1_reg[30] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[30]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [28]),
        .R(1'b0));
  FDRE \data_p1_reg[31] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[31]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [29]),
        .R(1'b0));
  FDRE \data_p1_reg[32] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[32]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [30]),
        .R(1'b0));
  FDRE \data_p1_reg[33] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[33]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [31]),
        .R(1'b0));
  FDRE \data_p1_reg[34] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[34]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [32]),
        .R(1'b0));
  FDRE \data_p1_reg[35] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[35]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [33]),
        .R(1'b0));
  FDRE \data_p1_reg[36] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[36]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [34]),
        .R(1'b0));
  FDRE \data_p1_reg[37] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[37]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [35]),
        .R(1'b0));
  FDRE \data_p1_reg[38] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[38]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [36]),
        .R(1'b0));
  FDRE \data_p1_reg[39] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[39]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [37]),
        .R(1'b0));
  FDRE \data_p1_reg[3] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[3]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [1]),
        .R(1'b0));
  FDRE \data_p1_reg[40] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[40]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [38]),
        .R(1'b0));
  FDRE \data_p1_reg[41] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[41]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [39]),
        .R(1'b0));
  FDRE \data_p1_reg[42] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[42]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [40]),
        .R(1'b0));
  FDRE \data_p1_reg[43] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[43]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [41]),
        .R(1'b0));
  FDRE \data_p1_reg[44] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[44]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [42]),
        .R(1'b0));
  FDRE \data_p1_reg[45] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[45]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [43]),
        .R(1'b0));
  FDRE \data_p1_reg[46] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[46]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [44]),
        .R(1'b0));
  FDRE \data_p1_reg[47] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[47]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [45]),
        .R(1'b0));
  FDRE \data_p1_reg[48] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[48]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [46]),
        .R(1'b0));
  FDRE \data_p1_reg[49] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[49]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [47]),
        .R(1'b0));
  FDRE \data_p1_reg[4] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[4]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [2]),
        .R(1'b0));
  FDRE \data_p1_reg[50] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[50]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [48]),
        .R(1'b0));
  FDRE \data_p1_reg[51] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[51]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [49]),
        .R(1'b0));
  FDRE \data_p1_reg[52] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[52]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [50]),
        .R(1'b0));
  FDRE \data_p1_reg[53] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[53]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [51]),
        .R(1'b0));
  FDRE \data_p1_reg[54] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[54]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [52]),
        .R(1'b0));
  FDRE \data_p1_reg[55] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[55]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [53]),
        .R(1'b0));
  FDRE \data_p1_reg[56] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[56]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [54]),
        .R(1'b0));
  FDRE \data_p1_reg[57] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[57]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [55]),
        .R(1'b0));
  FDRE \data_p1_reg[58] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[58]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [56]),
        .R(1'b0));
  FDRE \data_p1_reg[59] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[59]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [57]),
        .R(1'b0));
  FDRE \data_p1_reg[5] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[5]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [3]),
        .R(1'b0));
  FDRE \data_p1_reg[60] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[60]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [58]),
        .R(1'b0));
  FDRE \data_p1_reg[61] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[61]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [59]),
        .R(1'b0));
  FDRE \data_p1_reg[62] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[62]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [60]),
        .R(1'b0));
  FDRE \data_p1_reg[63] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[63]_i_2_n_0 ),
        .Q(\data_p1_reg[67]_0 [61]),
        .R(1'b0));
  FDRE \data_p1_reg[64] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[64]_i_1_n_0 ),
        .Q(\data_p1_reg[67]_0 [62]),
        .R(1'b0));
  FDRE \data_p1_reg[65] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[65]_i_1_n_0 ),
        .Q(\data_p1_reg[67]_0 [63]),
        .R(1'b0));
  FDRE \data_p1_reg[66] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[66]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [64]),
        .R(1'b0));
  FDRE \data_p1_reg[67] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[67]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [65]),
        .R(1'b0));
  FDRE \data_p1_reg[6] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[6]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [4]),
        .R(1'b0));
  FDRE \data_p1_reg[7] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[7]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [5]),
        .R(1'b0));
  FDRE \data_p1_reg[8] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[8]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [6]),
        .R(1'b0));
  FDRE \data_p1_reg[9] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[9]_i_1__0_n_0 ),
        .Q(\data_p1_reg[67]_0 [7]),
        .R(1'b0));
  FDRE \data_p2_reg[10] 
       (.C(ap_clk),
        .CE(E),
        .D(D[8]),
        .Q(\data_p2_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \data_p2_reg[11] 
       (.C(ap_clk),
        .CE(E),
        .D(D[9]),
        .Q(\data_p2_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \data_p2_reg[12] 
       (.C(ap_clk),
        .CE(E),
        .D(D[10]),
        .Q(\data_p2_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \data_p2_reg[13] 
       (.C(ap_clk),
        .CE(E),
        .D(D[11]),
        .Q(\data_p2_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \data_p2_reg[14] 
       (.C(ap_clk),
        .CE(E),
        .D(D[12]),
        .Q(\data_p2_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \data_p2_reg[15] 
       (.C(ap_clk),
        .CE(E),
        .D(D[13]),
        .Q(\data_p2_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \data_p2_reg[16] 
       (.C(ap_clk),
        .CE(E),
        .D(D[14]),
        .Q(\data_p2_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \data_p2_reg[17] 
       (.C(ap_clk),
        .CE(E),
        .D(D[15]),
        .Q(\data_p2_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \data_p2_reg[18] 
       (.C(ap_clk),
        .CE(E),
        .D(D[16]),
        .Q(\data_p2_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \data_p2_reg[19] 
       (.C(ap_clk),
        .CE(E),
        .D(D[17]),
        .Q(\data_p2_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \data_p2_reg[20] 
       (.C(ap_clk),
        .CE(E),
        .D(D[18]),
        .Q(\data_p2_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \data_p2_reg[21] 
       (.C(ap_clk),
        .CE(E),
        .D(D[19]),
        .Q(\data_p2_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \data_p2_reg[22] 
       (.C(ap_clk),
        .CE(E),
        .D(D[20]),
        .Q(\data_p2_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \data_p2_reg[23] 
       (.C(ap_clk),
        .CE(E),
        .D(D[21]),
        .Q(\data_p2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \data_p2_reg[24] 
       (.C(ap_clk),
        .CE(E),
        .D(D[22]),
        .Q(\data_p2_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \data_p2_reg[25] 
       (.C(ap_clk),
        .CE(E),
        .D(D[23]),
        .Q(\data_p2_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \data_p2_reg[26] 
       (.C(ap_clk),
        .CE(E),
        .D(D[24]),
        .Q(\data_p2_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \data_p2_reg[27] 
       (.C(ap_clk),
        .CE(E),
        .D(D[25]),
        .Q(\data_p2_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \data_p2_reg[28] 
       (.C(ap_clk),
        .CE(E),
        .D(D[26]),
        .Q(\data_p2_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \data_p2_reg[29] 
       (.C(ap_clk),
        .CE(E),
        .D(D[27]),
        .Q(\data_p2_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \data_p2_reg[2] 
       (.C(ap_clk),
        .CE(E),
        .D(D[0]),
        .Q(\data_p2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_p2_reg[30] 
       (.C(ap_clk),
        .CE(E),
        .D(D[28]),
        .Q(\data_p2_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \data_p2_reg[31] 
       (.C(ap_clk),
        .CE(E),
        .D(D[29]),
        .Q(\data_p2_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \data_p2_reg[32] 
       (.C(ap_clk),
        .CE(E),
        .D(D[30]),
        .Q(\data_p2_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \data_p2_reg[33] 
       (.C(ap_clk),
        .CE(E),
        .D(D[31]),
        .Q(\data_p2_reg_n_0_[33] ),
        .R(1'b0));
  FDRE \data_p2_reg[34] 
       (.C(ap_clk),
        .CE(E),
        .D(D[32]),
        .Q(\data_p2_reg_n_0_[34] ),
        .R(1'b0));
  FDRE \data_p2_reg[35] 
       (.C(ap_clk),
        .CE(E),
        .D(D[33]),
        .Q(\data_p2_reg_n_0_[35] ),
        .R(1'b0));
  FDRE \data_p2_reg[36] 
       (.C(ap_clk),
        .CE(E),
        .D(D[34]),
        .Q(\data_p2_reg_n_0_[36] ),
        .R(1'b0));
  FDRE \data_p2_reg[37] 
       (.C(ap_clk),
        .CE(E),
        .D(D[35]),
        .Q(\data_p2_reg_n_0_[37] ),
        .R(1'b0));
  FDRE \data_p2_reg[38] 
       (.C(ap_clk),
        .CE(E),
        .D(D[36]),
        .Q(\data_p2_reg_n_0_[38] ),
        .R(1'b0));
  FDRE \data_p2_reg[39] 
       (.C(ap_clk),
        .CE(E),
        .D(D[37]),
        .Q(\data_p2_reg_n_0_[39] ),
        .R(1'b0));
  FDRE \data_p2_reg[3] 
       (.C(ap_clk),
        .CE(E),
        .D(D[1]),
        .Q(\data_p2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \data_p2_reg[40] 
       (.C(ap_clk),
        .CE(E),
        .D(D[38]),
        .Q(\data_p2_reg_n_0_[40] ),
        .R(1'b0));
  FDRE \data_p2_reg[41] 
       (.C(ap_clk),
        .CE(E),
        .D(D[39]),
        .Q(\data_p2_reg_n_0_[41] ),
        .R(1'b0));
  FDRE \data_p2_reg[42] 
       (.C(ap_clk),
        .CE(E),
        .D(D[40]),
        .Q(\data_p2_reg_n_0_[42] ),
        .R(1'b0));
  FDRE \data_p2_reg[43] 
       (.C(ap_clk),
        .CE(E),
        .D(D[41]),
        .Q(\data_p2_reg_n_0_[43] ),
        .R(1'b0));
  FDRE \data_p2_reg[44] 
       (.C(ap_clk),
        .CE(E),
        .D(D[42]),
        .Q(\data_p2_reg_n_0_[44] ),
        .R(1'b0));
  FDRE \data_p2_reg[45] 
       (.C(ap_clk),
        .CE(E),
        .D(D[43]),
        .Q(\data_p2_reg_n_0_[45] ),
        .R(1'b0));
  FDRE \data_p2_reg[46] 
       (.C(ap_clk),
        .CE(E),
        .D(D[44]),
        .Q(\data_p2_reg_n_0_[46] ),
        .R(1'b0));
  FDRE \data_p2_reg[47] 
       (.C(ap_clk),
        .CE(E),
        .D(D[45]),
        .Q(\data_p2_reg_n_0_[47] ),
        .R(1'b0));
  FDRE \data_p2_reg[48] 
       (.C(ap_clk),
        .CE(E),
        .D(D[46]),
        .Q(\data_p2_reg_n_0_[48] ),
        .R(1'b0));
  FDRE \data_p2_reg[49] 
       (.C(ap_clk),
        .CE(E),
        .D(D[47]),
        .Q(\data_p2_reg_n_0_[49] ),
        .R(1'b0));
  FDRE \data_p2_reg[4] 
       (.C(ap_clk),
        .CE(E),
        .D(D[2]),
        .Q(\data_p2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \data_p2_reg[50] 
       (.C(ap_clk),
        .CE(E),
        .D(D[48]),
        .Q(\data_p2_reg_n_0_[50] ),
        .R(1'b0));
  FDRE \data_p2_reg[51] 
       (.C(ap_clk),
        .CE(E),
        .D(D[49]),
        .Q(\data_p2_reg_n_0_[51] ),
        .R(1'b0));
  FDRE \data_p2_reg[52] 
       (.C(ap_clk),
        .CE(E),
        .D(D[50]),
        .Q(\data_p2_reg_n_0_[52] ),
        .R(1'b0));
  FDRE \data_p2_reg[53] 
       (.C(ap_clk),
        .CE(E),
        .D(D[51]),
        .Q(\data_p2_reg_n_0_[53] ),
        .R(1'b0));
  FDRE \data_p2_reg[54] 
       (.C(ap_clk),
        .CE(E),
        .D(D[52]),
        .Q(\data_p2_reg_n_0_[54] ),
        .R(1'b0));
  FDRE \data_p2_reg[55] 
       (.C(ap_clk),
        .CE(E),
        .D(D[53]),
        .Q(\data_p2_reg_n_0_[55] ),
        .R(1'b0));
  FDRE \data_p2_reg[56] 
       (.C(ap_clk),
        .CE(E),
        .D(D[54]),
        .Q(\data_p2_reg_n_0_[56] ),
        .R(1'b0));
  FDRE \data_p2_reg[57] 
       (.C(ap_clk),
        .CE(E),
        .D(D[55]),
        .Q(\data_p2_reg_n_0_[57] ),
        .R(1'b0));
  FDRE \data_p2_reg[58] 
       (.C(ap_clk),
        .CE(E),
        .D(D[56]),
        .Q(\data_p2_reg_n_0_[58] ),
        .R(1'b0));
  FDRE \data_p2_reg[59] 
       (.C(ap_clk),
        .CE(E),
        .D(D[57]),
        .Q(\data_p2_reg_n_0_[59] ),
        .R(1'b0));
  FDRE \data_p2_reg[5] 
       (.C(ap_clk),
        .CE(E),
        .D(D[3]),
        .Q(\data_p2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \data_p2_reg[60] 
       (.C(ap_clk),
        .CE(E),
        .D(D[58]),
        .Q(\data_p2_reg_n_0_[60] ),
        .R(1'b0));
  FDRE \data_p2_reg[61] 
       (.C(ap_clk),
        .CE(E),
        .D(D[59]),
        .Q(\data_p2_reg_n_0_[61] ),
        .R(1'b0));
  FDRE \data_p2_reg[62] 
       (.C(ap_clk),
        .CE(E),
        .D(D[60]),
        .Q(\data_p2_reg_n_0_[62] ),
        .R(1'b0));
  FDRE \data_p2_reg[63] 
       (.C(ap_clk),
        .CE(E),
        .D(D[61]),
        .Q(\data_p2_reg_n_0_[63] ),
        .R(1'b0));
  FDRE \data_p2_reg[64] 
       (.C(ap_clk),
        .CE(E),
        .D(D[62]),
        .Q(\data_p2_reg_n_0_[64] ),
        .R(1'b0));
  FDRE \data_p2_reg[65] 
       (.C(ap_clk),
        .CE(E),
        .D(D[63]),
        .Q(\data_p2_reg_n_0_[65] ),
        .R(1'b0));
  FDRE \data_p2_reg[66] 
       (.C(ap_clk),
        .CE(E),
        .D(D[64]),
        .Q(\data_p2_reg_n_0_[66] ),
        .R(1'b0));
  FDRE \data_p2_reg[67] 
       (.C(ap_clk),
        .CE(E),
        .D(D[65]),
        .Q(\data_p2_reg_n_0_[67] ),
        .R(1'b0));
  FDRE \data_p2_reg[6] 
       (.C(ap_clk),
        .CE(E),
        .D(D[4]),
        .Q(\data_p2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \data_p2_reg[7] 
       (.C(ap_clk),
        .CE(E),
        .D(D[5]),
        .Q(\data_p2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \data_p2_reg[8] 
       (.C(ap_clk),
        .CE(E),
        .D(D[6]),
        .Q(\data_p2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \data_p2_reg[9] 
       (.C(ap_clk),
        .CE(E),
        .D(D[7]),
        .Q(\data_p2_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF00FFF0F700FFFF)) 
    s_ready_t_i_1__3
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(m_axi_gmem_AWREADY),
        .I3(rs_req_ready),
        .I4(state__0[1]),
        .I5(state__0[0]),
        .O(s_ready_t_i_1__3_n_0));
  FDRE s_ready_t_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(s_ready_t_i_1__3_n_0),
        .Q(rs_req_ready),
        .R(SR));
  LUT6 #(
    .INIT(64'h8F8FFFFF80008000)) 
    \state[0]_i_2 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(state),
        .I3(rs_req_ready),
        .I4(m_axi_gmem_AWREADY),
        .I5(m_axi_gmem_AWVALID),
        .O(\state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    \state[0]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(\state[0]_i_3 ),
        .O(\last_cnt_reg[2] ));
  LUT5 #(
    .INIT(32'hFFFF7F0F)) 
    \state[1]_i_1__3 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(m_axi_gmem_AWVALID),
        .I3(state),
        .I4(m_axi_gmem_AWREADY),
        .O(\state[1]_i_1__3_n_0 ));
  FDRE \state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[0]_i_2_n_0 ),
        .Q(m_axi_gmem_AWVALID),
        .R(SR));
  FDSE \state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[1]_i_1__3_n_0 ),
        .Q(state),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_reg_slice" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized1
   (s_ready_t_reg_0,
    Q,
    SR,
    ap_clk,
    resp_ready__1,
    m_axi_gmem_BVALID);
  output s_ready_t_reg_0;
  output [0:0]Q;
  input [0:0]SR;
  input ap_clk;
  input resp_ready__1;
  input m_axi_gmem_BVALID;

  wire [0:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire m_axi_gmem_BVALID;
  wire [1:0]next__0;
  wire resp_ready__1;
  wire s_ready_t_i_1__0_n_0;
  wire s_ready_t_reg_0;
  wire [1:1]state;
  wire \state[0]_i_1__0_n_0 ;
  wire \state[1]_i_1__0_n_0 ;
  wire [1:0]state__0;

  LUT4 #(
    .INIT(16'h0230)) 
    \FSM_sequential_state[0]_i_1__0 
       (.I0(m_axi_gmem_BVALID),
        .I1(resp_ready__1),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(next__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'h00C3CCA0)) 
    \FSM_sequential_state[1]_i_1__0 
       (.I0(s_ready_t_reg_0),
        .I1(resp_ready__1),
        .I2(m_axi_gmem_BVALID),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .O(next__0[1]));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[0]),
        .Q(state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[1]),
        .Q(state__0[1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'hAAFAA2FF)) 
    s_ready_t_i_1__0
       (.I0(s_ready_t_reg_0),
        .I1(m_axi_gmem_BVALID),
        .I2(resp_ready__1),
        .I3(state__0[1]),
        .I4(state__0[0]),
        .O(s_ready_t_i_1__0_n_0));
  FDRE s_ready_t_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(s_ready_t_i_1__0_n_0),
        .Q(s_ready_t_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFF5F8800)) 
    \state[0]_i_1__0 
       (.I0(state),
        .I1(s_ready_t_reg_0),
        .I2(resp_ready__1),
        .I3(m_axi_gmem_BVALID),
        .I4(Q),
        .O(\state[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF5FD)) 
    \state[1]_i_1__0 
       (.I0(Q),
        .I1(state),
        .I2(resp_ready__1),
        .I3(m_axi_gmem_BVALID),
        .O(\state[1]_i_1__0_n_0 ));
  FDRE \state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[0]_i_1__0_n_0 ),
        .Q(Q),
        .R(SR));
  FDSE \state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(state),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_reg_slice" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized2
   (s_ready_t_reg_0,
    mOutPtr18_out,
    Q,
    pop_0,
    \data_p1_reg[32]_0 ,
    SR,
    ap_clk,
    RREADY_Dummy,
    pop,
    burst_valid,
    \dout_reg[0] ,
    m_axi_gmem_RVALID,
    \data_p2_reg[32]_0 );
  output s_ready_t_reg_0;
  output mOutPtr18_out;
  output [0:0]Q;
  output pop_0;
  output [32:0]\data_p1_reg[32]_0 ;
  input [0:0]SR;
  input ap_clk;
  input RREADY_Dummy;
  input pop;
  input burst_valid;
  input \dout_reg[0] ;
  input m_axi_gmem_RVALID;
  input [32:0]\data_p2_reg[32]_0 ;

  wire [0:0]Q;
  wire RREADY_Dummy;
  wire [0:0]SR;
  wire ap_clk;
  wire burst_valid;
  wire \data_p1[0]_i_1_n_0 ;
  wire \data_p1[10]_i_1__2_n_0 ;
  wire \data_p1[11]_i_1__2_n_0 ;
  wire \data_p1[12]_i_1__2_n_0 ;
  wire \data_p1[13]_i_1__2_n_0 ;
  wire \data_p1[14]_i_1__2_n_0 ;
  wire \data_p1[15]_i_1__2_n_0 ;
  wire \data_p1[16]_i_1__2_n_0 ;
  wire \data_p1[17]_i_1__2_n_0 ;
  wire \data_p1[18]_i_1__2_n_0 ;
  wire \data_p1[19]_i_1__2_n_0 ;
  wire \data_p1[1]_i_1_n_0 ;
  wire \data_p1[20]_i_1__2_n_0 ;
  wire \data_p1[21]_i_1__2_n_0 ;
  wire \data_p1[22]_i_1__2_n_0 ;
  wire \data_p1[23]_i_1__2_n_0 ;
  wire \data_p1[24]_i_1__2_n_0 ;
  wire \data_p1[25]_i_1__2_n_0 ;
  wire \data_p1[26]_i_1__2_n_0 ;
  wire \data_p1[27]_i_1__2_n_0 ;
  wire \data_p1[28]_i_1__2_n_0 ;
  wire \data_p1[29]_i_1__2_n_0 ;
  wire \data_p1[2]_i_1__2_n_0 ;
  wire \data_p1[30]_i_1__2_n_0 ;
  wire \data_p1[31]_i_1__2_n_0 ;
  wire \data_p1[32]_i_2_n_0 ;
  wire \data_p1[3]_i_1__2_n_0 ;
  wire \data_p1[4]_i_1__2_n_0 ;
  wire \data_p1[5]_i_1__2_n_0 ;
  wire \data_p1[6]_i_1__2_n_0 ;
  wire \data_p1[7]_i_1__2_n_0 ;
  wire \data_p1[8]_i_1__2_n_0 ;
  wire \data_p1[9]_i_1__2_n_0 ;
  wire [32:0]\data_p1_reg[32]_0 ;
  wire [32:0]\data_p2_reg[32]_0 ;
  wire \data_p2_reg_n_0_[0] ;
  wire \data_p2_reg_n_0_[10] ;
  wire \data_p2_reg_n_0_[11] ;
  wire \data_p2_reg_n_0_[12] ;
  wire \data_p2_reg_n_0_[13] ;
  wire \data_p2_reg_n_0_[14] ;
  wire \data_p2_reg_n_0_[15] ;
  wire \data_p2_reg_n_0_[16] ;
  wire \data_p2_reg_n_0_[17] ;
  wire \data_p2_reg_n_0_[18] ;
  wire \data_p2_reg_n_0_[19] ;
  wire \data_p2_reg_n_0_[1] ;
  wire \data_p2_reg_n_0_[20] ;
  wire \data_p2_reg_n_0_[21] ;
  wire \data_p2_reg_n_0_[22] ;
  wire \data_p2_reg_n_0_[23] ;
  wire \data_p2_reg_n_0_[24] ;
  wire \data_p2_reg_n_0_[25] ;
  wire \data_p2_reg_n_0_[26] ;
  wire \data_p2_reg_n_0_[27] ;
  wire \data_p2_reg_n_0_[28] ;
  wire \data_p2_reg_n_0_[29] ;
  wire \data_p2_reg_n_0_[2] ;
  wire \data_p2_reg_n_0_[30] ;
  wire \data_p2_reg_n_0_[31] ;
  wire \data_p2_reg_n_0_[32] ;
  wire \data_p2_reg_n_0_[3] ;
  wire \data_p2_reg_n_0_[4] ;
  wire \data_p2_reg_n_0_[5] ;
  wire \data_p2_reg_n_0_[6] ;
  wire \data_p2_reg_n_0_[7] ;
  wire \data_p2_reg_n_0_[8] ;
  wire \data_p2_reg_n_0_[9] ;
  wire \dout_reg[0] ;
  wire load_p1;
  wire load_p2;
  wire mOutPtr18_out;
  wire m_axi_gmem_RVALID;
  wire [1:0]next__0;
  wire pop;
  wire pop_0;
  wire s_ready_t_i_1__2_n_0;
  wire s_ready_t_reg_0;
  wire [1:1]state;
  wire \state[0]_i_1__2_n_0 ;
  wire \state[1]_i_1__2_n_0 ;
  wire [1:0]state__0;

  LUT4 #(
    .INIT(16'h0230)) 
    \FSM_sequential_state[0]_i_1__2 
       (.I0(m_axi_gmem_RVALID),
        .I1(RREADY_Dummy),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(next__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'h3E02300C)) 
    \FSM_sequential_state[1]_i_1__2 
       (.I0(s_ready_t_reg_0),
        .I1(state__0[1]),
        .I2(state__0[0]),
        .I3(RREADY_Dummy),
        .I4(m_axi_gmem_RVALID),
        .O(next__0[1]));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[0]),
        .Q(state__0[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "ZERO:00,TWO:01,ONE:10" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(next__0[1]),
        .Q(state__0[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[0]_i_1 
       (.I0(\data_p2_reg_n_0_[0] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [0]),
        .O(\data_p1[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[10]_i_1__2 
       (.I0(\data_p2_reg_n_0_[10] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [10]),
        .O(\data_p1[10]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[11]_i_1__2 
       (.I0(\data_p2_reg_n_0_[11] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [11]),
        .O(\data_p1[11]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[12]_i_1__2 
       (.I0(\data_p2_reg_n_0_[12] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [12]),
        .O(\data_p1[12]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[13]_i_1__2 
       (.I0(\data_p2_reg_n_0_[13] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [13]),
        .O(\data_p1[13]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[14]_i_1__2 
       (.I0(\data_p2_reg_n_0_[14] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [14]),
        .O(\data_p1[14]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[15]_i_1__2 
       (.I0(\data_p2_reg_n_0_[15] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [15]),
        .O(\data_p1[15]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[16]_i_1__2 
       (.I0(\data_p2_reg_n_0_[16] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [16]),
        .O(\data_p1[16]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[17]_i_1__2 
       (.I0(\data_p2_reg_n_0_[17] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [17]),
        .O(\data_p1[17]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[18]_i_1__2 
       (.I0(\data_p2_reg_n_0_[18] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [18]),
        .O(\data_p1[18]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[19]_i_1__2 
       (.I0(\data_p2_reg_n_0_[19] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [19]),
        .O(\data_p1[19]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[1]_i_1 
       (.I0(\data_p2_reg_n_0_[1] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [1]),
        .O(\data_p1[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[20]_i_1__2 
       (.I0(\data_p2_reg_n_0_[20] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [20]),
        .O(\data_p1[20]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[21]_i_1__2 
       (.I0(\data_p2_reg_n_0_[21] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [21]),
        .O(\data_p1[21]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[22]_i_1__2 
       (.I0(\data_p2_reg_n_0_[22] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [22]),
        .O(\data_p1[22]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[23]_i_1__2 
       (.I0(\data_p2_reg_n_0_[23] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [23]),
        .O(\data_p1[23]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[24]_i_1__2 
       (.I0(\data_p2_reg_n_0_[24] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [24]),
        .O(\data_p1[24]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[25]_i_1__2 
       (.I0(\data_p2_reg_n_0_[25] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [25]),
        .O(\data_p1[25]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[26]_i_1__2 
       (.I0(\data_p2_reg_n_0_[26] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [26]),
        .O(\data_p1[26]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[27]_i_1__2 
       (.I0(\data_p2_reg_n_0_[27] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [27]),
        .O(\data_p1[27]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[28]_i_1__2 
       (.I0(\data_p2_reg_n_0_[28] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [28]),
        .O(\data_p1[28]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[29]_i_1__2 
       (.I0(\data_p2_reg_n_0_[29] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [29]),
        .O(\data_p1[29]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[2]_i_1__2 
       (.I0(\data_p2_reg_n_0_[2] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [2]),
        .O(\data_p1[2]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[30]_i_1__2 
       (.I0(\data_p2_reg_n_0_[30] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [30]),
        .O(\data_p1[30]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[31]_i_1__2 
       (.I0(\data_p2_reg_n_0_[31] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [31]),
        .O(\data_p1[31]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h08CA)) 
    \data_p1[32]_i_1__2 
       (.I0(m_axi_gmem_RVALID),
        .I1(RREADY_Dummy),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(load_p1));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[32]_i_2 
       (.I0(\data_p2_reg_n_0_[32] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [32]),
        .O(\data_p1[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[3]_i_1__2 
       (.I0(\data_p2_reg_n_0_[3] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [3]),
        .O(\data_p1[3]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[4]_i_1__2 
       (.I0(\data_p2_reg_n_0_[4] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [4]),
        .O(\data_p1[4]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[5]_i_1__2 
       (.I0(\data_p2_reg_n_0_[5] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [5]),
        .O(\data_p1[5]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[6]_i_1__2 
       (.I0(\data_p2_reg_n_0_[6] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [6]),
        .O(\data_p1[6]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[7]_i_1__2 
       (.I0(\data_p2_reg_n_0_[7] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [7]),
        .O(\data_p1[7]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[8]_i_1__2 
       (.I0(\data_p2_reg_n_0_[8] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [8]),
        .O(\data_p1[8]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_p1[9]_i_1__2 
       (.I0(\data_p2_reg_n_0_[9] ),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(\data_p2_reg[32]_0 [9]),
        .O(\data_p1[9]_i_1__2_n_0 ));
  FDRE \data_p1_reg[0] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[0]_i_1_n_0 ),
        .Q(\data_p1_reg[32]_0 [0]),
        .R(1'b0));
  FDRE \data_p1_reg[10] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[10]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [10]),
        .R(1'b0));
  FDRE \data_p1_reg[11] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[11]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [11]),
        .R(1'b0));
  FDRE \data_p1_reg[12] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[12]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [12]),
        .R(1'b0));
  FDRE \data_p1_reg[13] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[13]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [13]),
        .R(1'b0));
  FDRE \data_p1_reg[14] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[14]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [14]),
        .R(1'b0));
  FDRE \data_p1_reg[15] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[15]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [15]),
        .R(1'b0));
  FDRE \data_p1_reg[16] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[16]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [16]),
        .R(1'b0));
  FDRE \data_p1_reg[17] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[17]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [17]),
        .R(1'b0));
  FDRE \data_p1_reg[18] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[18]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [18]),
        .R(1'b0));
  FDRE \data_p1_reg[19] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[19]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [19]),
        .R(1'b0));
  FDRE \data_p1_reg[1] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[1]_i_1_n_0 ),
        .Q(\data_p1_reg[32]_0 [1]),
        .R(1'b0));
  FDRE \data_p1_reg[20] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[20]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [20]),
        .R(1'b0));
  FDRE \data_p1_reg[21] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[21]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [21]),
        .R(1'b0));
  FDRE \data_p1_reg[22] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[22]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [22]),
        .R(1'b0));
  FDRE \data_p1_reg[23] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[23]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [23]),
        .R(1'b0));
  FDRE \data_p1_reg[24] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[24]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [24]),
        .R(1'b0));
  FDRE \data_p1_reg[25] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[25]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [25]),
        .R(1'b0));
  FDRE \data_p1_reg[26] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[26]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [26]),
        .R(1'b0));
  FDRE \data_p1_reg[27] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[27]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [27]),
        .R(1'b0));
  FDRE \data_p1_reg[28] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[28]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [28]),
        .R(1'b0));
  FDRE \data_p1_reg[29] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[29]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [29]),
        .R(1'b0));
  FDRE \data_p1_reg[2] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[2]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [2]),
        .R(1'b0));
  FDRE \data_p1_reg[30] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[30]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [30]),
        .R(1'b0));
  FDRE \data_p1_reg[31] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[31]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [31]),
        .R(1'b0));
  FDRE \data_p1_reg[32] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[32]_i_2_n_0 ),
        .Q(\data_p1_reg[32]_0 [32]),
        .R(1'b0));
  FDRE \data_p1_reg[3] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[3]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [3]),
        .R(1'b0));
  FDRE \data_p1_reg[4] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[4]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [4]),
        .R(1'b0));
  FDRE \data_p1_reg[5] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[5]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [5]),
        .R(1'b0));
  FDRE \data_p1_reg[6] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[6]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [6]),
        .R(1'b0));
  FDRE \data_p1_reg[7] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[7]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [7]),
        .R(1'b0));
  FDRE \data_p1_reg[8] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[8]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [8]),
        .R(1'b0));
  FDRE \data_p1_reg[9] 
       (.C(ap_clk),
        .CE(load_p1),
        .D(\data_p1[9]_i_1__2_n_0 ),
        .Q(\data_p1_reg[32]_0 [9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \data_p2[32]_i_1 
       (.I0(m_axi_gmem_RVALID),
        .I1(s_ready_t_reg_0),
        .O(load_p2));
  FDRE \data_p2_reg[0] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [0]),
        .Q(\data_p2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \data_p2_reg[10] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [10]),
        .Q(\data_p2_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \data_p2_reg[11] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [11]),
        .Q(\data_p2_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \data_p2_reg[12] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [12]),
        .Q(\data_p2_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \data_p2_reg[13] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [13]),
        .Q(\data_p2_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \data_p2_reg[14] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [14]),
        .Q(\data_p2_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \data_p2_reg[15] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [15]),
        .Q(\data_p2_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \data_p2_reg[16] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [16]),
        .Q(\data_p2_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \data_p2_reg[17] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [17]),
        .Q(\data_p2_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \data_p2_reg[18] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [18]),
        .Q(\data_p2_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \data_p2_reg[19] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [19]),
        .Q(\data_p2_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \data_p2_reg[1] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [1]),
        .Q(\data_p2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \data_p2_reg[20] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [20]),
        .Q(\data_p2_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \data_p2_reg[21] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [21]),
        .Q(\data_p2_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \data_p2_reg[22] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [22]),
        .Q(\data_p2_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \data_p2_reg[23] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [23]),
        .Q(\data_p2_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \data_p2_reg[24] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [24]),
        .Q(\data_p2_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \data_p2_reg[25] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [25]),
        .Q(\data_p2_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \data_p2_reg[26] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [26]),
        .Q(\data_p2_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \data_p2_reg[27] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [27]),
        .Q(\data_p2_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \data_p2_reg[28] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [28]),
        .Q(\data_p2_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \data_p2_reg[29] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [29]),
        .Q(\data_p2_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \data_p2_reg[2] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [2]),
        .Q(\data_p2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_p2_reg[30] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [30]),
        .Q(\data_p2_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \data_p2_reg[31] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [31]),
        .Q(\data_p2_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \data_p2_reg[32] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [32]),
        .Q(\data_p2_reg_n_0_[32] ),
        .R(1'b0));
  FDRE \data_p2_reg[3] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [3]),
        .Q(\data_p2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \data_p2_reg[4] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [4]),
        .Q(\data_p2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \data_p2_reg[5] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [5]),
        .Q(\data_p2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \data_p2_reg[6] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [6]),
        .Q(\data_p2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \data_p2_reg[7] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [7]),
        .Q(\data_p2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \data_p2_reg[8] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [8]),
        .Q(\data_p2_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \data_p2_reg[9] 
       (.C(ap_clk),
        .CE(load_p2),
        .D(\data_p2_reg[32]_0 [9]),
        .Q(\data_p2_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h80FF0000)) 
    \dout[0]_i_1__0 
       (.I0(RREADY_Dummy),
        .I1(Q),
        .I2(\data_p1_reg[32]_0 [32]),
        .I3(burst_valid),
        .I4(\dout_reg[0] ),
        .O(pop_0));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \mOutPtr[8]_i_4 
       (.I0(Q),
        .I1(RREADY_Dummy),
        .I2(pop),
        .O(mOutPtr18_out));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT5 #(
    .INIT(32'hF0FCD0FF)) 
    s_ready_t_i_1__2
       (.I0(m_axi_gmem_RVALID),
        .I1(RREADY_Dummy),
        .I2(s_ready_t_reg_0),
        .I3(state__0[1]),
        .I4(state__0[0]),
        .O(s_ready_t_i_1__2_n_0));
  FDRE s_ready_t_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(s_ready_t_i_1__2_n_0),
        .Q(s_ready_t_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hFF5F8800)) 
    \state[0]_i_1__2 
       (.I0(state),
        .I1(s_ready_t_reg_0),
        .I2(RREADY_Dummy),
        .I3(m_axi_gmem_RVALID),
        .I4(Q),
        .O(\state[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hF5FD)) 
    \state[1]_i_1__2 
       (.I0(Q),
        .I1(state),
        .I2(RREADY_Dummy),
        .I3(m_axi_gmem_RVALID),
        .O(\state[1]_i_1__2_n_0 ));
  FDRE \state_reg[0] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[0]_i_1__2_n_0 ),
        .Q(Q),
        .R(SR));
  FDSE \state_reg[1] 
       (.C(ap_clk),
        .CE(1'b1),
        .D(\state[1]_i_1__2_n_0 ),
        .Q(state),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl
   (pop,
    push,
    push_0,
    valid_length,
    \dout_reg[92]_0 ,
    S,
    \dout_reg[70]_0 ,
    \dout_reg[66]_0 ,
    \dout_reg[78]_0 ,
    \dout_reg[82]_0 ,
    \dout_reg[86]_0 ,
    \dout_reg[90]_0 ,
    \dout_reg[93]_0 ,
    full_n_reg,
    wrsp_ready,
    tmp_valid_reg,
    AWREADY_Dummy,
    \dout_reg[0]_0 ,
    \dout_reg[0]_1 ,
    Q,
    \dout_reg[94]_0 ,
    \dout_reg[94]_1 ,
    in,
    \dout_reg[94]_2 ,
    \dout_reg[94]_3 ,
    ap_clk,
    SR);
  output pop;
  output push;
  output push_0;
  output valid_length;
  output [90:0]\dout_reg[92]_0 ;
  output [3:0]S;
  output [3:0]\dout_reg[70]_0 ;
  output [2:0]\dout_reg[66]_0 ;
  output [3:0]\dout_reg[78]_0 ;
  output [3:0]\dout_reg[82]_0 ;
  output [3:0]\dout_reg[86]_0 ;
  output [3:0]\dout_reg[90]_0 ;
  output [2:0]\dout_reg[93]_0 ;
  output full_n_reg;
  input wrsp_ready;
  input tmp_valid_reg;
  input AWREADY_Dummy;
  input \dout_reg[0]_0 ;
  input \dout_reg[0]_1 ;
  input [1:0]Q;
  input \dout_reg[94]_0 ;
  input [0:0]\dout_reg[94]_1 ;
  input [92:0]in;
  input \dout_reg[94]_2 ;
  input \dout_reg[94]_3 ;
  input ap_clk;
  input [0:0]SR;

  wire AWREADY_Dummy;
  wire [1:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire [2:0]\dout_reg[66]_0 ;
  wire [3:0]\dout_reg[70]_0 ;
  wire [3:0]\dout_reg[78]_0 ;
  wire [3:0]\dout_reg[82]_0 ;
  wire [3:0]\dout_reg[86]_0 ;
  wire [3:0]\dout_reg[90]_0 ;
  wire [90:0]\dout_reg[92]_0 ;
  wire [2:0]\dout_reg[93]_0 ;
  wire \dout_reg[94]_0 ;
  wire [0:0]\dout_reg[94]_1 ;
  wire \dout_reg[94]_2 ;
  wire \dout_reg[94]_3 ;
  wire full_n_reg;
  wire [92:0]in;
  wire \mem_reg[14][0]_srl15_i_3_n_0 ;
  wire \mem_reg[14][0]_srl15_i_4_n_0 ;
  wire \mem_reg[14][0]_srl15_i_5_n_0 ;
  wire \mem_reg[14][0]_srl15_i_6_n_0 ;
  wire \mem_reg[14][0]_srl15_i_7_n_0 ;
  wire \mem_reg[14][0]_srl15_i_8_n_0 ;
  wire \mem_reg[14][0]_srl15_i_9_n_0 ;
  wire \mem_reg[3][0]_srl4_n_0 ;
  wire \mem_reg[3][10]_srl4_n_0 ;
  wire \mem_reg[3][11]_srl4_n_0 ;
  wire \mem_reg[3][12]_srl4_n_0 ;
  wire \mem_reg[3][13]_srl4_n_0 ;
  wire \mem_reg[3][14]_srl4_n_0 ;
  wire \mem_reg[3][15]_srl4_n_0 ;
  wire \mem_reg[3][16]_srl4_n_0 ;
  wire \mem_reg[3][17]_srl4_n_0 ;
  wire \mem_reg[3][18]_srl4_n_0 ;
  wire \mem_reg[3][19]_srl4_n_0 ;
  wire \mem_reg[3][1]_srl4_n_0 ;
  wire \mem_reg[3][20]_srl4_n_0 ;
  wire \mem_reg[3][21]_srl4_n_0 ;
  wire \mem_reg[3][22]_srl4_n_0 ;
  wire \mem_reg[3][23]_srl4_n_0 ;
  wire \mem_reg[3][24]_srl4_n_0 ;
  wire \mem_reg[3][25]_srl4_n_0 ;
  wire \mem_reg[3][26]_srl4_n_0 ;
  wire \mem_reg[3][27]_srl4_n_0 ;
  wire \mem_reg[3][28]_srl4_n_0 ;
  wire \mem_reg[3][29]_srl4_n_0 ;
  wire \mem_reg[3][2]_srl4_n_0 ;
  wire \mem_reg[3][30]_srl4_n_0 ;
  wire \mem_reg[3][31]_srl4_n_0 ;
  wire \mem_reg[3][32]_srl4_n_0 ;
  wire \mem_reg[3][33]_srl4_n_0 ;
  wire \mem_reg[3][34]_srl4_n_0 ;
  wire \mem_reg[3][35]_srl4_n_0 ;
  wire \mem_reg[3][36]_srl4_n_0 ;
  wire \mem_reg[3][37]_srl4_n_0 ;
  wire \mem_reg[3][38]_srl4_n_0 ;
  wire \mem_reg[3][39]_srl4_n_0 ;
  wire \mem_reg[3][3]_srl4_n_0 ;
  wire \mem_reg[3][40]_srl4_n_0 ;
  wire \mem_reg[3][41]_srl4_n_0 ;
  wire \mem_reg[3][42]_srl4_n_0 ;
  wire \mem_reg[3][43]_srl4_n_0 ;
  wire \mem_reg[3][44]_srl4_n_0 ;
  wire \mem_reg[3][45]_srl4_n_0 ;
  wire \mem_reg[3][46]_srl4_n_0 ;
  wire \mem_reg[3][47]_srl4_n_0 ;
  wire \mem_reg[3][48]_srl4_n_0 ;
  wire \mem_reg[3][49]_srl4_n_0 ;
  wire \mem_reg[3][4]_srl4_n_0 ;
  wire \mem_reg[3][50]_srl4_n_0 ;
  wire \mem_reg[3][51]_srl4_n_0 ;
  wire \mem_reg[3][52]_srl4_n_0 ;
  wire \mem_reg[3][53]_srl4_n_0 ;
  wire \mem_reg[3][54]_srl4_n_0 ;
  wire \mem_reg[3][55]_srl4_n_0 ;
  wire \mem_reg[3][56]_srl4_n_0 ;
  wire \mem_reg[3][57]_srl4_n_0 ;
  wire \mem_reg[3][58]_srl4_n_0 ;
  wire \mem_reg[3][59]_srl4_n_0 ;
  wire \mem_reg[3][5]_srl4_n_0 ;
  wire \mem_reg[3][60]_srl4_n_0 ;
  wire \mem_reg[3][61]_srl4_n_0 ;
  wire \mem_reg[3][64]_srl4_n_0 ;
  wire \mem_reg[3][65]_srl4_n_0 ;
  wire \mem_reg[3][66]_srl4_n_0 ;
  wire \mem_reg[3][67]_srl4_n_0 ;
  wire \mem_reg[3][68]_srl4_n_0 ;
  wire \mem_reg[3][69]_srl4_n_0 ;
  wire \mem_reg[3][6]_srl4_n_0 ;
  wire \mem_reg[3][70]_srl4_n_0 ;
  wire \mem_reg[3][71]_srl4_n_0 ;
  wire \mem_reg[3][72]_srl4_n_0 ;
  wire \mem_reg[3][73]_srl4_n_0 ;
  wire \mem_reg[3][74]_srl4_n_0 ;
  wire \mem_reg[3][75]_srl4_n_0 ;
  wire \mem_reg[3][76]_srl4_n_0 ;
  wire \mem_reg[3][77]_srl4_n_0 ;
  wire \mem_reg[3][78]_srl4_n_0 ;
  wire \mem_reg[3][79]_srl4_n_0 ;
  wire \mem_reg[3][7]_srl4_n_0 ;
  wire \mem_reg[3][80]_srl4_n_0 ;
  wire \mem_reg[3][81]_srl4_n_0 ;
  wire \mem_reg[3][82]_srl4_n_0 ;
  wire \mem_reg[3][83]_srl4_n_0 ;
  wire \mem_reg[3][84]_srl4_n_0 ;
  wire \mem_reg[3][85]_srl4_n_0 ;
  wire \mem_reg[3][86]_srl4_n_0 ;
  wire \mem_reg[3][87]_srl4_n_0 ;
  wire \mem_reg[3][88]_srl4_n_0 ;
  wire \mem_reg[3][89]_srl4_n_0 ;
  wire \mem_reg[3][8]_srl4_n_0 ;
  wire \mem_reg[3][90]_srl4_n_0 ;
  wire \mem_reg[3][91]_srl4_n_0 ;
  wire \mem_reg[3][92]_srl4_n_0 ;
  wire \mem_reg[3][93]_srl4_n_0 ;
  wire \mem_reg[3][94]_srl4_n_0 ;
  wire \mem_reg[3][9]_srl4_n_0 ;
  wire pop;
  wire push;
  wire push_0;
  wire tmp_valid_reg;
  wire valid_length;
  wire [30:29]wreq_len;
  wire wrsp_ready;

  LUT5 #(
    .INIT(32'hA2FF0000)) 
    \dout[94]_i_1 
       (.I0(wrsp_ready),
        .I1(tmp_valid_reg),
        .I2(AWREADY_Dummy),
        .I3(\dout_reg[0]_0 ),
        .I4(\dout_reg[0]_1 ),
        .O(pop));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][0]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [0]),
        .R(SR));
  FDRE \dout_reg[10] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][10]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [10]),
        .R(SR));
  FDRE \dout_reg[11] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][11]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [11]),
        .R(SR));
  FDRE \dout_reg[12] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][12]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [12]),
        .R(SR));
  FDRE \dout_reg[13] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][13]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [13]),
        .R(SR));
  FDRE \dout_reg[14] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][14]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [14]),
        .R(SR));
  FDRE \dout_reg[15] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][15]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [15]),
        .R(SR));
  FDRE \dout_reg[16] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][16]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [16]),
        .R(SR));
  FDRE \dout_reg[17] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][17]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [17]),
        .R(SR));
  FDRE \dout_reg[18] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][18]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [18]),
        .R(SR));
  FDRE \dout_reg[19] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][19]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [19]),
        .R(SR));
  FDRE \dout_reg[1] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][1]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [1]),
        .R(SR));
  FDRE \dout_reg[20] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][20]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [20]),
        .R(SR));
  FDRE \dout_reg[21] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][21]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [21]),
        .R(SR));
  FDRE \dout_reg[22] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][22]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [22]),
        .R(SR));
  FDRE \dout_reg[23] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][23]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [23]),
        .R(SR));
  FDRE \dout_reg[24] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][24]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [24]),
        .R(SR));
  FDRE \dout_reg[25] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][25]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [25]),
        .R(SR));
  FDRE \dout_reg[26] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][26]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [26]),
        .R(SR));
  FDRE \dout_reg[27] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][27]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [27]),
        .R(SR));
  FDRE \dout_reg[28] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][28]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [28]),
        .R(SR));
  FDRE \dout_reg[29] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][29]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [29]),
        .R(SR));
  FDRE \dout_reg[2] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][2]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [2]),
        .R(SR));
  FDRE \dout_reg[30] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][30]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [30]),
        .R(SR));
  FDRE \dout_reg[31] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][31]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [31]),
        .R(SR));
  FDRE \dout_reg[32] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][32]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [32]),
        .R(SR));
  FDRE \dout_reg[33] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][33]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [33]),
        .R(SR));
  FDRE \dout_reg[34] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][34]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [34]),
        .R(SR));
  FDRE \dout_reg[35] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][35]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [35]),
        .R(SR));
  FDRE \dout_reg[36] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][36]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [36]),
        .R(SR));
  FDRE \dout_reg[37] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][37]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [37]),
        .R(SR));
  FDRE \dout_reg[38] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][38]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [38]),
        .R(SR));
  FDRE \dout_reg[39] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][39]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [39]),
        .R(SR));
  FDRE \dout_reg[3] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][3]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [3]),
        .R(SR));
  FDRE \dout_reg[40] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][40]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [40]),
        .R(SR));
  FDRE \dout_reg[41] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][41]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [41]),
        .R(SR));
  FDRE \dout_reg[42] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][42]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [42]),
        .R(SR));
  FDRE \dout_reg[43] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][43]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [43]),
        .R(SR));
  FDRE \dout_reg[44] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][44]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [44]),
        .R(SR));
  FDRE \dout_reg[45] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][45]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [45]),
        .R(SR));
  FDRE \dout_reg[46] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][46]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [46]),
        .R(SR));
  FDRE \dout_reg[47] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][47]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [47]),
        .R(SR));
  FDRE \dout_reg[48] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][48]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [48]),
        .R(SR));
  FDRE \dout_reg[49] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][49]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [49]),
        .R(SR));
  FDRE \dout_reg[4] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][4]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [4]),
        .R(SR));
  FDRE \dout_reg[50] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][50]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [50]),
        .R(SR));
  FDRE \dout_reg[51] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][51]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [51]),
        .R(SR));
  FDRE \dout_reg[52] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][52]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [52]),
        .R(SR));
  FDRE \dout_reg[53] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][53]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [53]),
        .R(SR));
  FDRE \dout_reg[54] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][54]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [54]),
        .R(SR));
  FDRE \dout_reg[55] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][55]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [55]),
        .R(SR));
  FDRE \dout_reg[56] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][56]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [56]),
        .R(SR));
  FDRE \dout_reg[57] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][57]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [57]),
        .R(SR));
  FDRE \dout_reg[58] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][58]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [58]),
        .R(SR));
  FDRE \dout_reg[59] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][59]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [59]),
        .R(SR));
  FDRE \dout_reg[5] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][5]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [5]),
        .R(SR));
  FDRE \dout_reg[60] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][60]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [60]),
        .R(SR));
  FDRE \dout_reg[61] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][61]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [61]),
        .R(SR));
  FDRE \dout_reg[64] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][64]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [62]),
        .R(SR));
  FDRE \dout_reg[65] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][65]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [63]),
        .R(SR));
  FDRE \dout_reg[66] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][66]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [64]),
        .R(SR));
  FDRE \dout_reg[67] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][67]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [65]),
        .R(SR));
  FDRE \dout_reg[68] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][68]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [66]),
        .R(SR));
  FDRE \dout_reg[69] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][69]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [67]),
        .R(SR));
  FDRE \dout_reg[6] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][6]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [6]),
        .R(SR));
  FDRE \dout_reg[70] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][70]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [68]),
        .R(SR));
  FDRE \dout_reg[71] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][71]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [69]),
        .R(SR));
  FDRE \dout_reg[72] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][72]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [70]),
        .R(SR));
  FDRE \dout_reg[73] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][73]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [71]),
        .R(SR));
  FDRE \dout_reg[74] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][74]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [72]),
        .R(SR));
  FDRE \dout_reg[75] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][75]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [73]),
        .R(SR));
  FDRE \dout_reg[76] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][76]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [74]),
        .R(SR));
  FDRE \dout_reg[77] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][77]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [75]),
        .R(SR));
  FDRE \dout_reg[78] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][78]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [76]),
        .R(SR));
  FDRE \dout_reg[79] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][79]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [77]),
        .R(SR));
  FDRE \dout_reg[7] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][7]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [7]),
        .R(SR));
  FDRE \dout_reg[80] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][80]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [78]),
        .R(SR));
  FDRE \dout_reg[81] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][81]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [79]),
        .R(SR));
  FDRE \dout_reg[82] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][82]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [80]),
        .R(SR));
  FDRE \dout_reg[83] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][83]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [81]),
        .R(SR));
  FDRE \dout_reg[84] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][84]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [82]),
        .R(SR));
  FDRE \dout_reg[85] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][85]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [83]),
        .R(SR));
  FDRE \dout_reg[86] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][86]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [84]),
        .R(SR));
  FDRE \dout_reg[87] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][87]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [85]),
        .R(SR));
  FDRE \dout_reg[88] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][88]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [86]),
        .R(SR));
  FDRE \dout_reg[89] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][89]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [87]),
        .R(SR));
  FDRE \dout_reg[8] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][8]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [8]),
        .R(SR));
  FDRE \dout_reg[90] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][90]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [88]),
        .R(SR));
  FDRE \dout_reg[91] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][91]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [89]),
        .R(SR));
  FDRE \dout_reg[92] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][92]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [90]),
        .R(SR));
  FDRE \dout_reg[93] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][93]_srl4_n_0 ),
        .Q(wreq_len[29]),
        .R(SR));
  FDRE \dout_reg[94] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][94]_srl4_n_0 ),
        .Q(wreq_len[30]),
        .R(SR));
  FDRE \dout_reg[9] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][9]_srl4_n_0 ),
        .Q(\dout_reg[92]_0 [9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'hB000)) 
    \mem_reg[14][0]_srl15_i_1 
       (.I0(AWREADY_Dummy),
        .I1(tmp_valid_reg),
        .I2(\dout_reg[0]_0 ),
        .I3(wrsp_ready),
        .O(push));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mem_reg[14][0]_srl15_i_2 
       (.I0(\mem_reg[14][0]_srl15_i_3_n_0 ),
        .I1(\dout_reg[92]_0 [76]),
        .I2(\dout_reg[92]_0 [77]),
        .I3(\mem_reg[14][0]_srl15_i_4_n_0 ),
        .I4(\mem_reg[14][0]_srl15_i_5_n_0 ),
        .O(valid_length));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mem_reg[14][0]_srl15_i_3 
       (.I0(\mem_reg[14][0]_srl15_i_6_n_0 ),
        .I1(\dout_reg[92]_0 [67]),
        .I2(\dout_reg[92]_0 [66]),
        .I3(\dout_reg[92]_0 [65]),
        .I4(\dout_reg[92]_0 [64]),
        .O(\mem_reg[14][0]_srl15_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mem_reg[14][0]_srl15_i_4 
       (.I0(\mem_reg[14][0]_srl15_i_7_n_0 ),
        .I1(\mem_reg[14][0]_srl15_i_8_n_0 ),
        .I2(\dout_reg[92]_0 [90]),
        .I3(wreq_len[29]),
        .I4(\dout_reg[92]_0 [79]),
        .I5(\mem_reg[14][0]_srl15_i_9_n_0 ),
        .O(\mem_reg[14][0]_srl15_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mem_reg[14][0]_srl15_i_5 
       (.I0(\dout_reg[92]_0 [68]),
        .I1(\dout_reg[92]_0 [69]),
        .I2(\dout_reg[92]_0 [70]),
        .I3(\dout_reg[92]_0 [71]),
        .O(\mem_reg[14][0]_srl15_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mem_reg[14][0]_srl15_i_6 
       (.I0(\dout_reg[92]_0 [75]),
        .I1(\dout_reg[92]_0 [74]),
        .I2(\dout_reg[92]_0 [73]),
        .I3(\dout_reg[92]_0 [72]),
        .I4(\dout_reg[92]_0 [62]),
        .I5(\dout_reg[92]_0 [63]),
        .O(\mem_reg[14][0]_srl15_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mem_reg[14][0]_srl15_i_7 
       (.I0(\dout_reg[92]_0 [85]),
        .I1(\dout_reg[92]_0 [82]),
        .I2(\dout_reg[92]_0 [87]),
        .I3(\dout_reg[92]_0 [84]),
        .O(\mem_reg[14][0]_srl15_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mem_reg[14][0]_srl15_i_8 
       (.I0(\dout_reg[92]_0 [81]),
        .I1(\dout_reg[92]_0 [78]),
        .I2(\dout_reg[92]_0 [83]),
        .I3(\dout_reg[92]_0 [80]),
        .O(\mem_reg[14][0]_srl15_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mem_reg[14][0]_srl15_i_9 
       (.I0(\dout_reg[92]_0 [89]),
        .I1(\dout_reg[92]_0 [86]),
        .I2(wreq_len[30]),
        .I3(\dout_reg[92]_0 [88]),
        .O(\mem_reg[14][0]_srl15_i_9_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][0]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[0]),
        .Q(\mem_reg[3][0]_srl4_n_0 ));
  LUT4 #(
    .INIT(16'hE000)) 
    \mem_reg[3][0]_srl4_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\dout_reg[94]_0 ),
        .I3(\dout_reg[94]_1 ),
        .O(push_0));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][10]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[10]),
        .Q(\mem_reg[3][10]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][11]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[11]),
        .Q(\mem_reg[3][11]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][12]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[12]),
        .Q(\mem_reg[3][12]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][13]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[13]),
        .Q(\mem_reg[3][13]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][14]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[14]),
        .Q(\mem_reg[3][14]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][15]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[15]),
        .Q(\mem_reg[3][15]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][16]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[16]),
        .Q(\mem_reg[3][16]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][17]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[17]),
        .Q(\mem_reg[3][17]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][18]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[18]),
        .Q(\mem_reg[3][18]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][19]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[19]),
        .Q(\mem_reg[3][19]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][1]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[1]),
        .Q(\mem_reg[3][1]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][20]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[20]),
        .Q(\mem_reg[3][20]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][21]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[21]),
        .Q(\mem_reg[3][21]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][22]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[22]),
        .Q(\mem_reg[3][22]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][23]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[23]),
        .Q(\mem_reg[3][23]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][24]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[24]),
        .Q(\mem_reg[3][24]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][25]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[25]),
        .Q(\mem_reg[3][25]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][26]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[26]),
        .Q(\mem_reg[3][26]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][27]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[27]),
        .Q(\mem_reg[3][27]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][28]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[28]),
        .Q(\mem_reg[3][28]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][29]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[29]),
        .Q(\mem_reg[3][29]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][2]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[2]),
        .Q(\mem_reg[3][2]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][30]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[30]),
        .Q(\mem_reg[3][30]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][31]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[31]),
        .Q(\mem_reg[3][31]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][32]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][32]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[32]),
        .Q(\mem_reg[3][32]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][33]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][33]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[33]),
        .Q(\mem_reg[3][33]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][34]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][34]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[34]),
        .Q(\mem_reg[3][34]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][35]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][35]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[35]),
        .Q(\mem_reg[3][35]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][36]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][36]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[36]),
        .Q(\mem_reg[3][36]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][37]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][37]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[37]),
        .Q(\mem_reg[3][37]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][38]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][38]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[38]),
        .Q(\mem_reg[3][38]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][39]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][39]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[39]),
        .Q(\mem_reg[3][39]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][3]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[3]),
        .Q(\mem_reg[3][3]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][40]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][40]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[40]),
        .Q(\mem_reg[3][40]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][41]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][41]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[41]),
        .Q(\mem_reg[3][41]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][42]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][42]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[42]),
        .Q(\mem_reg[3][42]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][43]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][43]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[43]),
        .Q(\mem_reg[3][43]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][44]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][44]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[44]),
        .Q(\mem_reg[3][44]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][45]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][45]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[45]),
        .Q(\mem_reg[3][45]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][46]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][46]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[46]),
        .Q(\mem_reg[3][46]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][47]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][47]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[47]),
        .Q(\mem_reg[3][47]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][48]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][48]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[48]),
        .Q(\mem_reg[3][48]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][49]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][49]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[49]),
        .Q(\mem_reg[3][49]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][4]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[4]),
        .Q(\mem_reg[3][4]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][50]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][50]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[50]),
        .Q(\mem_reg[3][50]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][51]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][51]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[51]),
        .Q(\mem_reg[3][51]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][52]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][52]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[52]),
        .Q(\mem_reg[3][52]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][53]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][53]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[53]),
        .Q(\mem_reg[3][53]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][54]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][54]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[54]),
        .Q(\mem_reg[3][54]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][55]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][55]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[55]),
        .Q(\mem_reg[3][55]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][56]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][56]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[56]),
        .Q(\mem_reg[3][56]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][57]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][57]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[57]),
        .Q(\mem_reg[3][57]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][58]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][58]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[58]),
        .Q(\mem_reg[3][58]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][59]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][59]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[59]),
        .Q(\mem_reg[3][59]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][5]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[5]),
        .Q(\mem_reg[3][5]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][60]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][60]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[60]),
        .Q(\mem_reg[3][60]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][61]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][61]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[61]),
        .Q(\mem_reg[3][61]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][64]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][64]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[62]),
        .Q(\mem_reg[3][64]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][65]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][65]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[63]),
        .Q(\mem_reg[3][65]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][66]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][66]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[64]),
        .Q(\mem_reg[3][66]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][67]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][67]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[65]),
        .Q(\mem_reg[3][67]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][68]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][68]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[66]),
        .Q(\mem_reg[3][68]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][69]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][69]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[67]),
        .Q(\mem_reg[3][69]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][6]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[6]),
        .Q(\mem_reg[3][6]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][70]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][70]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[68]),
        .Q(\mem_reg[3][70]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][71]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][71]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[69]),
        .Q(\mem_reg[3][71]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][72]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][72]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[70]),
        .Q(\mem_reg[3][72]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][73]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][73]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[71]),
        .Q(\mem_reg[3][73]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][74]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][74]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[72]),
        .Q(\mem_reg[3][74]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][75]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][75]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[73]),
        .Q(\mem_reg[3][75]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][76]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][76]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[74]),
        .Q(\mem_reg[3][76]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][77]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][77]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[75]),
        .Q(\mem_reg[3][77]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][78]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][78]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[76]),
        .Q(\mem_reg[3][78]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][79]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][79]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[77]),
        .Q(\mem_reg[3][79]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][7]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[7]),
        .Q(\mem_reg[3][7]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][80]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][80]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[78]),
        .Q(\mem_reg[3][80]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][81]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][81]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[79]),
        .Q(\mem_reg[3][81]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][82]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][82]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[80]),
        .Q(\mem_reg[3][82]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][83]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][83]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[81]),
        .Q(\mem_reg[3][83]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][84]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][84]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[82]),
        .Q(\mem_reg[3][84]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][85]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][85]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[83]),
        .Q(\mem_reg[3][85]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][86]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][86]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[84]),
        .Q(\mem_reg[3][86]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][87]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][87]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[85]),
        .Q(\mem_reg[3][87]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][88]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][88]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[86]),
        .Q(\mem_reg[3][88]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][89]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][89]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[87]),
        .Q(\mem_reg[3][89]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][8]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[8]),
        .Q(\mem_reg[3][8]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][90]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][90]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[88]),
        .Q(\mem_reg[3][90]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][91]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][91]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[89]),
        .Q(\mem_reg[3][91]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][92]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][92]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[90]),
        .Q(\mem_reg[3][92]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][93]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][93]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[91]),
        .Q(\mem_reg[3][93]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][94]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][94]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[92]),
        .Q(\mem_reg[3][94]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wreq/U_fifo_srl/mem_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][9]_srl4 
       (.A0(\dout_reg[94]_2 ),
        .A1(\dout_reg[94]_3 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push_0),
        .CLK(ap_clk),
        .D(in[9]),
        .Q(\mem_reg[3][9]_srl4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_1
       (.I0(\dout_reg[92]_0 [68]),
        .O(\dout_reg[70]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_2
       (.I0(\dout_reg[92]_0 [67]),
        .O(\dout_reg[70]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_3
       (.I0(\dout_reg[92]_0 [66]),
        .O(\dout_reg[70]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_4
       (.I0(\dout_reg[92]_0 [65]),
        .O(\dout_reg[70]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_1
       (.I0(\dout_reg[92]_0 [72]),
        .O(S[3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_2
       (.I0(\dout_reg[92]_0 [71]),
        .O(S[2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_3
       (.I0(\dout_reg[92]_0 [70]),
        .O(S[1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_4
       (.I0(\dout_reg[92]_0 [69]),
        .O(S[0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_1
       (.I0(\dout_reg[92]_0 [76]),
        .O(\dout_reg[78]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_2
       (.I0(\dout_reg[92]_0 [75]),
        .O(\dout_reg[78]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_3
       (.I0(\dout_reg[92]_0 [74]),
        .O(\dout_reg[78]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_4
       (.I0(\dout_reg[92]_0 [73]),
        .O(\dout_reg[78]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_1
       (.I0(\dout_reg[92]_0 [80]),
        .O(\dout_reg[82]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_2
       (.I0(\dout_reg[92]_0 [79]),
        .O(\dout_reg[82]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_3
       (.I0(\dout_reg[92]_0 [78]),
        .O(\dout_reg[82]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_4
       (.I0(\dout_reg[92]_0 [77]),
        .O(\dout_reg[82]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_1
       (.I0(\dout_reg[92]_0 [84]),
        .O(\dout_reg[86]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_2
       (.I0(\dout_reg[92]_0 [83]),
        .O(\dout_reg[86]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_3
       (.I0(\dout_reg[92]_0 [82]),
        .O(\dout_reg[86]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_4
       (.I0(\dout_reg[92]_0 [81]),
        .O(\dout_reg[86]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_1
       (.I0(\dout_reg[92]_0 [88]),
        .O(\dout_reg[90]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_2
       (.I0(\dout_reg[92]_0 [87]),
        .O(\dout_reg[90]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_3
       (.I0(\dout_reg[92]_0 [86]),
        .O(\dout_reg[90]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_4
       (.I0(\dout_reg[92]_0 [85]),
        .O(\dout_reg[90]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_1
       (.I0(wreq_len[29]),
        .O(\dout_reg[93]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_2
       (.I0(\dout_reg[92]_0 [90]),
        .O(\dout_reg[93]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_3
       (.I0(\dout_reg[92]_0 [89]),
        .O(\dout_reg[93]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_1
       (.I0(\dout_reg[92]_0 [64]),
        .O(\dout_reg[66]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_2
       (.I0(\dout_reg[92]_0 [63]),
        .O(\dout_reg[66]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_3
       (.I0(\dout_reg[92]_0 [62]),
        .O(\dout_reg[66]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT5 #(
    .INIT(32'h8080FF80)) 
    tmp_valid_i_1
       (.I0(valid_length),
        .I1(wrsp_ready),
        .I2(\dout_reg[0]_0 ),
        .I3(tmp_valid_reg),
        .I4(AWREADY_Dummy),
        .O(full_n_reg));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl_11
   (pop,
    Q,
    push,
    S,
    \dout_reg[70]_0 ,
    \dout_reg[66]_0 ,
    \dout_reg[78]_0 ,
    \dout_reg[82]_0 ,
    \dout_reg[86]_0 ,
    \dout_reg[90]_0 ,
    \dout_reg[93]_0 ,
    s_ready_t_reg,
    tmp_valid_reg,
    ARREADY_Dummy,
    rreq_valid,
    \dout_reg[0]_0 ,
    E,
    \dout_reg[94]_0 ,
    grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg,
    \dout_reg[94]_1 ,
    \dout_reg[94]_2 ,
    \dout_reg[94]_3 ,
    \dout_reg[94]_4 ,
    \dout_reg[94]_5 ,
    ap_clk,
    SR);
  output pop;
  output [90:0]Q;
  output push;
  output [3:0]S;
  output [3:0]\dout_reg[70]_0 ;
  output [2:0]\dout_reg[66]_0 ;
  output [3:0]\dout_reg[78]_0 ;
  output [3:0]\dout_reg[82]_0 ;
  output [3:0]\dout_reg[86]_0 ;
  output [3:0]\dout_reg[90]_0 ;
  output [2:0]\dout_reg[93]_0 ;
  output s_ready_t_reg;
  input tmp_valid_reg;
  input ARREADY_Dummy;
  input rreq_valid;
  input \dout_reg[0]_0 ;
  input [0:0]E;
  input \dout_reg[94]_0 ;
  input grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  input [0:0]\dout_reg[94]_1 ;
  input [1:0]\dout_reg[94]_2 ;
  input [92:0]\dout_reg[94]_3 ;
  input \dout_reg[94]_4 ;
  input \dout_reg[94]_5 ;
  input ap_clk;
  input [0:0]SR;

  wire ARREADY_Dummy;
  wire [0:0]E;
  wire [90:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire ap_clk;
  wire \dout_reg[0]_0 ;
  wire [2:0]\dout_reg[66]_0 ;
  wire [3:0]\dout_reg[70]_0 ;
  wire [3:0]\dout_reg[78]_0 ;
  wire [3:0]\dout_reg[82]_0 ;
  wire [3:0]\dout_reg[86]_0 ;
  wire [3:0]\dout_reg[90]_0 ;
  wire [2:0]\dout_reg[93]_0 ;
  wire \dout_reg[94]_0 ;
  wire [0:0]\dout_reg[94]_1 ;
  wire [1:0]\dout_reg[94]_2 ;
  wire [92:0]\dout_reg[94]_3 ;
  wire \dout_reg[94]_4 ;
  wire \dout_reg[94]_5 ;
  wire grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg;
  wire \mem_reg[3][0]_srl4_n_0 ;
  wire \mem_reg[3][10]_srl4_n_0 ;
  wire \mem_reg[3][11]_srl4_n_0 ;
  wire \mem_reg[3][12]_srl4_n_0 ;
  wire \mem_reg[3][13]_srl4_n_0 ;
  wire \mem_reg[3][14]_srl4_n_0 ;
  wire \mem_reg[3][15]_srl4_n_0 ;
  wire \mem_reg[3][16]_srl4_n_0 ;
  wire \mem_reg[3][17]_srl4_n_0 ;
  wire \mem_reg[3][18]_srl4_n_0 ;
  wire \mem_reg[3][19]_srl4_n_0 ;
  wire \mem_reg[3][1]_srl4_n_0 ;
  wire \mem_reg[3][20]_srl4_n_0 ;
  wire \mem_reg[3][21]_srl4_n_0 ;
  wire \mem_reg[3][22]_srl4_n_0 ;
  wire \mem_reg[3][23]_srl4_n_0 ;
  wire \mem_reg[3][24]_srl4_n_0 ;
  wire \mem_reg[3][25]_srl4_n_0 ;
  wire \mem_reg[3][26]_srl4_n_0 ;
  wire \mem_reg[3][27]_srl4_n_0 ;
  wire \mem_reg[3][28]_srl4_n_0 ;
  wire \mem_reg[3][29]_srl4_n_0 ;
  wire \mem_reg[3][2]_srl4_n_0 ;
  wire \mem_reg[3][30]_srl4_n_0 ;
  wire \mem_reg[3][31]_srl4_n_0 ;
  wire \mem_reg[3][32]_srl4_n_0 ;
  wire \mem_reg[3][33]_srl4_n_0 ;
  wire \mem_reg[3][34]_srl4_n_0 ;
  wire \mem_reg[3][35]_srl4_n_0 ;
  wire \mem_reg[3][36]_srl4_n_0 ;
  wire \mem_reg[3][37]_srl4_n_0 ;
  wire \mem_reg[3][38]_srl4_n_0 ;
  wire \mem_reg[3][39]_srl4_n_0 ;
  wire \mem_reg[3][3]_srl4_n_0 ;
  wire \mem_reg[3][40]_srl4_n_0 ;
  wire \mem_reg[3][41]_srl4_n_0 ;
  wire \mem_reg[3][42]_srl4_n_0 ;
  wire \mem_reg[3][43]_srl4_n_0 ;
  wire \mem_reg[3][44]_srl4_n_0 ;
  wire \mem_reg[3][45]_srl4_n_0 ;
  wire \mem_reg[3][46]_srl4_n_0 ;
  wire \mem_reg[3][47]_srl4_n_0 ;
  wire \mem_reg[3][48]_srl4_n_0 ;
  wire \mem_reg[3][49]_srl4_n_0 ;
  wire \mem_reg[3][4]_srl4_n_0 ;
  wire \mem_reg[3][50]_srl4_n_0 ;
  wire \mem_reg[3][51]_srl4_n_0 ;
  wire \mem_reg[3][52]_srl4_n_0 ;
  wire \mem_reg[3][53]_srl4_n_0 ;
  wire \mem_reg[3][54]_srl4_n_0 ;
  wire \mem_reg[3][55]_srl4_n_0 ;
  wire \mem_reg[3][56]_srl4_n_0 ;
  wire \mem_reg[3][57]_srl4_n_0 ;
  wire \mem_reg[3][58]_srl4_n_0 ;
  wire \mem_reg[3][59]_srl4_n_0 ;
  wire \mem_reg[3][5]_srl4_n_0 ;
  wire \mem_reg[3][60]_srl4_n_0 ;
  wire \mem_reg[3][61]_srl4_n_0 ;
  wire \mem_reg[3][64]_srl4_n_0 ;
  wire \mem_reg[3][65]_srl4_n_0 ;
  wire \mem_reg[3][66]_srl4_n_0 ;
  wire \mem_reg[3][67]_srl4_n_0 ;
  wire \mem_reg[3][68]_srl4_n_0 ;
  wire \mem_reg[3][69]_srl4_n_0 ;
  wire \mem_reg[3][6]_srl4_n_0 ;
  wire \mem_reg[3][70]_srl4_n_0 ;
  wire \mem_reg[3][71]_srl4_n_0 ;
  wire \mem_reg[3][72]_srl4_n_0 ;
  wire \mem_reg[3][73]_srl4_n_0 ;
  wire \mem_reg[3][74]_srl4_n_0 ;
  wire \mem_reg[3][75]_srl4_n_0 ;
  wire \mem_reg[3][76]_srl4_n_0 ;
  wire \mem_reg[3][77]_srl4_n_0 ;
  wire \mem_reg[3][78]_srl4_n_0 ;
  wire \mem_reg[3][79]_srl4_n_0 ;
  wire \mem_reg[3][7]_srl4_n_0 ;
  wire \mem_reg[3][80]_srl4_n_0 ;
  wire \mem_reg[3][81]_srl4_n_0 ;
  wire \mem_reg[3][82]_srl4_n_0 ;
  wire \mem_reg[3][83]_srl4_n_0 ;
  wire \mem_reg[3][84]_srl4_n_0 ;
  wire \mem_reg[3][85]_srl4_n_0 ;
  wire \mem_reg[3][86]_srl4_n_0 ;
  wire \mem_reg[3][87]_srl4_n_0 ;
  wire \mem_reg[3][88]_srl4_n_0 ;
  wire \mem_reg[3][89]_srl4_n_0 ;
  wire \mem_reg[3][8]_srl4_n_0 ;
  wire \mem_reg[3][90]_srl4_n_0 ;
  wire \mem_reg[3][91]_srl4_n_0 ;
  wire \mem_reg[3][92]_srl4_n_0 ;
  wire \mem_reg[3][93]_srl4_n_0 ;
  wire \mem_reg[3][94]_srl4_n_0 ;
  wire \mem_reg[3][9]_srl4_n_0 ;
  wire pop;
  wire push;
  wire [30:29]rreq_len;
  wire rreq_valid;
  wire s_ready_t_reg;
  wire tmp_valid0;
  wire tmp_valid_i_3_n_0;
  wire tmp_valid_i_4_n_0;
  wire tmp_valid_i_5_n_0;
  wire tmp_valid_i_6_n_0;
  wire tmp_valid_i_7_n_0;
  wire tmp_valid_i_8_n_0;
  wire tmp_valid_i_9_n_0;
  wire tmp_valid_reg;

  LUT4 #(
    .INIT(16'hDF00)) 
    \dout[94]_i_1__0 
       (.I0(tmp_valid_reg),
        .I1(ARREADY_Dummy),
        .I2(rreq_valid),
        .I3(\dout_reg[0]_0 ),
        .O(pop));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][0]_srl4_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE \dout_reg[10] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][10]_srl4_n_0 ),
        .Q(Q[10]),
        .R(SR));
  FDRE \dout_reg[11] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][11]_srl4_n_0 ),
        .Q(Q[11]),
        .R(SR));
  FDRE \dout_reg[12] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][12]_srl4_n_0 ),
        .Q(Q[12]),
        .R(SR));
  FDRE \dout_reg[13] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][13]_srl4_n_0 ),
        .Q(Q[13]),
        .R(SR));
  FDRE \dout_reg[14] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][14]_srl4_n_0 ),
        .Q(Q[14]),
        .R(SR));
  FDRE \dout_reg[15] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][15]_srl4_n_0 ),
        .Q(Q[15]),
        .R(SR));
  FDRE \dout_reg[16] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][16]_srl4_n_0 ),
        .Q(Q[16]),
        .R(SR));
  FDRE \dout_reg[17] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][17]_srl4_n_0 ),
        .Q(Q[17]),
        .R(SR));
  FDRE \dout_reg[18] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][18]_srl4_n_0 ),
        .Q(Q[18]),
        .R(SR));
  FDRE \dout_reg[19] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][19]_srl4_n_0 ),
        .Q(Q[19]),
        .R(SR));
  FDRE \dout_reg[1] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][1]_srl4_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE \dout_reg[20] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][20]_srl4_n_0 ),
        .Q(Q[20]),
        .R(SR));
  FDRE \dout_reg[21] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][21]_srl4_n_0 ),
        .Q(Q[21]),
        .R(SR));
  FDRE \dout_reg[22] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][22]_srl4_n_0 ),
        .Q(Q[22]),
        .R(SR));
  FDRE \dout_reg[23] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][23]_srl4_n_0 ),
        .Q(Q[23]),
        .R(SR));
  FDRE \dout_reg[24] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][24]_srl4_n_0 ),
        .Q(Q[24]),
        .R(SR));
  FDRE \dout_reg[25] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][25]_srl4_n_0 ),
        .Q(Q[25]),
        .R(SR));
  FDRE \dout_reg[26] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][26]_srl4_n_0 ),
        .Q(Q[26]),
        .R(SR));
  FDRE \dout_reg[27] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][27]_srl4_n_0 ),
        .Q(Q[27]),
        .R(SR));
  FDRE \dout_reg[28] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][28]_srl4_n_0 ),
        .Q(Q[28]),
        .R(SR));
  FDRE \dout_reg[29] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][29]_srl4_n_0 ),
        .Q(Q[29]),
        .R(SR));
  FDRE \dout_reg[2] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][2]_srl4_n_0 ),
        .Q(Q[2]),
        .R(SR));
  FDRE \dout_reg[30] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][30]_srl4_n_0 ),
        .Q(Q[30]),
        .R(SR));
  FDRE \dout_reg[31] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][31]_srl4_n_0 ),
        .Q(Q[31]),
        .R(SR));
  FDRE \dout_reg[32] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][32]_srl4_n_0 ),
        .Q(Q[32]),
        .R(SR));
  FDRE \dout_reg[33] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][33]_srl4_n_0 ),
        .Q(Q[33]),
        .R(SR));
  FDRE \dout_reg[34] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][34]_srl4_n_0 ),
        .Q(Q[34]),
        .R(SR));
  FDRE \dout_reg[35] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][35]_srl4_n_0 ),
        .Q(Q[35]),
        .R(SR));
  FDRE \dout_reg[36] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][36]_srl4_n_0 ),
        .Q(Q[36]),
        .R(SR));
  FDRE \dout_reg[37] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][37]_srl4_n_0 ),
        .Q(Q[37]),
        .R(SR));
  FDRE \dout_reg[38] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][38]_srl4_n_0 ),
        .Q(Q[38]),
        .R(SR));
  FDRE \dout_reg[39] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][39]_srl4_n_0 ),
        .Q(Q[39]),
        .R(SR));
  FDRE \dout_reg[3] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][3]_srl4_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDRE \dout_reg[40] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][40]_srl4_n_0 ),
        .Q(Q[40]),
        .R(SR));
  FDRE \dout_reg[41] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][41]_srl4_n_0 ),
        .Q(Q[41]),
        .R(SR));
  FDRE \dout_reg[42] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][42]_srl4_n_0 ),
        .Q(Q[42]),
        .R(SR));
  FDRE \dout_reg[43] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][43]_srl4_n_0 ),
        .Q(Q[43]),
        .R(SR));
  FDRE \dout_reg[44] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][44]_srl4_n_0 ),
        .Q(Q[44]),
        .R(SR));
  FDRE \dout_reg[45] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][45]_srl4_n_0 ),
        .Q(Q[45]),
        .R(SR));
  FDRE \dout_reg[46] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][46]_srl4_n_0 ),
        .Q(Q[46]),
        .R(SR));
  FDRE \dout_reg[47] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][47]_srl4_n_0 ),
        .Q(Q[47]),
        .R(SR));
  FDRE \dout_reg[48] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][48]_srl4_n_0 ),
        .Q(Q[48]),
        .R(SR));
  FDRE \dout_reg[49] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][49]_srl4_n_0 ),
        .Q(Q[49]),
        .R(SR));
  FDRE \dout_reg[4] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][4]_srl4_n_0 ),
        .Q(Q[4]),
        .R(SR));
  FDRE \dout_reg[50] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][50]_srl4_n_0 ),
        .Q(Q[50]),
        .R(SR));
  FDRE \dout_reg[51] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][51]_srl4_n_0 ),
        .Q(Q[51]),
        .R(SR));
  FDRE \dout_reg[52] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][52]_srl4_n_0 ),
        .Q(Q[52]),
        .R(SR));
  FDRE \dout_reg[53] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][53]_srl4_n_0 ),
        .Q(Q[53]),
        .R(SR));
  FDRE \dout_reg[54] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][54]_srl4_n_0 ),
        .Q(Q[54]),
        .R(SR));
  FDRE \dout_reg[55] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][55]_srl4_n_0 ),
        .Q(Q[55]),
        .R(SR));
  FDRE \dout_reg[56] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][56]_srl4_n_0 ),
        .Q(Q[56]),
        .R(SR));
  FDRE \dout_reg[57] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][57]_srl4_n_0 ),
        .Q(Q[57]),
        .R(SR));
  FDRE \dout_reg[58] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][58]_srl4_n_0 ),
        .Q(Q[58]),
        .R(SR));
  FDRE \dout_reg[59] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][59]_srl4_n_0 ),
        .Q(Q[59]),
        .R(SR));
  FDRE \dout_reg[5] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][5]_srl4_n_0 ),
        .Q(Q[5]),
        .R(SR));
  FDRE \dout_reg[60] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][60]_srl4_n_0 ),
        .Q(Q[60]),
        .R(SR));
  FDRE \dout_reg[61] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][61]_srl4_n_0 ),
        .Q(Q[61]),
        .R(SR));
  FDRE \dout_reg[64] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][64]_srl4_n_0 ),
        .Q(Q[62]),
        .R(SR));
  FDRE \dout_reg[65] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][65]_srl4_n_0 ),
        .Q(Q[63]),
        .R(SR));
  FDRE \dout_reg[66] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][66]_srl4_n_0 ),
        .Q(Q[64]),
        .R(SR));
  FDRE \dout_reg[67] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][67]_srl4_n_0 ),
        .Q(Q[65]),
        .R(SR));
  FDRE \dout_reg[68] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][68]_srl4_n_0 ),
        .Q(Q[66]),
        .R(SR));
  FDRE \dout_reg[69] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][69]_srl4_n_0 ),
        .Q(Q[67]),
        .R(SR));
  FDRE \dout_reg[6] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][6]_srl4_n_0 ),
        .Q(Q[6]),
        .R(SR));
  FDRE \dout_reg[70] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][70]_srl4_n_0 ),
        .Q(Q[68]),
        .R(SR));
  FDRE \dout_reg[71] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][71]_srl4_n_0 ),
        .Q(Q[69]),
        .R(SR));
  FDRE \dout_reg[72] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][72]_srl4_n_0 ),
        .Q(Q[70]),
        .R(SR));
  FDRE \dout_reg[73] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][73]_srl4_n_0 ),
        .Q(Q[71]),
        .R(SR));
  FDRE \dout_reg[74] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][74]_srl4_n_0 ),
        .Q(Q[72]),
        .R(SR));
  FDRE \dout_reg[75] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][75]_srl4_n_0 ),
        .Q(Q[73]),
        .R(SR));
  FDRE \dout_reg[76] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][76]_srl4_n_0 ),
        .Q(Q[74]),
        .R(SR));
  FDRE \dout_reg[77] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][77]_srl4_n_0 ),
        .Q(Q[75]),
        .R(SR));
  FDRE \dout_reg[78] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][78]_srl4_n_0 ),
        .Q(Q[76]),
        .R(SR));
  FDRE \dout_reg[79] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][79]_srl4_n_0 ),
        .Q(Q[77]),
        .R(SR));
  FDRE \dout_reg[7] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][7]_srl4_n_0 ),
        .Q(Q[7]),
        .R(SR));
  FDRE \dout_reg[80] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][80]_srl4_n_0 ),
        .Q(Q[78]),
        .R(SR));
  FDRE \dout_reg[81] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][81]_srl4_n_0 ),
        .Q(Q[79]),
        .R(SR));
  FDRE \dout_reg[82] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][82]_srl4_n_0 ),
        .Q(Q[80]),
        .R(SR));
  FDRE \dout_reg[83] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][83]_srl4_n_0 ),
        .Q(Q[81]),
        .R(SR));
  FDRE \dout_reg[84] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][84]_srl4_n_0 ),
        .Q(Q[82]),
        .R(SR));
  FDRE \dout_reg[85] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][85]_srl4_n_0 ),
        .Q(Q[83]),
        .R(SR));
  FDRE \dout_reg[86] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][86]_srl4_n_0 ),
        .Q(Q[84]),
        .R(SR));
  FDRE \dout_reg[87] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][87]_srl4_n_0 ),
        .Q(Q[85]),
        .R(SR));
  FDRE \dout_reg[88] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][88]_srl4_n_0 ),
        .Q(Q[86]),
        .R(SR));
  FDRE \dout_reg[89] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][89]_srl4_n_0 ),
        .Q(Q[87]),
        .R(SR));
  FDRE \dout_reg[8] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][8]_srl4_n_0 ),
        .Q(Q[8]),
        .R(SR));
  FDRE \dout_reg[90] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][90]_srl4_n_0 ),
        .Q(Q[88]),
        .R(SR));
  FDRE \dout_reg[91] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][91]_srl4_n_0 ),
        .Q(Q[89]),
        .R(SR));
  FDRE \dout_reg[92] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][92]_srl4_n_0 ),
        .Q(Q[90]),
        .R(SR));
  FDRE \dout_reg[93] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][93]_srl4_n_0 ),
        .Q(rreq_len[29]),
        .R(SR));
  FDRE \dout_reg[94] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][94]_srl4_n_0 ),
        .Q(rreq_len[30]),
        .R(SR));
  FDRE \dout_reg[9] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[3][9]_srl4_n_0 ),
        .Q(Q[9]),
        .R(SR));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][0]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [0]),
        .Q(\mem_reg[3][0]_srl4_n_0 ));
  LUT5 #(
    .INIT(32'h80808000)) 
    \mem_reg[3][0]_srl4_i_1__0 
       (.I0(\dout_reg[94]_0 ),
        .I1(grp_fir_n11_maxi_Pipeline_XFER_LOOP_fu_242_ap_start_reg),
        .I2(\dout_reg[94]_1 ),
        .I3(\dout_reg[94]_2 [1]),
        .I4(\dout_reg[94]_2 [0]),
        .O(push));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][10]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [10]),
        .Q(\mem_reg[3][10]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][11]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [11]),
        .Q(\mem_reg[3][11]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][12]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [12]),
        .Q(\mem_reg[3][12]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][13]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [13]),
        .Q(\mem_reg[3][13]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][14]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [14]),
        .Q(\mem_reg[3][14]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][15]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [15]),
        .Q(\mem_reg[3][15]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][16]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [16]),
        .Q(\mem_reg[3][16]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][17]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [17]),
        .Q(\mem_reg[3][17]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][18]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [18]),
        .Q(\mem_reg[3][18]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][19]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [19]),
        .Q(\mem_reg[3][19]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][1]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [1]),
        .Q(\mem_reg[3][1]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][20]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [20]),
        .Q(\mem_reg[3][20]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][21]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [21]),
        .Q(\mem_reg[3][21]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][22]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [22]),
        .Q(\mem_reg[3][22]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][23]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [23]),
        .Q(\mem_reg[3][23]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][24]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [24]),
        .Q(\mem_reg[3][24]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][25]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [25]),
        .Q(\mem_reg[3][25]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][26]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [26]),
        .Q(\mem_reg[3][26]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][27]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [27]),
        .Q(\mem_reg[3][27]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][28]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [28]),
        .Q(\mem_reg[3][28]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][29]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [29]),
        .Q(\mem_reg[3][29]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][2]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [2]),
        .Q(\mem_reg[3][2]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][30]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [30]),
        .Q(\mem_reg[3][30]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][31]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [31]),
        .Q(\mem_reg[3][31]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][32]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][32]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [32]),
        .Q(\mem_reg[3][32]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][33]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][33]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [33]),
        .Q(\mem_reg[3][33]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][34]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][34]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [34]),
        .Q(\mem_reg[3][34]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][35]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][35]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [35]),
        .Q(\mem_reg[3][35]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][36]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][36]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [36]),
        .Q(\mem_reg[3][36]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][37]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][37]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [37]),
        .Q(\mem_reg[3][37]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][38]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][38]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [38]),
        .Q(\mem_reg[3][38]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][39]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][39]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [39]),
        .Q(\mem_reg[3][39]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][3]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [3]),
        .Q(\mem_reg[3][3]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][40]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][40]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [40]),
        .Q(\mem_reg[3][40]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][41]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][41]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [41]),
        .Q(\mem_reg[3][41]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][42]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][42]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [42]),
        .Q(\mem_reg[3][42]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][43]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][43]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [43]),
        .Q(\mem_reg[3][43]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][44]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][44]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [44]),
        .Q(\mem_reg[3][44]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][45]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][45]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [45]),
        .Q(\mem_reg[3][45]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][46]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][46]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [46]),
        .Q(\mem_reg[3][46]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][47]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][47]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [47]),
        .Q(\mem_reg[3][47]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][48]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][48]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [48]),
        .Q(\mem_reg[3][48]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][49]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][49]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [49]),
        .Q(\mem_reg[3][49]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][4]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [4]),
        .Q(\mem_reg[3][4]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][50]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][50]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [50]),
        .Q(\mem_reg[3][50]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][51]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][51]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [51]),
        .Q(\mem_reg[3][51]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][52]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][52]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [52]),
        .Q(\mem_reg[3][52]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][53]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][53]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [53]),
        .Q(\mem_reg[3][53]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][54]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][54]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [54]),
        .Q(\mem_reg[3][54]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][55]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][55]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [55]),
        .Q(\mem_reg[3][55]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][56]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][56]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [56]),
        .Q(\mem_reg[3][56]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][57]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][57]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [57]),
        .Q(\mem_reg[3][57]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][58]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][58]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [58]),
        .Q(\mem_reg[3][58]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][59]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][59]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [59]),
        .Q(\mem_reg[3][59]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][5]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [5]),
        .Q(\mem_reg[3][5]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][60]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][60]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [60]),
        .Q(\mem_reg[3][60]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][61]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][61]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [61]),
        .Q(\mem_reg[3][61]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][64]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][64]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [62]),
        .Q(\mem_reg[3][64]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][65]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][65]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [63]),
        .Q(\mem_reg[3][65]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][66]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][66]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [64]),
        .Q(\mem_reg[3][66]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][67]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][67]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [65]),
        .Q(\mem_reg[3][67]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][68]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][68]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [66]),
        .Q(\mem_reg[3][68]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][69]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][69]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [67]),
        .Q(\mem_reg[3][69]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][6]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [6]),
        .Q(\mem_reg[3][6]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][70]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][70]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [68]),
        .Q(\mem_reg[3][70]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][71]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][71]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [69]),
        .Q(\mem_reg[3][71]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][72]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][72]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [70]),
        .Q(\mem_reg[3][72]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][73]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][73]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [71]),
        .Q(\mem_reg[3][73]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][74]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][74]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [72]),
        .Q(\mem_reg[3][74]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][75]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][75]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [73]),
        .Q(\mem_reg[3][75]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][76]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][76]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [74]),
        .Q(\mem_reg[3][76]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][77]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][77]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [75]),
        .Q(\mem_reg[3][77]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][78]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][78]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [76]),
        .Q(\mem_reg[3][78]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][79]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][79]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [77]),
        .Q(\mem_reg[3][79]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][7]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [7]),
        .Q(\mem_reg[3][7]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][80]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][80]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [78]),
        .Q(\mem_reg[3][80]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][81]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][81]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [79]),
        .Q(\mem_reg[3][81]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][82]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][82]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [80]),
        .Q(\mem_reg[3][82]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][83]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][83]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [81]),
        .Q(\mem_reg[3][83]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][84]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][84]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [82]),
        .Q(\mem_reg[3][84]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][85]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][85]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [83]),
        .Q(\mem_reg[3][85]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][86]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][86]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [84]),
        .Q(\mem_reg[3][86]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][87]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][87]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [85]),
        .Q(\mem_reg[3][87]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][88]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][88]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [86]),
        .Q(\mem_reg[3][88]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][89]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][89]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [87]),
        .Q(\mem_reg[3][89]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][8]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [8]),
        .Q(\mem_reg[3][8]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][90]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][90]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [88]),
        .Q(\mem_reg[3][90]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][91]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][91]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [89]),
        .Q(\mem_reg[3][91]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][92]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][92]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [90]),
        .Q(\mem_reg[3][92]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][93]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][93]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [91]),
        .Q(\mem_reg[3][93]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][94]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][94]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [92]),
        .Q(\mem_reg[3][94]_srl4_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/load_unit/fifo_rreq/U_fifo_srl/mem_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[3][9]_srl4 
       (.A0(\dout_reg[94]_4 ),
        .A1(\dout_reg[94]_5 ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(push),
        .CLK(ap_clk),
        .D(\dout_reg[94]_3 [9]),
        .Q(\mem_reg[3][9]_srl4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_1__0
       (.I0(Q[68]),
        .O(\dout_reg[70]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_2__0
       (.I0(Q[67]),
        .O(\dout_reg[70]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_3__0
       (.I0(Q[66]),
        .O(\dout_reg[70]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__0_i_4__0
       (.I0(Q[65]),
        .O(\dout_reg[70]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_1__0
       (.I0(Q[72]),
        .O(S[3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_2__0
       (.I0(Q[71]),
        .O(S[2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_3__0
       (.I0(Q[70]),
        .O(S[1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__1_i_4__0
       (.I0(Q[69]),
        .O(S[0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_1__0
       (.I0(Q[76]),
        .O(\dout_reg[78]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_2__0
       (.I0(Q[75]),
        .O(\dout_reg[78]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_3__0
       (.I0(Q[74]),
        .O(\dout_reg[78]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__2_i_4__0
       (.I0(Q[73]),
        .O(\dout_reg[78]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_1__0
       (.I0(Q[80]),
        .O(\dout_reg[82]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_2__0
       (.I0(Q[79]),
        .O(\dout_reg[82]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_3__0
       (.I0(Q[78]),
        .O(\dout_reg[82]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__3_i_4__0
       (.I0(Q[77]),
        .O(\dout_reg[82]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_1__0
       (.I0(Q[84]),
        .O(\dout_reg[86]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_2__0
       (.I0(Q[83]),
        .O(\dout_reg[86]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_3__0
       (.I0(Q[82]),
        .O(\dout_reg[86]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__4_i_4__0
       (.I0(Q[81]),
        .O(\dout_reg[86]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_1__0
       (.I0(Q[88]),
        .O(\dout_reg[90]_0 [3]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_2__0
       (.I0(Q[87]),
        .O(\dout_reg[90]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_3__0
       (.I0(Q[86]),
        .O(\dout_reg[90]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__5_i_4__0
       (.I0(Q[85]),
        .O(\dout_reg[90]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_1__0
       (.I0(rreq_len[29]),
        .O(\dout_reg[93]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_2__0
       (.I0(Q[90]),
        .O(\dout_reg[93]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry__6_i_3__0
       (.I0(Q[89]),
        .O(\dout_reg[93]_0 [0]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_1__0
       (.I0(Q[64]),
        .O(\dout_reg[66]_0 [2]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_2__0
       (.I0(Q[63]),
        .O(\dout_reg[66]_0 [1]));
  LUT1 #(
    .INIT(2'h1)) 
    tmp_len0_carry_i_3__0
       (.I0(Q[62]),
        .O(\dout_reg[66]_0 [0]));
  LUT3 #(
    .INIT(8'hBA)) 
    tmp_valid_i_1__0
       (.I0(tmp_valid0),
        .I1(ARREADY_Dummy),
        .I2(tmp_valid_reg),
        .O(s_ready_t_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    tmp_valid_i_2
       (.I0(E),
        .I1(tmp_valid_i_3_n_0),
        .I2(tmp_valid_i_4_n_0),
        .I3(Q[77]),
        .I4(Q[76]),
        .I5(tmp_valid_i_5_n_0),
        .O(tmp_valid0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    tmp_valid_i_3
       (.I0(Q[68]),
        .I1(Q[69]),
        .I2(Q[70]),
        .I3(Q[71]),
        .O(tmp_valid_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    tmp_valid_i_4
       (.I0(tmp_valid_i_6_n_0),
        .I1(tmp_valid_i_7_n_0),
        .I2(Q[90]),
        .I3(rreq_len[29]),
        .I4(Q[79]),
        .I5(tmp_valid_i_8_n_0),
        .O(tmp_valid_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    tmp_valid_i_5
       (.I0(tmp_valid_i_9_n_0),
        .I1(Q[67]),
        .I2(Q[66]),
        .I3(Q[65]),
        .I4(Q[64]),
        .O(tmp_valid_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    tmp_valid_i_6
       (.I0(Q[85]),
        .I1(Q[82]),
        .I2(Q[87]),
        .I3(Q[84]),
        .O(tmp_valid_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    tmp_valid_i_7
       (.I0(Q[81]),
        .I1(Q[78]),
        .I2(Q[83]),
        .I3(Q[80]),
        .O(tmp_valid_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    tmp_valid_i_8
       (.I0(Q[89]),
        .I1(Q[86]),
        .I2(rreq_len[30]),
        .I3(Q[88]),
        .O(tmp_valid_i_8_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    tmp_valid_i_9
       (.I0(Q[75]),
        .I1(Q[74]),
        .I2(Q[73]),
        .I3(Q[72]),
        .I4(Q[62]),
        .I5(Q[63]),
        .O(tmp_valid_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0
   (\dout_reg[0]_0 ,
    pop_1,
    ap_rst_n_0,
    s_ready_t_reg,
    \raddr_reg[0] ,
    D,
    \mOutPtr_reg[3] ,
    p_12_in,
    push__0,
    resp_ready__1,
    empty_n_reg,
    push,
    valid_length,
    Q,
    ap_clk,
    SR,
    ap_rst_n,
    full_n_reg,
    E,
    \mOutPtr_reg[0] ,
    AWREADY_Dummy,
    \mOutPtr_reg[0]_0 ,
    wreq_valid,
    dout_vld_reg,
    \mOutPtr_reg[4] ,
    last_resp,
    dout_vld_reg_0,
    wrsp_valid,
    dout_vld_reg_1,
    pop,
    need_wrsp);
  output \dout_reg[0]_0 ;
  output pop_1;
  output ap_rst_n_0;
  output [0:0]s_ready_t_reg;
  output [0:0]\raddr_reg[0] ;
  output [2:0]D;
  output [3:0]\mOutPtr_reg[3] ;
  output p_12_in;
  output push__0;
  output resp_ready__1;
  output empty_n_reg;
  input push;
  input valid_length;
  input [3:0]Q;
  input ap_clk;
  input [0:0]SR;
  input ap_rst_n;
  input full_n_reg;
  input [0:0]E;
  input \mOutPtr_reg[0] ;
  input AWREADY_Dummy;
  input \mOutPtr_reg[0]_0 ;
  input wreq_valid;
  input dout_vld_reg;
  input [4:0]\mOutPtr_reg[4] ;
  input last_resp;
  input [0:0]dout_vld_reg_0;
  input wrsp_valid;
  input dout_vld_reg_1;
  input pop;
  input need_wrsp;

  wire AWREADY_Dummy;
  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire \dout_reg[0]_0 ;
  wire dout_vld_reg;
  wire [0:0]dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire empty_n_reg;
  wire full_n_reg;
  wire last_resp;
  wire \mOutPtr_reg[0] ;
  wire \mOutPtr_reg[0]_0 ;
  wire [3:0]\mOutPtr_reg[3] ;
  wire [4:0]\mOutPtr_reg[4] ;
  wire \mem_reg[14][0]_srl15_n_0 ;
  wire need_wrsp;
  wire p_12_in;
  wire p_12_in_0;
  wire p_8_in;
  wire pop;
  wire pop_1;
  wire push;
  wire push__0;
  wire raddr113_out;
  wire [0:0]\raddr_reg[0] ;
  wire resp_ready__1;
  wire [0:0]s_ready_t_reg;
  wire valid_length;
  wire wreq_valid;
  wire wrsp_valid;

  LUT6 #(
    .INIT(64'hA222FFFF00000000)) 
    \dout[0]_i_1 
       (.I0(dout_vld_reg_1),
        .I1(\dout_reg[0]_0 ),
        .I2(dout_vld_reg_0),
        .I3(last_resp),
        .I4(wrsp_valid),
        .I5(dout_vld_reg),
        .O(pop_1));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop_1),
        .D(\mem_reg[14][0]_srl15_n_0 ),
        .Q(\dout_reg[0]_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'hBFAAAAAAFFFFAAAA)) 
    dout_vld_i_1__1
       (.I0(dout_vld_reg),
        .I1(last_resp),
        .I2(dout_vld_reg_0),
        .I3(\dout_reg[0]_0 ),
        .I4(wrsp_valid),
        .I5(dout_vld_reg_1),
        .O(empty_n_reg));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__1
       (.I0(ap_rst_n),
        .I1(full_n_reg),
        .I2(E),
        .I3(\mOutPtr_reg[0] ),
        .I4(pop_1),
        .O(ap_rst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__0 
       (.I0(p_12_in_0),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(\mOutPtr_reg[4] [0]),
        .O(\mOutPtr_reg[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__0 
       (.I0(\mOutPtr_reg[4] [0]),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(p_12_in_0),
        .I3(\mOutPtr_reg[4] [2]),
        .O(\mOutPtr_reg[3] [1]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__0 
       (.I0(\mOutPtr_reg[4] [1]),
        .I1(\mOutPtr_reg[4] [0]),
        .I2(\mOutPtr_reg[4] [2]),
        .I3(p_12_in_0),
        .I4(\mOutPtr_reg[4] [3]),
        .O(\mOutPtr_reg[3] [2]));
  LUT5 #(
    .INIT(32'h88080808)) 
    \mOutPtr[3]_i_3 
       (.I0(dout_vld_reg_1),
        .I1(wrsp_valid),
        .I2(\dout_reg[0]_0 ),
        .I3(dout_vld_reg_0),
        .I4(last_resp),
        .O(push__0));
  LUT6 #(
    .INIT(64'h000000008F000000)) 
    \mOutPtr[3]_i_4 
       (.I0(last_resp),
        .I1(dout_vld_reg_0),
        .I2(\dout_reg[0]_0 ),
        .I3(wrsp_valid),
        .I4(dout_vld_reg_1),
        .I5(pop),
        .O(p_12_in));
  LUT5 #(
    .INIT(32'h4FFFB000)) 
    \mOutPtr[4]_i_1 
       (.I0(AWREADY_Dummy),
        .I1(\mOutPtr_reg[0]_0 ),
        .I2(wreq_valid),
        .I3(\mOutPtr_reg[0] ),
        .I4(pop_1),
        .O(s_ready_t_reg));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2 
       (.I0(\mOutPtr_reg[4] [3]),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(\mOutPtr_reg[4] [0]),
        .I3(\mOutPtr_reg[4] [2]),
        .I4(p_12_in_0),
        .I5(\mOutPtr_reg[4] [4]),
        .O(\mOutPtr_reg[3] [3]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h00008808)) 
    \mOutPtr[4]_i_3 
       (.I0(\mOutPtr_reg[0] ),
        .I1(wreq_valid),
        .I2(\mOutPtr_reg[0]_0 ),
        .I3(AWREADY_Dummy),
        .I4(pop_1),
        .O(p_12_in_0));
  (* srl_bus_name = "inst/\gmem_m_axi_U/store_unit/fifo_wrsp/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/store_unit/fifo_wrsp/U_fifo_srl/mem_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][0]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(valid_length),
        .Q(\mem_reg[14][0]_srl15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'h6A95)) 
    \raddr[1]_i_1 
       (.I0(Q[0]),
        .I1(dout_vld_reg),
        .I2(p_12_in_0),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT5 #(
    .INIT(32'h7F80F807)) 
    \raddr[2]_i_1 
       (.I0(p_12_in_0),
        .I1(dout_vld_reg),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \raddr[3]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(p_8_in),
        .I5(raddr113_out),
        .O(\raddr_reg[0] ));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2 
       (.I0(Q[1]),
        .I1(p_12_in_0),
        .I2(dout_vld_reg),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h2A2AAA2A)) 
    \raddr[3]_i_3 
       (.I0(pop_1),
        .I1(\mOutPtr_reg[0] ),
        .I2(wreq_valid),
        .I3(\mOutPtr_reg[0]_0 ),
        .I4(AWREADY_Dummy),
        .O(p_8_in));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \raddr[3]_i_4 
       (.I0(p_12_in_0),
        .I1(dout_vld_reg),
        .O(raddr113_out));
  LUT4 #(
    .INIT(16'h8F00)) 
    s_ready_t_i_2
       (.I0(\dout_reg[0]_0 ),
        .I1(dout_vld_reg_1),
        .I2(last_resp),
        .I3(need_wrsp),
        .O(resp_ready__1));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0_13
   (last_resp,
    pop,
    ap_rst_n_0,
    empty_n_reg,
    sel,
    Q,
    ap_clk,
    SR,
    ap_rst_n,
    full_n_reg,
    \could_multi_bursts.next_loop ,
    full_n_reg_0,
    wrsp_type,
    ursp_ready,
    dout_vld_reg,
    dout_vld_reg_0,
    dout_vld_reg_1,
    \dout_reg[0]_0 ,
    \dout_reg[0]_1 ,
    \dout_reg[0]_2 );
  output last_resp;
  output pop;
  output ap_rst_n_0;
  output empty_n_reg;
  input sel;
  input [3:0]Q;
  input ap_clk;
  input [0:0]SR;
  input ap_rst_n;
  input full_n_reg;
  input \could_multi_bursts.next_loop ;
  input full_n_reg_0;
  input wrsp_type;
  input ursp_ready;
  input [0:0]dout_vld_reg;
  input dout_vld_reg_0;
  input dout_vld_reg_1;
  input \dout_reg[0]_0 ;
  input \dout_reg[0]_1 ;
  input \dout_reg[0]_2 ;

  wire [3:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire aw2b_info;
  wire \could_multi_bursts.next_loop ;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire \dout_reg[0]_2 ;
  wire [0:0]dout_vld_reg;
  wire dout_vld_reg_0;
  wire dout_vld_reg_1;
  wire empty_n_reg;
  wire full_n_reg;
  wire full_n_reg_0;
  wire last_resp;
  wire \mem_reg[14][0]_srl15_n_0 ;
  wire pop;
  wire sel;
  wire ursp_ready;
  wire wrsp_type;

  LUT6 #(
    .INIT(64'h8F00FFFF00000000)) 
    \dout[0]_i_1__1 
       (.I0(wrsp_type),
        .I1(ursp_ready),
        .I2(last_resp),
        .I3(dout_vld_reg),
        .I4(dout_vld_reg_0),
        .I5(dout_vld_reg_1),
        .O(pop));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][0]_srl15_n_0 ),
        .Q(last_resp),
        .R(SR));
  LUT6 #(
    .INIT(64'hAEAEEEAEEEAEEEAE)) 
    dout_vld_i_1__8
       (.I0(dout_vld_reg_1),
        .I1(dout_vld_reg_0),
        .I2(dout_vld_reg),
        .I3(last_resp),
        .I4(ursp_ready),
        .I5(wrsp_type),
        .O(empty_n_reg));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__8
       (.I0(ap_rst_n),
        .I1(full_n_reg),
        .I2(\could_multi_bursts.next_loop ),
        .I3(full_n_reg_0),
        .I4(pop),
        .O(ap_rst_n_0));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/fifo_resp/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/fifo_resp/U_fifo_srl/mem_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][0]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(sel),
        .CLK(ap_clk),
        .D(aw2b_info),
        .Q(\mem_reg[14][0]_srl15_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \mem_reg[14][0]_srl15_i_1__3 
       (.I0(\dout_reg[0]_0 ),
        .I1(\dout_reg[0]_1 ),
        .I2(\dout_reg[0]_2 ),
        .O(aw2b_info));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized0_17
   (\could_multi_bursts.last_loop__10 ,
    \sect_len_buf_reg[8] ,
    \sect_len_buf_reg[5] ,
    din,
    Q,
    ap_clk,
    SR,
    pop,
    \dout_reg[0]_0 ,
    \sect_len_buf_reg[9] ,
    \sect_len_buf_reg[9]_0 ,
    \dout_reg[0]_1 ,
    m_axi_gmem_ARREADY,
    \dout_reg[0]_2 ,
    \dout_reg[0]_3 ,
    fifo_rctl_ready,
    mem_reg,
    mem_reg_0);
  output \could_multi_bursts.last_loop__10 ;
  output \sect_len_buf_reg[8] ;
  output \sect_len_buf_reg[5] ;
  output [0:0]din;
  input [3:0]Q;
  input ap_clk;
  input [0:0]SR;
  input pop;
  input \dout_reg[0]_0 ;
  input [5:0]\sect_len_buf_reg[9] ;
  input [5:0]\sect_len_buf_reg[9]_0 ;
  input \dout_reg[0]_1 ;
  input m_axi_gmem_ARREADY;
  input \dout_reg[0]_2 ;
  input \dout_reg[0]_3 ;
  input fifo_rctl_ready;
  input mem_reg;
  input [0:0]mem_reg_0;

  wire [3:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ar2r_info;
  wire \could_multi_bursts.last_loop__10 ;
  wire [0:0]din;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire \dout_reg[0]_2 ;
  wire \dout_reg[0]_3 ;
  wire fifo_rctl_ready;
  wire last_burst;
  wire m_axi_gmem_ARREADY;
  wire mem_reg;
  wire \mem_reg[14][0]_srl15_n_0 ;
  wire [0:0]mem_reg_0;
  wire pop;
  wire push_0;
  wire \sect_len_buf_reg[5] ;
  wire \sect_len_buf_reg[8] ;
  wire [5:0]\sect_len_buf_reg[9] ;
  wire [5:0]\sect_len_buf_reg[9]_0 ;

  LUT2 #(
    .INIT(4'h8)) 
    \could_multi_bursts.arlen_buf[3]_i_3 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .O(\could_multi_bursts.last_loop__10 ));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][0]_srl15_n_0 ),
        .Q(last_burst),
        .R(SR));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_read/fifo_burst/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_read/fifo_burst/U_fifo_srl/mem_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][0]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push_0),
        .CLK(ap_clk),
        .D(ar2r_info),
        .Q(\mem_reg[14][0]_srl15_n_0 ));
  LUT5 #(
    .INIT(32'h8A000000)) 
    \mem_reg[14][0]_srl15_i_1__2 
       (.I0(\dout_reg[0]_1 ),
        .I1(m_axi_gmem_ARREADY),
        .I2(\dout_reg[0]_2 ),
        .I3(\dout_reg[0]_3 ),
        .I4(fifo_rctl_ready),
        .O(push_0));
  LUT2 #(
    .INIT(4'h8)) 
    \mem_reg[14][0]_srl15_i_2__0 
       (.I0(\could_multi_bursts.last_loop__10 ),
        .I1(\dout_reg[0]_0 ),
        .O(ar2r_info));
  LUT3 #(
    .INIT(8'h80)) 
    mem_reg_i_2
       (.I0(mem_reg),
        .I1(last_burst),
        .I2(mem_reg_0),
        .O(din));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sect_len_buf[9]_i_3 
       (.I0(\sect_len_buf_reg[9] [4]),
        .I1(\sect_len_buf_reg[9]_0 [4]),
        .I2(\sect_len_buf_reg[9] [3]),
        .I3(\sect_len_buf_reg[9]_0 [3]),
        .I4(\sect_len_buf_reg[9]_0 [5]),
        .I5(\sect_len_buf_reg[9] [5]),
        .O(\sect_len_buf_reg[8] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sect_len_buf[9]_i_4 
       (.I0(\sect_len_buf_reg[9] [1]),
        .I1(\sect_len_buf_reg[9]_0 [1]),
        .I2(\sect_len_buf_reg[9] [0]),
        .I3(\sect_len_buf_reg[9]_0 [0]),
        .I4(\sect_len_buf_reg[9]_0 [2]),
        .I5(\sect_len_buf_reg[9] [2]),
        .O(\sect_len_buf_reg[5] ));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized2
   (ap_rst_n_0,
    pop_0,
    E,
    empty_n_reg,
    D,
    \mOutPtr_reg[3] ,
    \sect_len_buf_reg[5] ,
    \sect_len_buf_reg[8] ,
    empty_n_reg_0,
    WVALID_Dummy_reg,
    ap_rst_n_1,
    in,
    ap_rst_n,
    full_n_reg,
    \raddr_reg[0] ,
    \raddr_reg[0]_0 ,
    AWREADY_Dummy_0,
    \mOutPtr_reg[0] ,
    \mOutPtr_reg[0]_0 ,
    fifo_resp_ready,
    raddr17_in__2,
    dout_vld_reg,
    Q,
    \mOutPtr_reg[4] ,
    dout_vld_reg_0,
    \dout[3]_i_2_0 ,
    WVALID_Dummy,
    WLAST_Dummy_reg,
    WLAST_Dummy_reg_0,
    \could_multi_bursts.awlen_buf_reg[0] ,
    \could_multi_bursts.awlen_buf_reg[0]_0 ,
    WLAST_Dummy_reg_1,
    sel,
    ap_clk,
    SR);
  output ap_rst_n_0;
  output pop_0;
  output [0:0]E;
  output [0:0]empty_n_reg;
  output [2:0]D;
  output [3:0]\mOutPtr_reg[3] ;
  output \sect_len_buf_reg[5] ;
  output \sect_len_buf_reg[8] ;
  output empty_n_reg_0;
  output WVALID_Dummy_reg;
  output [0:0]ap_rst_n_1;
  output [3:0]in;
  input ap_rst_n;
  input full_n_reg;
  input \raddr_reg[0] ;
  input \raddr_reg[0]_0 ;
  input AWREADY_Dummy_0;
  input \mOutPtr_reg[0] ;
  input \mOutPtr_reg[0]_0 ;
  input fifo_resp_ready;
  input raddr17_in__2;
  input dout_vld_reg;
  input [3:0]Q;
  input [4:0]\mOutPtr_reg[4] ;
  input dout_vld_reg_0;
  input [7:0]\dout[3]_i_2_0 ;
  input WVALID_Dummy;
  input WLAST_Dummy_reg;
  input WLAST_Dummy_reg_0;
  input [9:0]\could_multi_bursts.awlen_buf_reg[0] ;
  input [5:0]\could_multi_bursts.awlen_buf_reg[0]_0 ;
  input WLAST_Dummy_reg_1;
  input sel;
  input ap_clk;
  input [0:0]SR;

  wire AWREADY_Dummy_0;
  wire [2:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire WLAST_Dummy_reg;
  wire WLAST_Dummy_reg_0;
  wire WLAST_Dummy_reg_1;
  wire WVALID_Dummy;
  wire WVALID_Dummy_reg;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire [0:0]ap_rst_n_1;
  wire [9:0]\could_multi_bursts.awlen_buf_reg[0] ;
  wire [5:0]\could_multi_bursts.awlen_buf_reg[0]_0 ;
  wire [7:0]\dout[3]_i_2_0 ;
  wire \dout[3]_i_3_n_0 ;
  wire \dout[3]_i_4_n_0 ;
  wire \dout_reg_n_0_[0] ;
  wire \dout_reg_n_0_[1] ;
  wire \dout_reg_n_0_[2] ;
  wire \dout_reg_n_0_[3] ;
  wire dout_vld_reg;
  wire dout_vld_reg_0;
  wire [0:0]empty_n_reg;
  wire empty_n_reg_0;
  wire fifo_resp_ready;
  wire full_n_reg;
  wire [3:0]in;
  wire \mOutPtr_reg[0] ;
  wire \mOutPtr_reg[0]_0 ;
  wire [3:0]\mOutPtr_reg[3] ;
  wire [4:0]\mOutPtr_reg[4] ;
  wire \mem_reg[14][0]_srl15_n_0 ;
  wire \mem_reg[14][1]_srl15_n_0 ;
  wire \mem_reg[14][2]_srl15_n_0 ;
  wire \mem_reg[14][3]_srl15_n_0 ;
  wire next_burst;
  wire p_12_in;
  wire pop_0;
  wire raddr17_in__2;
  wire \raddr_reg[0] ;
  wire \raddr_reg[0]_0 ;
  wire \sect_len_buf_reg[5] ;
  wire \sect_len_buf_reg[8] ;
  wire sel;

  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hAEAA)) 
    WLAST_Dummy_i_1
       (.I0(next_burst),
        .I1(WLAST_Dummy_reg),
        .I2(WLAST_Dummy_reg_0),
        .I3(WLAST_Dummy_reg_1),
        .O(WVALID_Dummy_reg));
  LUT3 #(
    .INIT(8'hB0)) 
    \dout[3]_i_1 
       (.I0(next_burst),
        .I1(dout_vld_reg_0),
        .I2(dout_vld_reg),
        .O(pop_0));
  LUT6 #(
    .INIT(64'h0000000082000082)) 
    \dout[3]_i_2 
       (.I0(\dout[3]_i_3_n_0 ),
        .I1(\dout[3]_i_2_0 [2]),
        .I2(\dout_reg_n_0_[2] ),
        .I3(\dout[3]_i_2_0 [1]),
        .I4(\dout_reg_n_0_[1] ),
        .I5(\dout[3]_i_4_n_0 ),
        .O(next_burst));
  LUT6 #(
    .INIT(64'h1000100000001000)) 
    \dout[3]_i_3 
       (.I0(\dout[3]_i_2_0 [7]),
        .I1(\dout[3]_i_2_0 [6]),
        .I2(WVALID_Dummy),
        .I3(dout_vld_reg_0),
        .I4(WLAST_Dummy_reg),
        .I5(WLAST_Dummy_reg_0),
        .O(\dout[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF6FF6)) 
    \dout[3]_i_4 
       (.I0(\dout_reg_n_0_[3] ),
        .I1(\dout[3]_i_2_0 [3]),
        .I2(\dout_reg_n_0_[0] ),
        .I3(\dout[3]_i_2_0 [0]),
        .I4(\dout[3]_i_2_0 [4]),
        .I5(\dout[3]_i_2_0 [5]),
        .O(\dout[3]_i_4_n_0 ));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop_0),
        .D(\mem_reg[14][0]_srl15_n_0 ),
        .Q(\dout_reg_n_0_[0] ),
        .R(SR));
  FDRE \dout_reg[1] 
       (.C(ap_clk),
        .CE(pop_0),
        .D(\mem_reg[14][1]_srl15_n_0 ),
        .Q(\dout_reg_n_0_[1] ),
        .R(SR));
  FDRE \dout_reg[2] 
       (.C(ap_clk),
        .CE(pop_0),
        .D(\mem_reg[14][2]_srl15_n_0 ),
        .Q(\dout_reg_n_0_[2] ),
        .R(SR));
  FDRE \dout_reg[3] 
       (.C(ap_clk),
        .CE(pop_0),
        .D(\mem_reg[14][3]_srl15_n_0 ),
        .Q(\dout_reg_n_0_[3] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    dout_vld_i_1__5
       (.I0(dout_vld_reg),
        .I1(dout_vld_reg_0),
        .I2(next_burst),
        .O(empty_n_reg_0));
  LUT5 #(
    .INIT(32'hFFFFDF55)) 
    full_n_i_1__5
       (.I0(ap_rst_n),
        .I1(full_n_reg),
        .I2(\raddr_reg[0] ),
        .I3(\raddr_reg[0]_0 ),
        .I4(pop_0),
        .O(ap_rst_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \len_cnt[7]_i_1 
       (.I0(next_burst),
        .I1(ap_rst_n),
        .O(ap_rst_n_1));
  LUT3 #(
    .INIT(8'h69)) 
    \mOutPtr[1]_i_1__1 
       (.I0(p_12_in),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(\mOutPtr_reg[4] [0]),
        .O(\mOutPtr_reg[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h7E81)) 
    \mOutPtr[2]_i_1__1 
       (.I0(\mOutPtr_reg[4] [0]),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(p_12_in),
        .I3(\mOutPtr_reg[4] [2]),
        .O(\mOutPtr_reg[3] [1]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h7FFE8001)) 
    \mOutPtr[3]_i_1__1 
       (.I0(\mOutPtr_reg[4] [1]),
        .I1(\mOutPtr_reg[4] [0]),
        .I2(\mOutPtr_reg[4] [2]),
        .I3(p_12_in),
        .I4(\mOutPtr_reg[4] [3]),
        .O(\mOutPtr_reg[3] [2]));
  LUT6 #(
    .INIT(64'h4FFFFFFFB0000000)) 
    \mOutPtr[4]_i_1__0 
       (.I0(AWREADY_Dummy_0),
        .I1(\mOutPtr_reg[0] ),
        .I2(\mOutPtr_reg[0]_0 ),
        .I3(fifo_resp_ready),
        .I4(\raddr_reg[0]_0 ),
        .I5(pop_0),
        .O(E));
  LUT6 #(
    .INIT(64'h7FFFFFFE80000001)) 
    \mOutPtr[4]_i_2__0 
       (.I0(\mOutPtr_reg[4] [3]),
        .I1(\mOutPtr_reg[4] [1]),
        .I2(\mOutPtr_reg[4] [0]),
        .I3(\mOutPtr_reg[4] [2]),
        .I4(p_12_in),
        .I5(\mOutPtr_reg[4] [4]),
        .O(\mOutPtr_reg[3] [3]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h08088808)) 
    \mOutPtr[4]_i_3__0 
       (.I0(\raddr_reg[0] ),
        .I1(\raddr_reg[0]_0 ),
        .I2(dout_vld_reg),
        .I3(dout_vld_reg_0),
        .I4(next_burst),
        .O(p_12_in));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][0]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(sel),
        .CLK(ap_clk),
        .D(in[0]),
        .Q(\mem_reg[14][0]_srl15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \mem_reg[14][0]_srl15_i_2__1 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [0]),
        .O(in[0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \mem_reg[14][0]_srl15_i_3__0 
       (.I0(\could_multi_bursts.awlen_buf_reg[0] [8]),
        .I1(\could_multi_bursts.awlen_buf_reg[0]_0 [4]),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [7]),
        .I3(\could_multi_bursts.awlen_buf_reg[0]_0 [3]),
        .I4(\could_multi_bursts.awlen_buf_reg[0]_0 [5]),
        .I5(\could_multi_bursts.awlen_buf_reg[0] [9]),
        .O(\sect_len_buf_reg[8] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \mem_reg[14][0]_srl15_i_4__0 
       (.I0(\could_multi_bursts.awlen_buf_reg[0] [5]),
        .I1(\could_multi_bursts.awlen_buf_reg[0]_0 [1]),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [4]),
        .I3(\could_multi_bursts.awlen_buf_reg[0]_0 [0]),
        .I4(\could_multi_bursts.awlen_buf_reg[0]_0 [2]),
        .I5(\could_multi_bursts.awlen_buf_reg[0] [6]),
        .O(\sect_len_buf_reg[5] ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14][1]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][1]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(sel),
        .CLK(ap_clk),
        .D(in[1]),
        .Q(\mem_reg[14][1]_srl15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \mem_reg[14][1]_srl15_i_1 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [1]),
        .O(in[1]));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14][2]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][2]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(sel),
        .CLK(ap_clk),
        .D(in[2]),
        .Q(\mem_reg[14][2]_srl15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \mem_reg[14][2]_srl15_i_1__0 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [2]),
        .O(in[2]));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/fifo_burst/U_fifo_srl/mem_reg[14][3]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][3]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(sel),
        .CLK(ap_clk),
        .D(in[3]),
        .Q(\mem_reg[14][3]_srl15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \mem_reg[14][3]_srl15_i_1 
       (.I0(\sect_len_buf_reg[8] ),
        .I1(\sect_len_buf_reg[5] ),
        .I2(\could_multi_bursts.awlen_buf_reg[0] [3]),
        .O(in[3]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h6A95)) 
    \raddr[1]_i_1__0 
       (.I0(Q[0]),
        .I1(dout_vld_reg),
        .I2(p_12_in),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7F80F807)) 
    \raddr[2]_i_1__0 
       (.I0(p_12_in),
        .I1(dout_vld_reg),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h0AAAC000)) 
    \raddr[3]_i_1__0 
       (.I0(raddr17_in__2),
        .I1(dout_vld_reg),
        .I2(\raddr_reg[0] ),
        .I3(\raddr_reg[0]_0 ),
        .I4(pop_0),
        .O(empty_n_reg));
  LUT6 #(
    .INIT(64'h7FFF8000FFEA0015)) 
    \raddr[3]_i_2__0 
       (.I0(Q[1]),
        .I1(p_12_in),
        .I2(dout_vld_reg),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized3
   (sel,
    pop,
    push,
    SR,
    \dout_reg[67]_0 ,
    \dout_reg[0] ,
    \dout_reg[0]_0 ,
    \dout_reg[0]_1 ,
    fifo_resp_ready,
    fifo_burst_ready,
    req_en__0,
    rs_req_ready,
    \dout_reg[2]_0 ,
    \dout_reg[2]_1 ,
    ap_rst_n,
    in,
    Q,
    ap_clk);
  output sel;
  output pop;
  output push;
  output [0:0]SR;
  output [65:0]\dout_reg[67]_0 ;
  input \dout_reg[0] ;
  input \dout_reg[0]_0 ;
  input \dout_reg[0]_1 ;
  input fifo_resp_ready;
  input fifo_burst_ready;
  input req_en__0;
  input rs_req_ready;
  input \dout_reg[2]_0 ;
  input \dout_reg[2]_1 ;
  input ap_rst_n;
  input [65:0]in;
  input [3:0]Q;
  input ap_clk;

  wire [3:0]Q;
  wire [0:0]SR;
  wire ap_clk;
  wire ap_rst_n;
  wire \dout_reg[0] ;
  wire \dout_reg[0]_0 ;
  wire \dout_reg[0]_1 ;
  wire \dout_reg[2]_0 ;
  wire \dout_reg[2]_1 ;
  wire [65:0]\dout_reg[67]_0 ;
  wire fifo_burst_ready;
  wire fifo_resp_ready;
  wire [65:0]in;
  wire \mem_reg[14][10]_srl15_n_0 ;
  wire \mem_reg[14][11]_srl15_n_0 ;
  wire \mem_reg[14][12]_srl15_n_0 ;
  wire \mem_reg[14][13]_srl15_n_0 ;
  wire \mem_reg[14][14]_srl15_n_0 ;
  wire \mem_reg[14][15]_srl15_n_0 ;
  wire \mem_reg[14][16]_srl15_n_0 ;
  wire \mem_reg[14][17]_srl15_n_0 ;
  wire \mem_reg[14][18]_srl15_n_0 ;
  wire \mem_reg[14][19]_srl15_n_0 ;
  wire \mem_reg[14][20]_srl15_n_0 ;
  wire \mem_reg[14][21]_srl15_n_0 ;
  wire \mem_reg[14][22]_srl15_n_0 ;
  wire \mem_reg[14][23]_srl15_n_0 ;
  wire \mem_reg[14][24]_srl15_n_0 ;
  wire \mem_reg[14][25]_srl15_n_0 ;
  wire \mem_reg[14][26]_srl15_n_0 ;
  wire \mem_reg[14][27]_srl15_n_0 ;
  wire \mem_reg[14][28]_srl15_n_0 ;
  wire \mem_reg[14][29]_srl15_n_0 ;
  wire \mem_reg[14][2]_srl15_n_0 ;
  wire \mem_reg[14][30]_srl15_n_0 ;
  wire \mem_reg[14][31]_srl15_n_0 ;
  wire \mem_reg[14][32]_srl15_n_0 ;
  wire \mem_reg[14][33]_srl15_n_0 ;
  wire \mem_reg[14][34]_srl15_n_0 ;
  wire \mem_reg[14][35]_srl15_n_0 ;
  wire \mem_reg[14][36]_srl15_n_0 ;
  wire \mem_reg[14][37]_srl15_n_0 ;
  wire \mem_reg[14][38]_srl15_n_0 ;
  wire \mem_reg[14][39]_srl15_n_0 ;
  wire \mem_reg[14][3]_srl15_n_0 ;
  wire \mem_reg[14][40]_srl15_n_0 ;
  wire \mem_reg[14][41]_srl15_n_0 ;
  wire \mem_reg[14][42]_srl15_n_0 ;
  wire \mem_reg[14][43]_srl15_n_0 ;
  wire \mem_reg[14][44]_srl15_n_0 ;
  wire \mem_reg[14][45]_srl15_n_0 ;
  wire \mem_reg[14][46]_srl15_n_0 ;
  wire \mem_reg[14][47]_srl15_n_0 ;
  wire \mem_reg[14][48]_srl15_n_0 ;
  wire \mem_reg[14][49]_srl15_n_0 ;
  wire \mem_reg[14][4]_srl15_n_0 ;
  wire \mem_reg[14][50]_srl15_n_0 ;
  wire \mem_reg[14][51]_srl15_n_0 ;
  wire \mem_reg[14][52]_srl15_n_0 ;
  wire \mem_reg[14][53]_srl15_n_0 ;
  wire \mem_reg[14][54]_srl15_n_0 ;
  wire \mem_reg[14][55]_srl15_n_0 ;
  wire \mem_reg[14][56]_srl15_n_0 ;
  wire \mem_reg[14][57]_srl15_n_0 ;
  wire \mem_reg[14][58]_srl15_n_0 ;
  wire \mem_reg[14][59]_srl15_n_0 ;
  wire \mem_reg[14][5]_srl15_n_0 ;
  wire \mem_reg[14][60]_srl15_n_0 ;
  wire \mem_reg[14][61]_srl15_n_0 ;
  wire \mem_reg[14][62]_srl15_n_0 ;
  wire \mem_reg[14][63]_srl15_n_0 ;
  wire \mem_reg[14][64]_srl15_n_0 ;
  wire \mem_reg[14][65]_srl15_n_0 ;
  wire \mem_reg[14][66]_srl15_n_0 ;
  wire \mem_reg[14][67]_srl15_n_0 ;
  wire \mem_reg[14][6]_srl15_n_0 ;
  wire \mem_reg[14][7]_srl15_n_0 ;
  wire \mem_reg[14][8]_srl15_n_0 ;
  wire \mem_reg[14][9]_srl15_n_0 ;
  wire pop;
  wire push;
  wire req_en__0;
  wire rs_req_ready;
  wire sel;

  LUT4 #(
    .INIT(16'h8F00)) 
    \dout[67]_i_1 
       (.I0(req_en__0),
        .I1(rs_req_ready),
        .I2(\dout_reg[2]_0 ),
        .I3(\dout_reg[2]_1 ),
        .O(pop));
  FDRE \dout_reg[10] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][10]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [8]),
        .R(SR));
  FDRE \dout_reg[11] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][11]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [9]),
        .R(SR));
  FDRE \dout_reg[12] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][12]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [10]),
        .R(SR));
  FDRE \dout_reg[13] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][13]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [11]),
        .R(SR));
  FDRE \dout_reg[14] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][14]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [12]),
        .R(SR));
  FDRE \dout_reg[15] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][15]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [13]),
        .R(SR));
  FDRE \dout_reg[16] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][16]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [14]),
        .R(SR));
  FDRE \dout_reg[17] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][17]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [15]),
        .R(SR));
  FDRE \dout_reg[18] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][18]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [16]),
        .R(SR));
  FDRE \dout_reg[19] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][19]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [17]),
        .R(SR));
  FDRE \dout_reg[20] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][20]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [18]),
        .R(SR));
  FDRE \dout_reg[21] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][21]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [19]),
        .R(SR));
  FDRE \dout_reg[22] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][22]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [20]),
        .R(SR));
  FDRE \dout_reg[23] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][23]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [21]),
        .R(SR));
  FDRE \dout_reg[24] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][24]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [22]),
        .R(SR));
  FDRE \dout_reg[25] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][25]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [23]),
        .R(SR));
  FDRE \dout_reg[26] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][26]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [24]),
        .R(SR));
  FDRE \dout_reg[27] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][27]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [25]),
        .R(SR));
  FDRE \dout_reg[28] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][28]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [26]),
        .R(SR));
  FDRE \dout_reg[29] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][29]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [27]),
        .R(SR));
  FDRE \dout_reg[2] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][2]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [0]),
        .R(SR));
  FDRE \dout_reg[30] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][30]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [28]),
        .R(SR));
  FDRE \dout_reg[31] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][31]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [29]),
        .R(SR));
  FDRE \dout_reg[32] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][32]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [30]),
        .R(SR));
  FDRE \dout_reg[33] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][33]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [31]),
        .R(SR));
  FDRE \dout_reg[34] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][34]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [32]),
        .R(SR));
  FDRE \dout_reg[35] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][35]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [33]),
        .R(SR));
  FDRE \dout_reg[36] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][36]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [34]),
        .R(SR));
  FDRE \dout_reg[37] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][37]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [35]),
        .R(SR));
  FDRE \dout_reg[38] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][38]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [36]),
        .R(SR));
  FDRE \dout_reg[39] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][39]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [37]),
        .R(SR));
  FDRE \dout_reg[3] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][3]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [1]),
        .R(SR));
  FDRE \dout_reg[40] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][40]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [38]),
        .R(SR));
  FDRE \dout_reg[41] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][41]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [39]),
        .R(SR));
  FDRE \dout_reg[42] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][42]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [40]),
        .R(SR));
  FDRE \dout_reg[43] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][43]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [41]),
        .R(SR));
  FDRE \dout_reg[44] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][44]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [42]),
        .R(SR));
  FDRE \dout_reg[45] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][45]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [43]),
        .R(SR));
  FDRE \dout_reg[46] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][46]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [44]),
        .R(SR));
  FDRE \dout_reg[47] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][47]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [45]),
        .R(SR));
  FDRE \dout_reg[48] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][48]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [46]),
        .R(SR));
  FDRE \dout_reg[49] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][49]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [47]),
        .R(SR));
  FDRE \dout_reg[4] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][4]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [2]),
        .R(SR));
  FDRE \dout_reg[50] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][50]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [48]),
        .R(SR));
  FDRE \dout_reg[51] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][51]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [49]),
        .R(SR));
  FDRE \dout_reg[52] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][52]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [50]),
        .R(SR));
  FDRE \dout_reg[53] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][53]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [51]),
        .R(SR));
  FDRE \dout_reg[54] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][54]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [52]),
        .R(SR));
  FDRE \dout_reg[55] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][55]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [53]),
        .R(SR));
  FDRE \dout_reg[56] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][56]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [54]),
        .R(SR));
  FDRE \dout_reg[57] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][57]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [55]),
        .R(SR));
  FDRE \dout_reg[58] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][58]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [56]),
        .R(SR));
  FDRE \dout_reg[59] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][59]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [57]),
        .R(SR));
  FDRE \dout_reg[5] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][5]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [3]),
        .R(SR));
  FDRE \dout_reg[60] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][60]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [58]),
        .R(SR));
  FDRE \dout_reg[61] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][61]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [59]),
        .R(SR));
  FDRE \dout_reg[62] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][62]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [60]),
        .R(SR));
  FDRE \dout_reg[63] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][63]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [61]),
        .R(SR));
  FDRE \dout_reg[64] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][64]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [62]),
        .R(SR));
  FDRE \dout_reg[65] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][65]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [63]),
        .R(SR));
  FDRE \dout_reg[66] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][66]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [64]),
        .R(SR));
  FDRE \dout_reg[67] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][67]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [65]),
        .R(SR));
  FDRE \dout_reg[6] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][6]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [4]),
        .R(SR));
  FDRE \dout_reg[7] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][7]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [5]),
        .R(SR));
  FDRE \dout_reg[8] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][8]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [6]),
        .R(SR));
  FDRE \dout_reg[9] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][9]_srl15_n_0 ),
        .Q(\dout_reg[67]_0 [7]),
        .R(SR));
  LUT5 #(
    .INIT(32'hB0000000)) 
    \mem_reg[14][0]_srl15_i_1__0 
       (.I0(\dout_reg[0] ),
        .I1(\dout_reg[0]_0 ),
        .I2(\dout_reg[0]_1 ),
        .I3(fifo_resp_ready),
        .I4(fifo_burst_ready),
        .O(sel));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][10]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][10]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[8]),
        .Q(\mem_reg[14][10]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][11]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][11]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[9]),
        .Q(\mem_reg[14][11]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][12]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][12]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[10]),
        .Q(\mem_reg[14][12]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][13]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][13]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[11]),
        .Q(\mem_reg[14][13]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][14]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][14]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[12]),
        .Q(\mem_reg[14][14]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][15]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][15]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[13]),
        .Q(\mem_reg[14][15]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][16]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][16]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[14]),
        .Q(\mem_reg[14][16]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][17]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][17]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[15]),
        .Q(\mem_reg[14][17]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][18]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][18]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[16]),
        .Q(\mem_reg[14][18]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][19]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][19]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[17]),
        .Q(\mem_reg[14][19]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][20]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][20]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[18]),
        .Q(\mem_reg[14][20]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][21]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][21]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[19]),
        .Q(\mem_reg[14][21]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][22]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][22]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[20]),
        .Q(\mem_reg[14][22]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][23]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][23]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[21]),
        .Q(\mem_reg[14][23]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][24]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][24]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[22]),
        .Q(\mem_reg[14][24]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][25]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][25]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[23]),
        .Q(\mem_reg[14][25]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][26]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][26]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[24]),
        .Q(\mem_reg[14][26]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][27]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][27]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[25]),
        .Q(\mem_reg[14][27]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][28]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][28]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[26]),
        .Q(\mem_reg[14][28]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][29]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][29]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[27]),
        .Q(\mem_reg[14][29]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][2]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][2]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[0]),
        .Q(\mem_reg[14][2]_srl15_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mem_reg[14][2]_srl15_i_1 
       (.I0(\dout_reg[0] ),
        .I1(\dout_reg[0]_0 ),
        .O(push));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][30]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][30]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[28]),
        .Q(\mem_reg[14][30]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][31]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][31]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[29]),
        .Q(\mem_reg[14][31]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][32]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][32]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[30]),
        .Q(\mem_reg[14][32]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][33]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][33]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[31]),
        .Q(\mem_reg[14][33]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][34]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][34]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[32]),
        .Q(\mem_reg[14][34]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][35]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][35]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[33]),
        .Q(\mem_reg[14][35]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][36]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][36]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[34]),
        .Q(\mem_reg[14][36]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][37]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][37]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[35]),
        .Q(\mem_reg[14][37]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][38]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][38]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[36]),
        .Q(\mem_reg[14][38]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][39]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][39]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[37]),
        .Q(\mem_reg[14][39]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][3]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][3]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[1]),
        .Q(\mem_reg[14][3]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][40]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][40]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[38]),
        .Q(\mem_reg[14][40]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][41]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][41]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[39]),
        .Q(\mem_reg[14][41]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][42]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][42]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[40]),
        .Q(\mem_reg[14][42]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][43]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][43]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[41]),
        .Q(\mem_reg[14][43]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][44]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][44]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[42]),
        .Q(\mem_reg[14][44]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][45]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][45]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[43]),
        .Q(\mem_reg[14][45]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][46]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][46]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[44]),
        .Q(\mem_reg[14][46]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][47]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][47]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[45]),
        .Q(\mem_reg[14][47]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][48]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][48]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[46]),
        .Q(\mem_reg[14][48]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][49]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][49]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[47]),
        .Q(\mem_reg[14][49]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][4]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][4]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[2]),
        .Q(\mem_reg[14][4]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][50]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][50]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[48]),
        .Q(\mem_reg[14][50]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][51]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][51]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[49]),
        .Q(\mem_reg[14][51]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][52]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][52]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[50]),
        .Q(\mem_reg[14][52]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][53]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][53]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[51]),
        .Q(\mem_reg[14][53]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][54]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][54]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[52]),
        .Q(\mem_reg[14][54]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][55]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][55]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[53]),
        .Q(\mem_reg[14][55]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][56]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][56]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[54]),
        .Q(\mem_reg[14][56]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][57]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][57]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[55]),
        .Q(\mem_reg[14][57]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][58]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][58]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[56]),
        .Q(\mem_reg[14][58]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][59]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][59]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[57]),
        .Q(\mem_reg[14][59]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][5]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][5]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[3]),
        .Q(\mem_reg[14][5]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][60]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][60]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[58]),
        .Q(\mem_reg[14][60]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][61]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][61]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[59]),
        .Q(\mem_reg[14][61]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][62]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][62]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[60]),
        .Q(\mem_reg[14][62]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][63]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][63]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[61]),
        .Q(\mem_reg[14][63]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][64]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][64]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[62]),
        .Q(\mem_reg[14][64]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][65]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][65]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[63]),
        .Q(\mem_reg[14][65]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][66]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][66]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[64]),
        .Q(\mem_reg[14][66]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][67]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][67]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[65]),
        .Q(\mem_reg[14][67]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][6]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][6]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[4]),
        .Q(\mem_reg[14][6]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][7]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][7]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[5]),
        .Q(\mem_reg[14][7]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][8]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][8]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[6]),
        .Q(\mem_reg[14][8]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/req_fifo/U_fifo_srl/mem_reg[14][9]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][9]_srl15 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[7]),
        .Q(\mem_reg[14][9]_srl15_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \state[0]_i_1__3 
       (.I0(ap_rst_n),
        .O(SR));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_srl" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_srl__parameterized4
   (D,
    req_en__0,
    \dout_reg[36]_0 ,
    data_en__3,
    pop,
    WVALID_Dummy_reg,
    push,
    dout_vld_reg,
    dout_vld_reg_0,
    Q,
    fifo_valid,
    m_axi_gmem_WREADY,
    flying_req_reg,
    flying_req_reg_0,
    \dout_reg[0]_0 ,
    \last_cnt_reg[1] ,
    \last_cnt_reg[1]_0 ,
    in,
    req_fifo_valid,
    rs_req_ready,
    \dout_reg[36]_1 ,
    ap_clk,
    \dout_reg[36]_2 );
  output [3:0]D;
  output req_en__0;
  output [36:0]\dout_reg[36]_0 ;
  output data_en__3;
  output pop;
  output [0:0]WVALID_Dummy_reg;
  output push;
  output [0:0]dout_vld_reg;
  output dout_vld_reg_0;
  input [4:0]Q;
  input fifo_valid;
  input m_axi_gmem_WREADY;
  input flying_req_reg;
  input flying_req_reg_0;
  input \dout_reg[0]_0 ;
  input \last_cnt_reg[1] ;
  input \last_cnt_reg[1]_0 ;
  input [36:0]in;
  input req_fifo_valid;
  input rs_req_ready;
  input [3:0]\dout_reg[36]_1 ;
  input ap_clk;
  input \dout_reg[36]_2 ;

  wire [3:0]D;
  wire [4:0]Q;
  wire [0:0]WVALID_Dummy_reg;
  wire ap_clk;
  wire data_en__3;
  wire \dout_reg[0]_0 ;
  wire [36:0]\dout_reg[36]_0 ;
  wire [3:0]\dout_reg[36]_1 ;
  wire \dout_reg[36]_2 ;
  wire [0:0]dout_vld_reg;
  wire dout_vld_reg_0;
  wire fifo_valid;
  wire flying_req_reg;
  wire flying_req_reg_0;
  wire [36:0]in;
  wire \last_cnt[4]_i_4_n_0 ;
  wire \last_cnt_reg[1] ;
  wire \last_cnt_reg[1]_0 ;
  wire m_axi_gmem_WREADY;
  wire \mem_reg[14][0]_srl15_n_0 ;
  wire \mem_reg[14][10]_srl15_n_0 ;
  wire \mem_reg[14][11]_srl15_n_0 ;
  wire \mem_reg[14][12]_srl15_n_0 ;
  wire \mem_reg[14][13]_srl15_n_0 ;
  wire \mem_reg[14][14]_srl15_n_0 ;
  wire \mem_reg[14][15]_srl15_n_0 ;
  wire \mem_reg[14][16]_srl15_n_0 ;
  wire \mem_reg[14][17]_srl15_n_0 ;
  wire \mem_reg[14][18]_srl15_n_0 ;
  wire \mem_reg[14][19]_srl15_n_0 ;
  wire \mem_reg[14][1]_srl15_n_0 ;
  wire \mem_reg[14][20]_srl15_n_0 ;
  wire \mem_reg[14][21]_srl15_n_0 ;
  wire \mem_reg[14][22]_srl15_n_0 ;
  wire \mem_reg[14][23]_srl15_n_0 ;
  wire \mem_reg[14][24]_srl15_n_0 ;
  wire \mem_reg[14][25]_srl15_n_0 ;
  wire \mem_reg[14][26]_srl15_n_0 ;
  wire \mem_reg[14][27]_srl15_n_0 ;
  wire \mem_reg[14][28]_srl15_n_0 ;
  wire \mem_reg[14][29]_srl15_n_0 ;
  wire \mem_reg[14][2]_srl15_n_0 ;
  wire \mem_reg[14][30]_srl15_n_0 ;
  wire \mem_reg[14][31]_srl15_n_0 ;
  wire \mem_reg[14][32]_srl15_n_0 ;
  wire \mem_reg[14][33]_srl15_n_0 ;
  wire \mem_reg[14][34]_srl15_n_0 ;
  wire \mem_reg[14][35]_srl15_n_0 ;
  wire \mem_reg[14][36]_srl15_n_0 ;
  wire \mem_reg[14][3]_srl15_n_0 ;
  wire \mem_reg[14][4]_srl15_n_0 ;
  wire \mem_reg[14][5]_srl15_n_0 ;
  wire \mem_reg[14][6]_srl15_n_0 ;
  wire \mem_reg[14][7]_srl15_n_0 ;
  wire \mem_reg[14][8]_srl15_n_0 ;
  wire \mem_reg[14][9]_srl15_n_0 ;
  wire p_8_in;
  wire pop;
  wire push;
  wire req_en__0;
  wire req_fifo_valid;
  wire rs_req_ready;

  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_p2[67]_i_1 
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(rs_req_ready),
        .O(dout_vld_reg));
  LUT5 #(
    .INIT(32'h80FF0000)) 
    \dout[31]_i_1 
       (.I0(m_axi_gmem_WREADY),
        .I1(flying_req_reg_0),
        .I2(data_en__3),
        .I3(fifo_valid),
        .I4(\dout_reg[0]_0 ),
        .O(pop));
  FDRE \dout_reg[0] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][0]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [0]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[10] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][10]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [10]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[11] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][11]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [11]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[12] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][12]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [12]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[13] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][13]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [13]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[14] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][14]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [14]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[15] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][15]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [15]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[16] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][16]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [16]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[17] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][17]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [17]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[18] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][18]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [18]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[19] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][19]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [19]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[1] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][1]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [1]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[20] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][20]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [20]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[21] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][21]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [21]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[22] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][22]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [22]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[23] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][23]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [23]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[24] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][24]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [24]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[25] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][25]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [25]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[26] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][26]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [26]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[27] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][27]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [27]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[28] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][28]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [28]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[29] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][29]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [29]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[2] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][2]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [2]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[30] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][30]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [30]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[31] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][31]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [31]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[32] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][32]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [32]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[33] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][33]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [33]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[34] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][34]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [34]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[35] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][35]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [35]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[36] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][36]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [36]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[3] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][3]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [3]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[4] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][4]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [4]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[5] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][5]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [5]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[6] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][6]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [6]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[7] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][7]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [7]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[8] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][8]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [8]),
        .R(\dout_reg[36]_2 ));
  FDRE \dout_reg[9] 
       (.C(ap_clk),
        .CE(pop),
        .D(\mem_reg[14][9]_srl15_n_0 ),
        .Q(\dout_reg[36]_0 [9]),
        .R(\dout_reg[36]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'h80FF8080)) 
    flying_req_i_1
       (.I0(req_en__0),
        .I1(req_fifo_valid),
        .I2(rs_req_ready),
        .I3(p_8_in),
        .I4(flying_req_reg_0),
        .O(dout_vld_reg_0));
  LUT6 #(
    .INIT(64'h9AAAAAAA65555555)) 
    \last_cnt[1]_i_1 
       (.I0(Q[0]),
        .I1(p_8_in),
        .I2(\last_cnt_reg[1] ),
        .I3(\last_cnt_reg[1]_0 ),
        .I4(in[36]),
        .I5(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF7FF0800FF0800F7)) 
    \last_cnt[2]_i_1 
       (.I0(in[36]),
        .I1(push),
        .I2(p_8_in),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \last_cnt[3]_i_1 
       (.I0(Q[1]),
        .I1(\last_cnt[4]_i_4_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \last_cnt[4]_i_1 
       (.I0(p_8_in),
        .I1(\last_cnt_reg[1] ),
        .I2(\last_cnt_reg[1]_0 ),
        .I3(in[36]),
        .O(WVALID_Dummy_reg));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    \last_cnt[4]_i_2 
       (.I0(Q[1]),
        .I1(\last_cnt[4]_i_4_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \last_cnt[4]_i_3 
       (.I0(fifo_valid),
        .I1(\dout_reg[36]_0 [36]),
        .I2(data_en__3),
        .I3(flying_req_reg_0),
        .I4(m_axi_gmem_WREADY),
        .O(p_8_in));
  LUT6 #(
    .INIT(64'h20000000BAAAAAAA)) 
    \last_cnt[4]_i_4 
       (.I0(Q[0]),
        .I1(p_8_in),
        .I2(\last_cnt_reg[1] ),
        .I3(\last_cnt_reg[1]_0 ),
        .I4(in[36]),
        .I5(Q[1]),
        .O(\last_cnt[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    m_axi_gmem_WVALID_INST_0_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(data_en__3));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][0]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[0]),
        .Q(\mem_reg[14][0]_srl15_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mem_reg[14][0]_srl15_i_1__1 
       (.I0(\last_cnt_reg[1]_0 ),
        .I1(\last_cnt_reg[1] ),
        .O(push));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][10]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][10]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[10]),
        .Q(\mem_reg[14][10]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][11]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][11]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[11]),
        .Q(\mem_reg[14][11]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][12]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][12]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[12]),
        .Q(\mem_reg[14][12]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][13]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][13]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[13]),
        .Q(\mem_reg[14][13]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][14]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][14]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[14]),
        .Q(\mem_reg[14][14]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][15]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][15]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[15]),
        .Q(\mem_reg[14][15]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][16]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][16]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[16]),
        .Q(\mem_reg[14][16]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][17]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][17]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[17]),
        .Q(\mem_reg[14][17]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][18]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][18]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[18]),
        .Q(\mem_reg[14][18]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][19]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][19]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[19]),
        .Q(\mem_reg[14][19]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][1]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][1]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[1]),
        .Q(\mem_reg[14][1]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][20]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][20]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[20]),
        .Q(\mem_reg[14][20]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][21]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][21]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[21]),
        .Q(\mem_reg[14][21]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][22]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][22]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[22]),
        .Q(\mem_reg[14][22]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][23]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][23]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[23]),
        .Q(\mem_reg[14][23]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][24]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][24]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[24]),
        .Q(\mem_reg[14][24]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][25]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][25]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[25]),
        .Q(\mem_reg[14][25]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][26]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][26]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[26]),
        .Q(\mem_reg[14][26]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][27]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][27]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[27]),
        .Q(\mem_reg[14][27]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][28]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][28]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[28]),
        .Q(\mem_reg[14][28]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][29]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][29]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[29]),
        .Q(\mem_reg[14][29]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][2]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][2]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[2]),
        .Q(\mem_reg[14][2]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][30]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][30]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[30]),
        .Q(\mem_reg[14][30]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][31]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][31]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[31]),
        .Q(\mem_reg[14][31]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][32]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][32]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[32]),
        .Q(\mem_reg[14][32]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][33]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][33]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[33]),
        .Q(\mem_reg[14][33]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][34]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][34]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[34]),
        .Q(\mem_reg[14][34]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][35]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][35]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[35]),
        .Q(\mem_reg[14][35]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][36]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][36]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[36]),
        .Q(\mem_reg[14][36]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][3]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][3]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[3]),
        .Q(\mem_reg[14][3]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][4]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][4]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[4]),
        .Q(\mem_reg[14][4]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][5]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][5]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[5]),
        .Q(\mem_reg[14][5]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][6]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][6]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[6]),
        .Q(\mem_reg[14][6]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][7]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][7]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[7]),
        .Q(\mem_reg[14][7]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][8]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][8]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[8]),
        .Q(\mem_reg[14][8]_srl15_n_0 ));
  (* srl_bus_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14] " *) 
  (* srl_name = "inst/\gmem_m_axi_U/bus_write/wreq_throttle/data_fifo/U_fifo_srl/mem_reg[14][9]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \mem_reg[14][9]_srl15 
       (.A0(\dout_reg[36]_1 [0]),
        .A1(\dout_reg[36]_1 [1]),
        .A2(\dout_reg[36]_1 [2]),
        .A3(\dout_reg[36]_1 [3]),
        .CE(push),
        .CLK(ap_clk),
        .D(in[9]),
        .Q(\mem_reg[14][9]_srl15_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF00000000)) 
    \state[0]_i_3 
       (.I0(fifo_valid),
        .I1(\dout_reg[36]_0 [36]),
        .I2(m_axi_gmem_WREADY),
        .I3(flying_req_reg),
        .I4(flying_req_reg_0),
        .I5(data_en__3),
        .O(req_en__0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_store" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_store
   (wrsp_type,
    full_n_reg,
    WVALID_Dummy,
    full_n_reg_0,
    dout_vld_reg,
    ursp_ready,
    AWVALID_Dummy,
    empty_n_reg,
    E,
    resp_ready__1,
    D,
    dout,
    ap_clk,
    SR,
    dout_vld_reg_0,
    ap_rst_n,
    pop,
    Q,
    dout_vld_reg_1,
    AWREADY_Dummy,
    burst_valid,
    \mOutPtr_reg[0] ,
    WREADY_Dummy,
    mem_reg,
    gmem_RVALID,
    mem_reg_0,
    last_resp,
    dout_vld_reg_2,
    need_wrsp,
    in,
    mem_reg_1,
    mem_reg_2,
    mem_reg_3,
    mem_reg_4);
  output wrsp_type;
  output full_n_reg;
  output WVALID_Dummy;
  output full_n_reg_0;
  output dout_vld_reg;
  output ursp_ready;
  output AWVALID_Dummy;
  output empty_n_reg;
  output [0:0]E;
  output resp_ready__1;
  output [91:0]D;
  output [35:0]dout;
  input ap_clk;
  input [0:0]SR;
  input dout_vld_reg_0;
  input ap_rst_n;
  input pop;
  input [1:0]Q;
  input [1:0]dout_vld_reg_1;
  input AWREADY_Dummy;
  input burst_valid;
  input \mOutPtr_reg[0] ;
  input WREADY_Dummy;
  input mem_reg;
  input gmem_RVALID;
  input mem_reg_0;
  input last_resp;
  input [0:0]dout_vld_reg_2;
  input need_wrsp;
  input [92:0]in;
  input mem_reg_1;
  input mem_reg_2;
  input mem_reg_3;
  input [31:0]mem_reg_4;

  wire AWREADY_Dummy;
  wire AWVALID_Dummy;
  wire [91:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire WREADY_Dummy;
  wire WVALID_Dummy;
  wire ap_clk;
  wire ap_rst_n;
  wire burst_valid;
  wire [35:0]dout;
  wire dout_vld_reg;
  wire dout_vld_reg_0;
  wire [1:0]dout_vld_reg_1;
  wire [0:0]dout_vld_reg_2;
  wire empty_n_reg;
  wire fifo_wreq_n_100;
  wire fifo_wreq_n_101;
  wire fifo_wreq_n_102;
  wire fifo_wreq_n_103;
  wire fifo_wreq_n_104;
  wire fifo_wreq_n_105;
  wire fifo_wreq_n_106;
  wire fifo_wreq_n_107;
  wire fifo_wreq_n_108;
  wire fifo_wreq_n_109;
  wire fifo_wreq_n_110;
  wire fifo_wreq_n_111;
  wire fifo_wreq_n_112;
  wire fifo_wreq_n_113;
  wire fifo_wreq_n_114;
  wire fifo_wreq_n_115;
  wire fifo_wreq_n_116;
  wire fifo_wreq_n_117;
  wire fifo_wreq_n_118;
  wire fifo_wreq_n_119;
  wire fifo_wreq_n_120;
  wire fifo_wreq_n_121;
  wire fifo_wreq_n_122;
  wire fifo_wreq_n_123;
  wire fifo_wreq_n_124;
  wire fifo_wreq_n_125;
  wire fifo_wreq_n_33;
  wire fifo_wreq_n_34;
  wire fifo_wreq_n_35;
  wire fifo_wreq_n_36;
  wire fifo_wreq_n_37;
  wire fifo_wreq_n_38;
  wire fifo_wreq_n_39;
  wire fifo_wreq_n_40;
  wire fifo_wreq_n_41;
  wire fifo_wreq_n_42;
  wire fifo_wreq_n_43;
  wire fifo_wreq_n_44;
  wire fifo_wreq_n_45;
  wire fifo_wreq_n_46;
  wire fifo_wreq_n_47;
  wire fifo_wreq_n_48;
  wire fifo_wreq_n_49;
  wire fifo_wreq_n_50;
  wire fifo_wreq_n_51;
  wire fifo_wreq_n_52;
  wire fifo_wreq_n_53;
  wire fifo_wreq_n_54;
  wire fifo_wreq_n_55;
  wire fifo_wreq_n_56;
  wire fifo_wreq_n_57;
  wire fifo_wreq_n_58;
  wire fifo_wreq_n_59;
  wire fifo_wreq_n_60;
  wire fifo_wreq_n_61;
  wire fifo_wreq_n_62;
  wire fifo_wreq_n_63;
  wire fifo_wreq_n_64;
  wire fifo_wreq_n_65;
  wire fifo_wreq_n_66;
  wire fifo_wreq_n_67;
  wire fifo_wreq_n_68;
  wire fifo_wreq_n_69;
  wire fifo_wreq_n_70;
  wire fifo_wreq_n_71;
  wire fifo_wreq_n_72;
  wire fifo_wreq_n_73;
  wire fifo_wreq_n_74;
  wire fifo_wreq_n_75;
  wire fifo_wreq_n_76;
  wire fifo_wreq_n_77;
  wire fifo_wreq_n_78;
  wire fifo_wreq_n_79;
  wire fifo_wreq_n_80;
  wire fifo_wreq_n_81;
  wire fifo_wreq_n_82;
  wire fifo_wreq_n_83;
  wire fifo_wreq_n_84;
  wire fifo_wreq_n_85;
  wire fifo_wreq_n_86;
  wire fifo_wreq_n_87;
  wire fifo_wreq_n_88;
  wire fifo_wreq_n_89;
  wire fifo_wreq_n_90;
  wire fifo_wreq_n_91;
  wire fifo_wreq_n_92;
  wire fifo_wreq_n_93;
  wire fifo_wreq_n_94;
  wire fifo_wreq_n_95;
  wire fifo_wreq_n_96;
  wire fifo_wreq_n_97;
  wire fifo_wreq_n_98;
  wire fifo_wreq_n_99;
  wire full_n_reg;
  wire full_n_reg_0;
  wire gmem_RVALID;
  wire [92:0]in;
  wire last_resp;
  wire \mOutPtr_reg[0] ;
  wire mem_reg;
  wire mem_reg_0;
  wire mem_reg_1;
  wire mem_reg_2;
  wire mem_reg_3;
  wire [31:0]mem_reg_4;
  wire need_wrsp;
  wire next_wreq;
  wire p_12_in;
  wire pop;
  wire pop_0;
  wire push;
  wire push__0;
  wire resp_ready__1;
  wire [31:2]tmp_len0;
  wire tmp_len0_carry__0_n_0;
  wire tmp_len0_carry__0_n_1;
  wire tmp_len0_carry__0_n_2;
  wire tmp_len0_carry__0_n_3;
  wire tmp_len0_carry__1_n_0;
  wire tmp_len0_carry__1_n_1;
  wire tmp_len0_carry__1_n_2;
  wire tmp_len0_carry__1_n_3;
  wire tmp_len0_carry__2_n_0;
  wire tmp_len0_carry__2_n_1;
  wire tmp_len0_carry__2_n_2;
  wire tmp_len0_carry__2_n_3;
  wire tmp_len0_carry__3_n_0;
  wire tmp_len0_carry__3_n_1;
  wire tmp_len0_carry__3_n_2;
  wire tmp_len0_carry__3_n_3;
  wire tmp_len0_carry__4_n_0;
  wire tmp_len0_carry__4_n_1;
  wire tmp_len0_carry__4_n_2;
  wire tmp_len0_carry__4_n_3;
  wire tmp_len0_carry__5_n_0;
  wire tmp_len0_carry__5_n_1;
  wire tmp_len0_carry__5_n_2;
  wire tmp_len0_carry__5_n_3;
  wire tmp_len0_carry__6_n_2;
  wire tmp_len0_carry__6_n_3;
  wire tmp_len0_carry_n_0;
  wire tmp_len0_carry_n_1;
  wire tmp_len0_carry_n_2;
  wire tmp_len0_carry_n_3;
  wire ursp_ready;
  wire valid_length;
  wire [28:0]wreq_len;
  wire wreq_valid;
  wire wrsp_ready;
  wire wrsp_type;
  wire [0:0]NLW_tmp_len0_carry_O_UNCONNECTED;
  wire [3:2]NLW_tmp_len0_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_tmp_len0_carry__6_O_UNCONNECTED;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized0 buff_wdata
       (.Q(Q),
        .SR(SR),
        .WREADY_Dummy(WREADY_Dummy),
        .WVALID_Dummy(WVALID_Dummy),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .burst_valid(burst_valid),
        .dout(dout),
        .dout_vld_reg_0(dout_vld_reg_0),
        .empty_n_reg_0(empty_n_reg),
        .full_n_reg_0(full_n_reg_0),
        .gmem_RVALID(gmem_RVALID),
        .\mOutPtr_reg[0]_0 (\mOutPtr_reg[0] ),
        .mem_reg(mem_reg),
        .mem_reg_0(mem_reg_0),
        .mem_reg_1(mem_reg_1),
        .mem_reg_2(mem_reg_2),
        .mem_reg_3(mem_reg_3),
        .mem_reg_4(mem_reg_4),
        .pop(pop));
  LUT2 #(
    .INIT(4'h8)) 
    \data_p2[95]_i_1 
       (.I0(AWVALID_Dummy),
        .I1(AWREADY_Dummy),
        .O(E));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo fifo_wreq
       (.AWREADY_Dummy(AWREADY_Dummy),
        .Q(Q),
        .S({fifo_wreq_n_95,fifo_wreq_n_96,fifo_wreq_n_97,fifo_wreq_n_98}),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\dout_reg[66] ({fifo_wreq_n_103,fifo_wreq_n_104,fifo_wreq_n_105}),
        .\dout_reg[70] ({fifo_wreq_n_99,fifo_wreq_n_100,fifo_wreq_n_101,fifo_wreq_n_102}),
        .\dout_reg[78] ({fifo_wreq_n_106,fifo_wreq_n_107,fifo_wreq_n_108,fifo_wreq_n_109}),
        .\dout_reg[82] ({fifo_wreq_n_110,fifo_wreq_n_111,fifo_wreq_n_112,fifo_wreq_n_113}),
        .\dout_reg[86] ({fifo_wreq_n_114,fifo_wreq_n_115,fifo_wreq_n_116,fifo_wreq_n_117}),
        .\dout_reg[90] ({fifo_wreq_n_118,fifo_wreq_n_119,fifo_wreq_n_120,fifo_wreq_n_121}),
        .\dout_reg[92] ({wreq_len,fifo_wreq_n_33,fifo_wreq_n_34,fifo_wreq_n_35,fifo_wreq_n_36,fifo_wreq_n_37,fifo_wreq_n_38,fifo_wreq_n_39,fifo_wreq_n_40,fifo_wreq_n_41,fifo_wreq_n_42,fifo_wreq_n_43,fifo_wreq_n_44,fifo_wreq_n_45,fifo_wreq_n_46,fifo_wreq_n_47,fifo_wreq_n_48,fifo_wreq_n_49,fifo_wreq_n_50,fifo_wreq_n_51,fifo_wreq_n_52,fifo_wreq_n_53,fifo_wreq_n_54,fifo_wreq_n_55,fifo_wreq_n_56,fifo_wreq_n_57,fifo_wreq_n_58,fifo_wreq_n_59,fifo_wreq_n_60,fifo_wreq_n_61,fifo_wreq_n_62,fifo_wreq_n_63,fifo_wreq_n_64,fifo_wreq_n_65,fifo_wreq_n_66,fifo_wreq_n_67,fifo_wreq_n_68,fifo_wreq_n_69,fifo_wreq_n_70,fifo_wreq_n_71,fifo_wreq_n_72,fifo_wreq_n_73,fifo_wreq_n_74,fifo_wreq_n_75,fifo_wreq_n_76,fifo_wreq_n_77,fifo_wreq_n_78,fifo_wreq_n_79,fifo_wreq_n_80,fifo_wreq_n_81,fifo_wreq_n_82,fifo_wreq_n_83,fifo_wreq_n_84,fifo_wreq_n_85,fifo_wreq_n_86,fifo_wreq_n_87,fifo_wreq_n_88,fifo_wreq_n_89,fifo_wreq_n_90,fifo_wreq_n_91,fifo_wreq_n_92,fifo_wreq_n_93,fifo_wreq_n_94}),
        .\dout_reg[93] ({fifo_wreq_n_122,fifo_wreq_n_123,fifo_wreq_n_124}),
        .full_n_reg_0(full_n_reg),
        .full_n_reg_1(fifo_wreq_n_125),
        .in(in),
        .\mOutPtr_reg[0]_0 (dout_vld_reg_1[0]),
        .push(push),
        .tmp_valid_reg(AWVALID_Dummy),
        .valid_length(valid_length),
        .wreq_valid(wreq_valid),
        .wrsp_ready(wrsp_ready));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1 fifo_wrsp
       (.AWREADY_Dummy(AWREADY_Dummy),
        .E(next_wreq),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\dout_reg[0] (wrsp_type),
        .dout_vld_reg_0(dout_vld_reg_2),
        .dout_vld_reg_1(ursp_ready),
        .last_resp(last_resp),
        .\mOutPtr_reg[0]_0 (AWVALID_Dummy),
        .need_wrsp(need_wrsp),
        .p_12_in(p_12_in),
        .pop(pop_0),
        .push(push),
        .push__0(push__0),
        .resp_ready__1(resp_ready__1),
        .valid_length(valid_length),
        .wreq_valid(wreq_valid),
        .wrsp_ready(wrsp_ready));
  FDRE \tmp_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_86),
        .Q(D[8]),
        .R(SR));
  FDRE \tmp_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_85),
        .Q(D[9]),
        .R(SR));
  FDRE \tmp_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_84),
        .Q(D[10]),
        .R(SR));
  FDRE \tmp_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_83),
        .Q(D[11]),
        .R(SR));
  FDRE \tmp_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_82),
        .Q(D[12]),
        .R(SR));
  FDRE \tmp_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_81),
        .Q(D[13]),
        .R(SR));
  FDRE \tmp_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_80),
        .Q(D[14]),
        .R(SR));
  FDRE \tmp_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_79),
        .Q(D[15]),
        .R(SR));
  FDRE \tmp_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_78),
        .Q(D[16]),
        .R(SR));
  FDRE \tmp_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_77),
        .Q(D[17]),
        .R(SR));
  FDRE \tmp_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_76),
        .Q(D[18]),
        .R(SR));
  FDRE \tmp_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_75),
        .Q(D[19]),
        .R(SR));
  FDRE \tmp_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_74),
        .Q(D[20]),
        .R(SR));
  FDRE \tmp_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_73),
        .Q(D[21]),
        .R(SR));
  FDRE \tmp_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_72),
        .Q(D[22]),
        .R(SR));
  FDRE \tmp_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_71),
        .Q(D[23]),
        .R(SR));
  FDRE \tmp_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_70),
        .Q(D[24]),
        .R(SR));
  FDRE \tmp_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_69),
        .Q(D[25]),
        .R(SR));
  FDRE \tmp_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_68),
        .Q(D[26]),
        .R(SR));
  FDRE \tmp_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_67),
        .Q(D[27]),
        .R(SR));
  FDRE \tmp_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_94),
        .Q(D[0]),
        .R(SR));
  FDRE \tmp_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_66),
        .Q(D[28]),
        .R(SR));
  FDRE \tmp_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_65),
        .Q(D[29]),
        .R(SR));
  FDRE \tmp_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_64),
        .Q(D[30]),
        .R(SR));
  FDRE \tmp_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_63),
        .Q(D[31]),
        .R(SR));
  FDRE \tmp_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_62),
        .Q(D[32]),
        .R(SR));
  FDRE \tmp_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_61),
        .Q(D[33]),
        .R(SR));
  FDRE \tmp_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_60),
        .Q(D[34]),
        .R(SR));
  FDRE \tmp_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_59),
        .Q(D[35]),
        .R(SR));
  FDRE \tmp_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_58),
        .Q(D[36]),
        .R(SR));
  FDRE \tmp_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_57),
        .Q(D[37]),
        .R(SR));
  FDRE \tmp_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_93),
        .Q(D[1]),
        .R(SR));
  FDRE \tmp_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_56),
        .Q(D[38]),
        .R(SR));
  FDRE \tmp_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_55),
        .Q(D[39]),
        .R(SR));
  FDRE \tmp_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_54),
        .Q(D[40]),
        .R(SR));
  FDRE \tmp_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_53),
        .Q(D[41]),
        .R(SR));
  FDRE \tmp_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_52),
        .Q(D[42]),
        .R(SR));
  FDRE \tmp_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_51),
        .Q(D[43]),
        .R(SR));
  FDRE \tmp_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_50),
        .Q(D[44]),
        .R(SR));
  FDRE \tmp_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_49),
        .Q(D[45]),
        .R(SR));
  FDRE \tmp_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_48),
        .Q(D[46]),
        .R(SR));
  FDRE \tmp_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_47),
        .Q(D[47]),
        .R(SR));
  FDRE \tmp_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_92),
        .Q(D[2]),
        .R(SR));
  FDRE \tmp_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_46),
        .Q(D[48]),
        .R(SR));
  FDRE \tmp_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_45),
        .Q(D[49]),
        .R(SR));
  FDRE \tmp_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_44),
        .Q(D[50]),
        .R(SR));
  FDRE \tmp_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_43),
        .Q(D[51]),
        .R(SR));
  FDRE \tmp_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_42),
        .Q(D[52]),
        .R(SR));
  FDRE \tmp_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_41),
        .Q(D[53]),
        .R(SR));
  FDRE \tmp_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_40),
        .Q(D[54]),
        .R(SR));
  FDRE \tmp_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_39),
        .Q(D[55]),
        .R(SR));
  FDRE \tmp_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_38),
        .Q(D[56]),
        .R(SR));
  FDRE \tmp_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_37),
        .Q(D[57]),
        .R(SR));
  FDRE \tmp_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_91),
        .Q(D[3]),
        .R(SR));
  FDRE \tmp_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_36),
        .Q(D[58]),
        .R(SR));
  FDRE \tmp_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_35),
        .Q(D[59]),
        .R(SR));
  FDRE \tmp_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_34),
        .Q(D[60]),
        .R(SR));
  FDRE \tmp_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_33),
        .Q(D[61]),
        .R(SR));
  FDRE \tmp_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_90),
        .Q(D[4]),
        .R(SR));
  FDRE \tmp_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_89),
        .Q(D[5]),
        .R(SR));
  FDRE \tmp_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_88),
        .Q(D[6]),
        .R(SR));
  FDRE \tmp_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(fifo_wreq_n_87),
        .Q(D[7]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry
       (.CI(1'b0),
        .CO({tmp_len0_carry_n_0,tmp_len0_carry_n_1,tmp_len0_carry_n_2,tmp_len0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({wreq_len[2:0],1'b0}),
        .O({tmp_len0[4:2],NLW_tmp_len0_carry_O_UNCONNECTED[0]}),
        .S({fifo_wreq_n_103,fifo_wreq_n_104,fifo_wreq_n_105,1'b1}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__0
       (.CI(tmp_len0_carry_n_0),
        .CO({tmp_len0_carry__0_n_0,tmp_len0_carry__0_n_1,tmp_len0_carry__0_n_2,tmp_len0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[6:3]),
        .O(tmp_len0[8:5]),
        .S({fifo_wreq_n_99,fifo_wreq_n_100,fifo_wreq_n_101,fifo_wreq_n_102}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__1
       (.CI(tmp_len0_carry__0_n_0),
        .CO({tmp_len0_carry__1_n_0,tmp_len0_carry__1_n_1,tmp_len0_carry__1_n_2,tmp_len0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[10:7]),
        .O(tmp_len0[12:9]),
        .S({fifo_wreq_n_95,fifo_wreq_n_96,fifo_wreq_n_97,fifo_wreq_n_98}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__2
       (.CI(tmp_len0_carry__1_n_0),
        .CO({tmp_len0_carry__2_n_0,tmp_len0_carry__2_n_1,tmp_len0_carry__2_n_2,tmp_len0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[14:11]),
        .O(tmp_len0[16:13]),
        .S({fifo_wreq_n_106,fifo_wreq_n_107,fifo_wreq_n_108,fifo_wreq_n_109}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__3
       (.CI(tmp_len0_carry__2_n_0),
        .CO({tmp_len0_carry__3_n_0,tmp_len0_carry__3_n_1,tmp_len0_carry__3_n_2,tmp_len0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[18:15]),
        .O(tmp_len0[20:17]),
        .S({fifo_wreq_n_110,fifo_wreq_n_111,fifo_wreq_n_112,fifo_wreq_n_113}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__4
       (.CI(tmp_len0_carry__3_n_0),
        .CO({tmp_len0_carry__4_n_0,tmp_len0_carry__4_n_1,tmp_len0_carry__4_n_2,tmp_len0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[22:19]),
        .O(tmp_len0[24:21]),
        .S({fifo_wreq_n_114,fifo_wreq_n_115,fifo_wreq_n_116,fifo_wreq_n_117}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__5
       (.CI(tmp_len0_carry__4_n_0),
        .CO({tmp_len0_carry__5_n_0,tmp_len0_carry__5_n_1,tmp_len0_carry__5_n_2,tmp_len0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(wreq_len[26:23]),
        .O(tmp_len0[28:25]),
        .S({fifo_wreq_n_118,fifo_wreq_n_119,fifo_wreq_n_120,fifo_wreq_n_121}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 tmp_len0_carry__6
       (.CI(tmp_len0_carry__5_n_0),
        .CO({NLW_tmp_len0_carry__6_CO_UNCONNECTED[3:2],tmp_len0_carry__6_n_2,tmp_len0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,wreq_len[28:27]}),
        .O({NLW_tmp_len0_carry__6_O_UNCONNECTED[3],tmp_len0[31:29]}),
        .S({1'b0,fifo_wreq_n_122,fifo_wreq_n_123,fifo_wreq_n_124}));
  FDRE \tmp_len_reg[10] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[10]),
        .Q(D[70]),
        .R(SR));
  FDRE \tmp_len_reg[11] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[11]),
        .Q(D[71]),
        .R(SR));
  FDRE \tmp_len_reg[12] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[12]),
        .Q(D[72]),
        .R(SR));
  FDRE \tmp_len_reg[13] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[13]),
        .Q(D[73]),
        .R(SR));
  FDRE \tmp_len_reg[14] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[14]),
        .Q(D[74]),
        .R(SR));
  FDRE \tmp_len_reg[15] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[15]),
        .Q(D[75]),
        .R(SR));
  FDRE \tmp_len_reg[16] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[16]),
        .Q(D[76]),
        .R(SR));
  FDRE \tmp_len_reg[17] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[17]),
        .Q(D[77]),
        .R(SR));
  FDRE \tmp_len_reg[18] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[18]),
        .Q(D[78]),
        .R(SR));
  FDRE \tmp_len_reg[19] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[19]),
        .Q(D[79]),
        .R(SR));
  FDRE \tmp_len_reg[20] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[20]),
        .Q(D[80]),
        .R(SR));
  FDRE \tmp_len_reg[21] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[21]),
        .Q(D[81]),
        .R(SR));
  FDRE \tmp_len_reg[22] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[22]),
        .Q(D[82]),
        .R(SR));
  FDRE \tmp_len_reg[23] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[23]),
        .Q(D[83]),
        .R(SR));
  FDRE \tmp_len_reg[24] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[24]),
        .Q(D[84]),
        .R(SR));
  FDRE \tmp_len_reg[25] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[25]),
        .Q(D[85]),
        .R(SR));
  FDRE \tmp_len_reg[26] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[26]),
        .Q(D[86]),
        .R(SR));
  FDRE \tmp_len_reg[27] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[27]),
        .Q(D[87]),
        .R(SR));
  FDRE \tmp_len_reg[28] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[28]),
        .Q(D[88]),
        .R(SR));
  FDRE \tmp_len_reg[29] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[29]),
        .Q(D[89]),
        .R(SR));
  FDRE \tmp_len_reg[2] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[2]),
        .Q(D[62]),
        .R(SR));
  FDRE \tmp_len_reg[30] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[30]),
        .Q(D[90]),
        .R(SR));
  FDRE \tmp_len_reg[31] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[31]),
        .Q(D[91]),
        .R(SR));
  FDRE \tmp_len_reg[3] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[3]),
        .Q(D[63]),
        .R(SR));
  FDRE \tmp_len_reg[4] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[4]),
        .Q(D[64]),
        .R(SR));
  FDRE \tmp_len_reg[5] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[5]),
        .Q(D[65]),
        .R(SR));
  FDRE \tmp_len_reg[6] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[6]),
        .Q(D[66]),
        .R(SR));
  FDRE \tmp_len_reg[7] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[7]),
        .Q(D[67]),
        .R(SR));
  FDRE \tmp_len_reg[8] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[8]),
        .Q(D[68]),
        .R(SR));
  FDRE \tmp_len_reg[9] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(tmp_len0[9]),
        .Q(D[69]),
        .R(SR));
  FDRE tmp_valid_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_wreq_n_125),
        .Q(AWVALID_Dummy),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized2 user_resp
       (.Q(Q),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .dout_vld_reg_0(dout_vld_reg),
        .dout_vld_reg_1(dout_vld_reg_1[1]),
        .p_12_in(p_12_in),
        .pop(pop_0),
        .push__0(push__0),
        .ursp_ready(ursp_ready));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_throttle" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_throttle
   (SR,
    AWREADY_Dummy_0,
    full_n_reg,
    E,
    sel,
    \dout_reg[36] ,
    m_axi_gmem_WVALID,
    empty_n_reg,
    empty_n_reg_0,
    m_axi_gmem_AWVALID,
    \data_p1_reg[67] ,
    ap_clk,
    ap_rst_n,
    \mOutPtr_reg[1] ,
    \last_cnt_reg[1]_0 ,
    dout_vld_reg,
    WVALID_Dummy,
    \dout_reg[0] ,
    fifo_resp_ready,
    fifo_burst_ready,
    m_axi_gmem_WREADY,
    \dout_reg[36]_0 ,
    dout_vld_reg_0,
    m_axi_gmem_AWREADY,
    in,
    dout);
  output [0:0]SR;
  output AWREADY_Dummy_0;
  output full_n_reg;
  output [0:0]E;
  output sel;
  output [36:0]\dout_reg[36] ;
  output m_axi_gmem_WVALID;
  output empty_n_reg;
  output empty_n_reg_0;
  output m_axi_gmem_AWVALID;
  output [65:0]\data_p1_reg[67] ;
  input ap_clk;
  input ap_rst_n;
  input \mOutPtr_reg[1] ;
  input \last_cnt_reg[1]_0 ;
  input dout_vld_reg;
  input WVALID_Dummy;
  input \dout_reg[0] ;
  input fifo_resp_ready;
  input fifo_burst_ready;
  input m_axi_gmem_WREADY;
  input \dout_reg[36]_0 ;
  input dout_vld_reg_0;
  input m_axi_gmem_AWREADY;
  input [65:0]in;
  input [35:0]dout;

  wire AWREADY_Dummy_0;
  wire [0:0]E;
  wire [0:0]SR;
  wire WVALID_Dummy;
  wire ap_clk;
  wire ap_rst_n;
  wire data_fifo_n_2;
  wire data_fifo_n_3;
  wire data_fifo_n_4;
  wire data_fifo_n_45;
  wire data_fifo_n_49;
  wire data_fifo_n_5;
  wire [65:0]\data_p1_reg[67] ;
  wire [35:0]dout;
  wire \dout_reg[0] ;
  wire [36:0]\dout_reg[36] ;
  wire \dout_reg[36]_0 ;
  wire dout_vld_reg;
  wire dout_vld_reg_0;
  wire empty_n_reg;
  wire empty_n_reg_0;
  wire fifo_burst_ready;
  wire fifo_resp_ready;
  wire flying_req_reg_n_0;
  wire full_n_reg;
  wire [65:0]in;
  wire \last_cnt[0]_i_1_n_0 ;
  wire [4:1]last_cnt_reg;
  wire \last_cnt_reg[1]_0 ;
  wire [0:0]last_cnt_reg__0;
  wire load_p2;
  wire \mOutPtr_reg[1] ;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire m_axi_gmem_WREADY;
  wire m_axi_gmem_WVALID;
  wire req_en__0;
  wire req_fifo_n_10;
  wire req_fifo_n_11;
  wire req_fifo_n_12;
  wire req_fifo_n_13;
  wire req_fifo_n_14;
  wire req_fifo_n_15;
  wire req_fifo_n_16;
  wire req_fifo_n_17;
  wire req_fifo_n_18;
  wire req_fifo_n_19;
  wire req_fifo_n_20;
  wire req_fifo_n_21;
  wire req_fifo_n_22;
  wire req_fifo_n_23;
  wire req_fifo_n_24;
  wire req_fifo_n_25;
  wire req_fifo_n_26;
  wire req_fifo_n_27;
  wire req_fifo_n_28;
  wire req_fifo_n_29;
  wire req_fifo_n_30;
  wire req_fifo_n_31;
  wire req_fifo_n_32;
  wire req_fifo_n_33;
  wire req_fifo_n_34;
  wire req_fifo_n_35;
  wire req_fifo_n_36;
  wire req_fifo_n_37;
  wire req_fifo_n_38;
  wire req_fifo_n_39;
  wire req_fifo_n_4;
  wire req_fifo_n_40;
  wire req_fifo_n_41;
  wire req_fifo_n_42;
  wire req_fifo_n_43;
  wire req_fifo_n_44;
  wire req_fifo_n_45;
  wire req_fifo_n_46;
  wire req_fifo_n_47;
  wire req_fifo_n_48;
  wire req_fifo_n_49;
  wire req_fifo_n_5;
  wire req_fifo_n_50;
  wire req_fifo_n_51;
  wire req_fifo_n_52;
  wire req_fifo_n_53;
  wire req_fifo_n_54;
  wire req_fifo_n_55;
  wire req_fifo_n_56;
  wire req_fifo_n_57;
  wire req_fifo_n_58;
  wire req_fifo_n_59;
  wire req_fifo_n_6;
  wire req_fifo_n_60;
  wire req_fifo_n_61;
  wire req_fifo_n_62;
  wire req_fifo_n_63;
  wire req_fifo_n_64;
  wire req_fifo_n_65;
  wire req_fifo_n_66;
  wire req_fifo_n_67;
  wire req_fifo_n_68;
  wire req_fifo_n_69;
  wire req_fifo_n_7;
  wire req_fifo_n_8;
  wire req_fifo_n_9;
  wire req_fifo_valid;
  wire rs_req_n_1;
  wire rs_req_ready;
  wire sel;

  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized6 data_fifo
       (.D({data_fifo_n_2,data_fifo_n_3,data_fifo_n_4,data_fifo_n_5}),
        .E(E),
        .Q({last_cnt_reg,last_cnt_reg__0}),
        .WVALID_Dummy(WVALID_Dummy),
        .WVALID_Dummy_reg(data_fifo_n_45),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\dout_reg[36] (\dout_reg[36] ),
        .\dout_reg[36]_0 (SR),
        .dout_vld_reg_0(load_p2),
        .dout_vld_reg_1(data_fifo_n_49),
        .dout_vld_reg_2(dout_vld_reg),
        .dout_vld_reg_3(dout_vld_reg_0),
        .empty_n_reg_0(empty_n_reg),
        .empty_n_reg_1(empty_n_reg_0),
        .flying_req_reg(rs_req_n_1),
        .flying_req_reg_0(flying_req_reg_n_0),
        .full_n_reg_0(full_n_reg),
        .in({\dout_reg[36]_0 ,dout}),
        .\last_cnt_reg[1] (\last_cnt_reg[1]_0 ),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .m_axi_gmem_WVALID(m_axi_gmem_WVALID),
        .req_en__0(req_en__0),
        .req_fifo_valid(req_fifo_valid),
        .rs_req_ready(rs_req_ready));
  FDRE flying_req_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(data_fifo_n_49),
        .Q(flying_req_reg_n_0),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \last_cnt[0]_i_1 
       (.I0(last_cnt_reg__0),
        .O(\last_cnt[0]_i_1_n_0 ));
  FDRE \last_cnt_reg[0] 
       (.C(ap_clk),
        .CE(data_fifo_n_45),
        .D(\last_cnt[0]_i_1_n_0 ),
        .Q(last_cnt_reg__0),
        .R(SR));
  FDRE \last_cnt_reg[1] 
       (.C(ap_clk),
        .CE(data_fifo_n_45),
        .D(data_fifo_n_5),
        .Q(last_cnt_reg[1]),
        .R(SR));
  FDRE \last_cnt_reg[2] 
       (.C(ap_clk),
        .CE(data_fifo_n_45),
        .D(data_fifo_n_4),
        .Q(last_cnt_reg[2]),
        .R(SR));
  FDRE \last_cnt_reg[3] 
       (.C(ap_clk),
        .CE(data_fifo_n_45),
        .D(data_fifo_n_3),
        .Q(last_cnt_reg[3]),
        .R(SR));
  FDRE \last_cnt_reg[4] 
       (.C(ap_clk),
        .CE(data_fifo_n_45),
        .D(data_fifo_n_2),
        .Q(last_cnt_reg[4]),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized5 req_fifo
       (.Q({req_fifo_n_4,req_fifo_n_5,req_fifo_n_6,req_fifo_n_7,req_fifo_n_8,req_fifo_n_9,req_fifo_n_10,req_fifo_n_11,req_fifo_n_12,req_fifo_n_13,req_fifo_n_14,req_fifo_n_15,req_fifo_n_16,req_fifo_n_17,req_fifo_n_18,req_fifo_n_19,req_fifo_n_20,req_fifo_n_21,req_fifo_n_22,req_fifo_n_23,req_fifo_n_24,req_fifo_n_25,req_fifo_n_26,req_fifo_n_27,req_fifo_n_28,req_fifo_n_29,req_fifo_n_30,req_fifo_n_31,req_fifo_n_32,req_fifo_n_33,req_fifo_n_34,req_fifo_n_35,req_fifo_n_36,req_fifo_n_37,req_fifo_n_38,req_fifo_n_39,req_fifo_n_40,req_fifo_n_41,req_fifo_n_42,req_fifo_n_43,req_fifo_n_44,req_fifo_n_45,req_fifo_n_46,req_fifo_n_47,req_fifo_n_48,req_fifo_n_49,req_fifo_n_50,req_fifo_n_51,req_fifo_n_52,req_fifo_n_53,req_fifo_n_54,req_fifo_n_55,req_fifo_n_56,req_fifo_n_57,req_fifo_n_58,req_fifo_n_59,req_fifo_n_60,req_fifo_n_61,req_fifo_n_62,req_fifo_n_63,req_fifo_n_64,req_fifo_n_65,req_fifo_n_66,req_fifo_n_67,req_fifo_n_68,req_fifo_n_69}),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(SR),
        .\dout_reg[0] (\dout_reg[0] ),
        .fifo_burst_ready(fifo_burst_ready),
        .fifo_resp_ready(fifo_resp_ready),
        .full_n_reg_0(AWREADY_Dummy_0),
        .in(in),
        .\mOutPtr_reg[1]_0 (\mOutPtr_reg[1] ),
        .req_en__0(req_en__0),
        .req_fifo_valid(req_fifo_valid),
        .rs_req_ready(rs_req_ready),
        .sel(sel));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized0 rs_req
       (.D({req_fifo_n_4,req_fifo_n_5,req_fifo_n_6,req_fifo_n_7,req_fifo_n_8,req_fifo_n_9,req_fifo_n_10,req_fifo_n_11,req_fifo_n_12,req_fifo_n_13,req_fifo_n_14,req_fifo_n_15,req_fifo_n_16,req_fifo_n_17,req_fifo_n_18,req_fifo_n_19,req_fifo_n_20,req_fifo_n_21,req_fifo_n_22,req_fifo_n_23,req_fifo_n_24,req_fifo_n_25,req_fifo_n_26,req_fifo_n_27,req_fifo_n_28,req_fifo_n_29,req_fifo_n_30,req_fifo_n_31,req_fifo_n_32,req_fifo_n_33,req_fifo_n_34,req_fifo_n_35,req_fifo_n_36,req_fifo_n_37,req_fifo_n_38,req_fifo_n_39,req_fifo_n_40,req_fifo_n_41,req_fifo_n_42,req_fifo_n_43,req_fifo_n_44,req_fifo_n_45,req_fifo_n_46,req_fifo_n_47,req_fifo_n_48,req_fifo_n_49,req_fifo_n_50,req_fifo_n_51,req_fifo_n_52,req_fifo_n_53,req_fifo_n_54,req_fifo_n_55,req_fifo_n_56,req_fifo_n_57,req_fifo_n_58,req_fifo_n_59,req_fifo_n_60,req_fifo_n_61,req_fifo_n_62,req_fifo_n_63,req_fifo_n_64,req_fifo_n_65,req_fifo_n_66,req_fifo_n_67,req_fifo_n_68,req_fifo_n_69}),
        .E(load_p2),
        .Q(last_cnt_reg),
        .SR(SR),
        .ap_clk(ap_clk),
        .\data_p1_reg[67]_0 (\data_p1_reg[67] ),
        .\last_cnt_reg[2] (rs_req_n_1),
        .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
        .m_axi_gmem_AWVALID(m_axi_gmem_AWVALID),
        .req_en__0(req_en__0),
        .req_fifo_valid(req_fifo_valid),
        .rs_req_ready(rs_req_ready),
        .\state[0]_i_3 (flying_req_reg_n_0));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_gmem_m_axi_write" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_write
   (last_resp,
    SR,
    AWREADY_Dummy,
    burst_valid,
    WREADY_Dummy,
    s_ready_t_reg,
    need_wrsp,
    WVALID_Dummy_reg_0,
    pop,
    Q,
    \dout_reg[36] ,
    m_axi_gmem_WVALID,
    empty_n_reg,
    ap_rst_n_0,
    dout_vld_reg,
    empty_n_reg_0,
    m_axi_gmem_AWVALID,
    \data_p1_reg[67] ,
    ap_clk,
    ap_rst_n,
    WVALID_Dummy,
    dout_vld_reg_0,
    AWVALID_Dummy,
    resp_ready__1,
    m_axi_gmem_WREADY,
    wrsp_type,
    ursp_ready,
    m_axi_gmem_BVALID,
    D,
    m_axi_gmem_AWREADY,
    dout,
    E);
  output last_resp;
  output [0:0]SR;
  output AWREADY_Dummy;
  output burst_valid;
  output WREADY_Dummy;
  output s_ready_t_reg;
  output need_wrsp;
  output WVALID_Dummy_reg_0;
  output pop;
  output [0:0]Q;
  output [36:0]\dout_reg[36] ;
  output m_axi_gmem_WVALID;
  output empty_n_reg;
  output ap_rst_n_0;
  output dout_vld_reg;
  output empty_n_reg_0;
  output m_axi_gmem_AWVALID;
  output [65:0]\data_p1_reg[67] ;
  input ap_clk;
  input ap_rst_n;
  input WVALID_Dummy;
  input dout_vld_reg_0;
  input AWVALID_Dummy;
  input resp_ready__1;
  input m_axi_gmem_WREADY;
  input wrsp_type;
  input ursp_ready;
  input m_axi_gmem_BVALID;
  input [91:0]D;
  input m_axi_gmem_AWREADY;
  input [35:0]dout;
  input [0:0]E;

  wire AWREADY_Dummy;
  wire AWREADY_Dummy_0;
  wire AWVALID_Dummy;
  wire [91:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire WLAST_Dummy_reg_n_0;
  wire WREADY_Dummy;
  wire WVALID_Dummy;
  wire WVALID_Dummy_reg_0;
  wire ap_clk;
  wire ap_rst_n;
  wire ap_rst_n_0;
  wire [63:2]awaddr_tmp;
  wire [3:0]awlen_tmp;
  wire [9:0]beat_len;
  wire burst_valid;
  wire \could_multi_bursts.AWVALID_Dummy_reg_n_0 ;
  wire [63:2]\could_multi_bursts.awaddr_buf ;
  wire \could_multi_bursts.awaddr_buf[4]_i_3_n_0 ;
  wire \could_multi_bursts.awaddr_buf[4]_i_4_n_0 ;
  wire \could_multi_bursts.awaddr_buf[4]_i_5_n_0 ;
  wire \could_multi_bursts.awaddr_buf[63]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf[8]_i_3_n_0 ;
  wire \could_multi_bursts.awaddr_buf[8]_i_4_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[12]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[12]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[12]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[12]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[16]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[16]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[16]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[16]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[20]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[20]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[20]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[20]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[24]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[24]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[24]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[24]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[28]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[28]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[28]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[28]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[32]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[32]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[32]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[32]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[36]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[36]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[36]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[36]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[40]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[40]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[40]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[40]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[44]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[44]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[44]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[44]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[48]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[48]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[48]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[48]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[4]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[4]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[4]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[4]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[52]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[52]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[52]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[52]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[56]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[56]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[56]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[56]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[60]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[60]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[60]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[60]_i_2_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[63]_i_3_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[63]_i_3_n_3 ;
  wire \could_multi_bursts.awaddr_buf_reg[8]_i_2_n_0 ;
  wire \could_multi_bursts.awaddr_buf_reg[8]_i_2_n_1 ;
  wire \could_multi_bursts.awaddr_buf_reg[8]_i_2_n_2 ;
  wire \could_multi_bursts.awaddr_buf_reg[8]_i_2_n_3 ;
  wire [3:0]\could_multi_bursts.awlen_buf ;
  wire [5:0]\could_multi_bursts.loop_cnt_reg ;
  wire \could_multi_bursts.next_loop ;
  wire \could_multi_bursts.sect_handling_reg_n_0 ;
  wire [63:2]data1;
  wire [65:0]\data_p1_reg[67] ;
  wire [35:0]dout;
  wire [36:0]\dout_reg[36] ;
  wire dout_vld_reg;
  wire dout_vld_reg_0;
  wire empty_n_reg;
  wire empty_n_reg_0;
  wire \end_addr[13]_i_2_n_0 ;
  wire \end_addr[13]_i_3_n_0 ;
  wire \end_addr[13]_i_4_n_0 ;
  wire \end_addr[13]_i_5_n_0 ;
  wire \end_addr[17]_i_2_n_0 ;
  wire \end_addr[17]_i_3_n_0 ;
  wire \end_addr[17]_i_4_n_0 ;
  wire \end_addr[17]_i_5_n_0 ;
  wire \end_addr[21]_i_2_n_0 ;
  wire \end_addr[21]_i_3_n_0 ;
  wire \end_addr[21]_i_4_n_0 ;
  wire \end_addr[21]_i_5_n_0 ;
  wire \end_addr[25]_i_2_n_0 ;
  wire \end_addr[25]_i_3_n_0 ;
  wire \end_addr[25]_i_4_n_0 ;
  wire \end_addr[25]_i_5_n_0 ;
  wire \end_addr[29]_i_2_n_0 ;
  wire \end_addr[29]_i_3_n_0 ;
  wire \end_addr[29]_i_4_n_0 ;
  wire \end_addr[29]_i_5_n_0 ;
  wire \end_addr[33]_i_2_n_0 ;
  wire \end_addr[33]_i_3_n_0 ;
  wire \end_addr[5]_i_2_n_0 ;
  wire \end_addr[5]_i_3_n_0 ;
  wire \end_addr[5]_i_4_n_0 ;
  wire \end_addr[5]_i_5_n_0 ;
  wire \end_addr[9]_i_2_n_0 ;
  wire \end_addr[9]_i_3_n_0 ;
  wire \end_addr[9]_i_4_n_0 ;
  wire \end_addr[9]_i_5_n_0 ;
  wire \end_addr_reg_n_0_[10] ;
  wire \end_addr_reg_n_0_[11] ;
  wire \end_addr_reg_n_0_[2] ;
  wire \end_addr_reg_n_0_[3] ;
  wire \end_addr_reg_n_0_[4] ;
  wire \end_addr_reg_n_0_[5] ;
  wire \end_addr_reg_n_0_[6] ;
  wire \end_addr_reg_n_0_[7] ;
  wire \end_addr_reg_n_0_[8] ;
  wire \end_addr_reg_n_0_[9] ;
  wire fifo_burst_n_10;
  wire fifo_burst_n_11;
  wire fifo_burst_n_14;
  wire fifo_burst_n_15;
  wire fifo_burst_n_16;
  wire fifo_burst_n_21;
  wire fifo_burst_n_4;
  wire fifo_burst_n_7;
  wire fifo_burst_n_8;
  wire fifo_burst_n_9;
  wire fifo_burst_ready;
  wire fifo_resp_n_3;
  wire fifo_resp_ready;
  wire first_sect;
  wire first_sect_carry__0_i_1_n_0;
  wire first_sect_carry__0_i_2_n_0;
  wire first_sect_carry__0_i_3_n_0;
  wire first_sect_carry__0_i_4_n_0;
  wire first_sect_carry__0_n_0;
  wire first_sect_carry__0_n_1;
  wire first_sect_carry__0_n_2;
  wire first_sect_carry__0_n_3;
  wire first_sect_carry__1_i_1_n_0;
  wire first_sect_carry__1_i_2_n_0;
  wire first_sect_carry__1_i_3_n_0;
  wire first_sect_carry__1_i_4_n_0;
  wire first_sect_carry__1_n_0;
  wire first_sect_carry__1_n_1;
  wire first_sect_carry__1_n_2;
  wire first_sect_carry__1_n_3;
  wire first_sect_carry__2_i_1_n_0;
  wire first_sect_carry__2_i_2_n_0;
  wire first_sect_carry__2_i_3_n_0;
  wire first_sect_carry__2_i_4_n_0;
  wire first_sect_carry__2_n_0;
  wire first_sect_carry__2_n_1;
  wire first_sect_carry__2_n_2;
  wire first_sect_carry__2_n_3;
  wire first_sect_carry__3_i_1_n_0;
  wire first_sect_carry__3_i_2_n_0;
  wire first_sect_carry__3_n_3;
  wire first_sect_carry_i_1_n_0;
  wire first_sect_carry_i_2_n_0;
  wire first_sect_carry_i_3_n_0;
  wire first_sect_carry_i_4_n_0;
  wire first_sect_carry_n_0;
  wire first_sect_carry_n_1;
  wire first_sect_carry_n_2;
  wire first_sect_carry_n_3;
  wire last_resp;
  wire last_sect;
  wire last_sect_buf_reg_n_0;
  wire last_sect_carry__0_i_1_n_0;
  wire last_sect_carry__0_i_2_n_0;
  wire last_sect_carry__0_i_3_n_0;
  wire last_sect_carry__0_i_4_n_0;
  wire last_sect_carry__0_n_0;
  wire last_sect_carry__0_n_1;
  wire last_sect_carry__0_n_2;
  wire last_sect_carry__0_n_3;
  wire last_sect_carry__1_i_1_n_0;
  wire last_sect_carry__1_i_2_n_0;
  wire last_sect_carry__1_i_3_n_0;
  wire last_sect_carry__1_i_4_n_0;
  wire last_sect_carry__1_n_0;
  wire last_sect_carry__1_n_1;
  wire last_sect_carry__1_n_2;
  wire last_sect_carry__1_n_3;
  wire last_sect_carry__2_i_1_n_0;
  wire last_sect_carry__2_i_2_n_0;
  wire last_sect_carry__2_i_3_n_0;
  wire last_sect_carry__2_i_4_n_0;
  wire last_sect_carry__2_n_0;
  wire last_sect_carry__2_n_1;
  wire last_sect_carry__2_n_2;
  wire last_sect_carry__2_n_3;
  wire last_sect_carry__3_n_3;
  wire last_sect_carry_i_1_n_0;
  wire last_sect_carry_i_2_n_0;
  wire last_sect_carry_i_3_n_0;
  wire last_sect_carry_i_4_n_0;
  wire last_sect_carry_n_0;
  wire last_sect_carry_n_1;
  wire last_sect_carry_n_2;
  wire last_sect_carry_n_3;
  wire \len_cnt[7]_i_4_n_0 ;
  wire [7:0]len_cnt_reg;
  wire m_axi_gmem_AWREADY;
  wire m_axi_gmem_AWVALID;
  wire m_axi_gmem_BVALID;
  wire m_axi_gmem_WREADY;
  wire m_axi_gmem_WVALID;
  wire need_wrsp;
  wire next_wreq;
  wire [5:0]p_0_in;
  wire [51:0]p_0_in0_in;
  wire [51:0]p_0_in_1;
  wire [7:0]p_0_in__0;
  wire p_14_in;
  wire p_18_in;
  wire [11:2]p_1_in;
  wire pop;
  wire push;
  wire resp_ready__1;
  wire rs_wreq_n_10;
  wire rs_wreq_n_100;
  wire rs_wreq_n_101;
  wire rs_wreq_n_102;
  wire rs_wreq_n_103;
  wire rs_wreq_n_104;
  wire rs_wreq_n_105;
  wire rs_wreq_n_106;
  wire rs_wreq_n_107;
  wire rs_wreq_n_108;
  wire rs_wreq_n_109;
  wire rs_wreq_n_11;
  wire rs_wreq_n_110;
  wire rs_wreq_n_111;
  wire rs_wreq_n_112;
  wire rs_wreq_n_113;
  wire rs_wreq_n_114;
  wire rs_wreq_n_115;
  wire rs_wreq_n_116;
  wire rs_wreq_n_117;
  wire rs_wreq_n_118;
  wire rs_wreq_n_119;
  wire rs_wreq_n_12;
  wire rs_wreq_n_120;
  wire rs_wreq_n_121;
  wire rs_wreq_n_122;
  wire rs_wreq_n_123;
  wire rs_wreq_n_124;
  wire rs_wreq_n_125;
  wire rs_wreq_n_126;
  wire rs_wreq_n_127;
  wire rs_wreq_n_128;
  wire rs_wreq_n_129;
  wire rs_wreq_n_13;
  wire rs_wreq_n_130;
  wire rs_wreq_n_131;
  wire rs_wreq_n_132;
  wire rs_wreq_n_133;
  wire rs_wreq_n_134;
  wire rs_wreq_n_135;
  wire rs_wreq_n_136;
  wire rs_wreq_n_137;
  wire rs_wreq_n_138;
  wire rs_wreq_n_139;
  wire rs_wreq_n_14;
  wire rs_wreq_n_140;
  wire rs_wreq_n_141;
  wire rs_wreq_n_142;
  wire rs_wreq_n_143;
  wire rs_wreq_n_144;
  wire rs_wreq_n_145;
  wire rs_wreq_n_146;
  wire rs_wreq_n_147;
  wire rs_wreq_n_148;
  wire rs_wreq_n_149;
  wire rs_wreq_n_15;
  wire rs_wreq_n_150;
  wire rs_wreq_n_151;
  wire rs_wreq_n_152;
  wire rs_wreq_n_153;
  wire rs_wreq_n_154;
  wire rs_wreq_n_155;
  wire rs_wreq_n_156;
  wire rs_wreq_n_157;
  wire rs_wreq_n_158;
  wire rs_wreq_n_159;
  wire rs_wreq_n_16;
  wire rs_wreq_n_160;
  wire rs_wreq_n_161;
  wire rs_wreq_n_162;
  wire rs_wreq_n_163;
  wire rs_wreq_n_164;
  wire rs_wreq_n_165;
  wire rs_wreq_n_166;
  wire rs_wreq_n_167;
  wire rs_wreq_n_168;
  wire rs_wreq_n_169;
  wire rs_wreq_n_17;
  wire rs_wreq_n_170;
  wire rs_wreq_n_171;
  wire rs_wreq_n_172;
  wire rs_wreq_n_173;
  wire rs_wreq_n_174;
  wire rs_wreq_n_175;
  wire rs_wreq_n_176;
  wire rs_wreq_n_177;
  wire rs_wreq_n_178;
  wire rs_wreq_n_179;
  wire rs_wreq_n_18;
  wire rs_wreq_n_180;
  wire rs_wreq_n_181;
  wire rs_wreq_n_182;
  wire rs_wreq_n_183;
  wire rs_wreq_n_184;
  wire rs_wreq_n_185;
  wire rs_wreq_n_186;
  wire rs_wreq_n_187;
  wire rs_wreq_n_188;
  wire rs_wreq_n_189;
  wire rs_wreq_n_19;
  wire rs_wreq_n_190;
  wire rs_wreq_n_191;
  wire rs_wreq_n_192;
  wire rs_wreq_n_193;
  wire rs_wreq_n_194;
  wire rs_wreq_n_195;
  wire rs_wreq_n_196;
  wire rs_wreq_n_197;
  wire rs_wreq_n_198;
  wire rs_wreq_n_199;
  wire rs_wreq_n_2;
  wire rs_wreq_n_20;
  wire rs_wreq_n_200;
  wire rs_wreq_n_201;
  wire rs_wreq_n_202;
  wire rs_wreq_n_203;
  wire rs_wreq_n_204;
  wire rs_wreq_n_205;
  wire rs_wreq_n_206;
  wire rs_wreq_n_207;
  wire rs_wreq_n_208;
  wire rs_wreq_n_209;
  wire rs_wreq_n_21;
  wire rs_wreq_n_22;
  wire rs_wreq_n_23;
  wire rs_wreq_n_24;
  wire rs_wreq_n_25;
  wire rs_wreq_n_26;
  wire rs_wreq_n_27;
  wire rs_wreq_n_28;
  wire rs_wreq_n_29;
  wire rs_wreq_n_3;
  wire rs_wreq_n_30;
  wire rs_wreq_n_31;
  wire rs_wreq_n_32;
  wire rs_wreq_n_33;
  wire rs_wreq_n_34;
  wire rs_wreq_n_35;
  wire rs_wreq_n_36;
  wire rs_wreq_n_37;
  wire rs_wreq_n_38;
  wire rs_wreq_n_39;
  wire rs_wreq_n_4;
  wire rs_wreq_n_40;
  wire rs_wreq_n_41;
  wire rs_wreq_n_42;
  wire rs_wreq_n_43;
  wire rs_wreq_n_44;
  wire rs_wreq_n_45;
  wire rs_wreq_n_46;
  wire rs_wreq_n_47;
  wire rs_wreq_n_48;
  wire rs_wreq_n_49;
  wire rs_wreq_n_5;
  wire rs_wreq_n_50;
  wire rs_wreq_n_51;
  wire rs_wreq_n_52;
  wire rs_wreq_n_53;
  wire rs_wreq_n_54;
  wire rs_wreq_n_55;
  wire rs_wreq_n_56;
  wire rs_wreq_n_57;
  wire rs_wreq_n_58;
  wire rs_wreq_n_59;
  wire rs_wreq_n_6;
  wire rs_wreq_n_60;
  wire rs_wreq_n_61;
  wire rs_wreq_n_62;
  wire rs_wreq_n_63;
  wire rs_wreq_n_64;
  wire rs_wreq_n_65;
  wire rs_wreq_n_66;
  wire rs_wreq_n_67;
  wire rs_wreq_n_68;
  wire rs_wreq_n_69;
  wire rs_wreq_n_7;
  wire rs_wreq_n_70;
  wire rs_wreq_n_71;
  wire rs_wreq_n_72;
  wire rs_wreq_n_73;
  wire rs_wreq_n_8;
  wire rs_wreq_n_84;
  wire rs_wreq_n_85;
  wire rs_wreq_n_86;
  wire rs_wreq_n_87;
  wire rs_wreq_n_88;
  wire rs_wreq_n_89;
  wire rs_wreq_n_9;
  wire rs_wreq_n_90;
  wire rs_wreq_n_91;
  wire rs_wreq_n_92;
  wire rs_wreq_n_93;
  wire rs_wreq_n_94;
  wire rs_wreq_n_95;
  wire rs_wreq_n_96;
  wire rs_wreq_n_97;
  wire rs_wreq_n_98;
  wire rs_wreq_n_99;
  wire s_ready_t_reg;
  wire [63:2]sect_addr;
  wire \sect_addr_buf_reg_n_0_[10] ;
  wire \sect_addr_buf_reg_n_0_[11] ;
  wire \sect_addr_buf_reg_n_0_[12] ;
  wire \sect_addr_buf_reg_n_0_[13] ;
  wire \sect_addr_buf_reg_n_0_[14] ;
  wire \sect_addr_buf_reg_n_0_[15] ;
  wire \sect_addr_buf_reg_n_0_[16] ;
  wire \sect_addr_buf_reg_n_0_[17] ;
  wire \sect_addr_buf_reg_n_0_[18] ;
  wire \sect_addr_buf_reg_n_0_[19] ;
  wire \sect_addr_buf_reg_n_0_[20] ;
  wire \sect_addr_buf_reg_n_0_[21] ;
  wire \sect_addr_buf_reg_n_0_[22] ;
  wire \sect_addr_buf_reg_n_0_[23] ;
  wire \sect_addr_buf_reg_n_0_[24] ;
  wire \sect_addr_buf_reg_n_0_[25] ;
  wire \sect_addr_buf_reg_n_0_[26] ;
  wire \sect_addr_buf_reg_n_0_[27] ;
  wire \sect_addr_buf_reg_n_0_[28] ;
  wire \sect_addr_buf_reg_n_0_[29] ;
  wire \sect_addr_buf_reg_n_0_[2] ;
  wire \sect_addr_buf_reg_n_0_[30] ;
  wire \sect_addr_buf_reg_n_0_[31] ;
  wire \sect_addr_buf_reg_n_0_[32] ;
  wire \sect_addr_buf_reg_n_0_[33] ;
  wire \sect_addr_buf_reg_n_0_[34] ;
  wire \sect_addr_buf_reg_n_0_[35] ;
  wire \sect_addr_buf_reg_n_0_[36] ;
  wire \sect_addr_buf_reg_n_0_[37] ;
  wire \sect_addr_buf_reg_n_0_[38] ;
  wire \sect_addr_buf_reg_n_0_[39] ;
  wire \sect_addr_buf_reg_n_0_[3] ;
  wire \sect_addr_buf_reg_n_0_[40] ;
  wire \sect_addr_buf_reg_n_0_[41] ;
  wire \sect_addr_buf_reg_n_0_[42] ;
  wire \sect_addr_buf_reg_n_0_[43] ;
  wire \sect_addr_buf_reg_n_0_[44] ;
  wire \sect_addr_buf_reg_n_0_[45] ;
  wire \sect_addr_buf_reg_n_0_[46] ;
  wire \sect_addr_buf_reg_n_0_[47] ;
  wire \sect_addr_buf_reg_n_0_[48] ;
  wire \sect_addr_buf_reg_n_0_[49] ;
  wire \sect_addr_buf_reg_n_0_[4] ;
  wire \sect_addr_buf_reg_n_0_[50] ;
  wire \sect_addr_buf_reg_n_0_[51] ;
  wire \sect_addr_buf_reg_n_0_[52] ;
  wire \sect_addr_buf_reg_n_0_[53] ;
  wire \sect_addr_buf_reg_n_0_[54] ;
  wire \sect_addr_buf_reg_n_0_[55] ;
  wire \sect_addr_buf_reg_n_0_[56] ;
  wire \sect_addr_buf_reg_n_0_[57] ;
  wire \sect_addr_buf_reg_n_0_[58] ;
  wire \sect_addr_buf_reg_n_0_[59] ;
  wire \sect_addr_buf_reg_n_0_[5] ;
  wire \sect_addr_buf_reg_n_0_[60] ;
  wire \sect_addr_buf_reg_n_0_[61] ;
  wire \sect_addr_buf_reg_n_0_[62] ;
  wire \sect_addr_buf_reg_n_0_[63] ;
  wire \sect_addr_buf_reg_n_0_[6] ;
  wire \sect_addr_buf_reg_n_0_[7] ;
  wire \sect_addr_buf_reg_n_0_[8] ;
  wire \sect_addr_buf_reg_n_0_[9] ;
  wire [51:1]sect_cnt0;
  wire sect_cnt0_carry__0_n_0;
  wire sect_cnt0_carry__0_n_1;
  wire sect_cnt0_carry__0_n_2;
  wire sect_cnt0_carry__0_n_3;
  wire sect_cnt0_carry__10_n_0;
  wire sect_cnt0_carry__10_n_1;
  wire sect_cnt0_carry__10_n_2;
  wire sect_cnt0_carry__10_n_3;
  wire sect_cnt0_carry__11_n_2;
  wire sect_cnt0_carry__11_n_3;
  wire sect_cnt0_carry__1_n_0;
  wire sect_cnt0_carry__1_n_1;
  wire sect_cnt0_carry__1_n_2;
  wire sect_cnt0_carry__1_n_3;
  wire sect_cnt0_carry__2_n_0;
  wire sect_cnt0_carry__2_n_1;
  wire sect_cnt0_carry__2_n_2;
  wire sect_cnt0_carry__2_n_3;
  wire sect_cnt0_carry__3_n_0;
  wire sect_cnt0_carry__3_n_1;
  wire sect_cnt0_carry__3_n_2;
  wire sect_cnt0_carry__3_n_3;
  wire sect_cnt0_carry__4_n_0;
  wire sect_cnt0_carry__4_n_1;
  wire sect_cnt0_carry__4_n_2;
  wire sect_cnt0_carry__4_n_3;
  wire sect_cnt0_carry__5_n_0;
  wire sect_cnt0_carry__5_n_1;
  wire sect_cnt0_carry__5_n_2;
  wire sect_cnt0_carry__5_n_3;
  wire sect_cnt0_carry__6_n_0;
  wire sect_cnt0_carry__6_n_1;
  wire sect_cnt0_carry__6_n_2;
  wire sect_cnt0_carry__6_n_3;
  wire sect_cnt0_carry__7_n_0;
  wire sect_cnt0_carry__7_n_1;
  wire sect_cnt0_carry__7_n_2;
  wire sect_cnt0_carry__7_n_3;
  wire sect_cnt0_carry__8_n_0;
  wire sect_cnt0_carry__8_n_1;
  wire sect_cnt0_carry__8_n_2;
  wire sect_cnt0_carry__8_n_3;
  wire sect_cnt0_carry__9_n_0;
  wire sect_cnt0_carry__9_n_1;
  wire sect_cnt0_carry__9_n_2;
  wire sect_cnt0_carry__9_n_3;
  wire sect_cnt0_carry_n_0;
  wire sect_cnt0_carry_n_1;
  wire sect_cnt0_carry_n_2;
  wire sect_cnt0_carry_n_3;
  wire \sect_cnt_reg_n_0_[0] ;
  wire \sect_cnt_reg_n_0_[10] ;
  wire \sect_cnt_reg_n_0_[11] ;
  wire \sect_cnt_reg_n_0_[12] ;
  wire \sect_cnt_reg_n_0_[13] ;
  wire \sect_cnt_reg_n_0_[14] ;
  wire \sect_cnt_reg_n_0_[15] ;
  wire \sect_cnt_reg_n_0_[16] ;
  wire \sect_cnt_reg_n_0_[17] ;
  wire \sect_cnt_reg_n_0_[18] ;
  wire \sect_cnt_reg_n_0_[19] ;
  wire \sect_cnt_reg_n_0_[1] ;
  wire \sect_cnt_reg_n_0_[20] ;
  wire \sect_cnt_reg_n_0_[21] ;
  wire \sect_cnt_reg_n_0_[22] ;
  wire \sect_cnt_reg_n_0_[23] ;
  wire \sect_cnt_reg_n_0_[24] ;
  wire \sect_cnt_reg_n_0_[25] ;
  wire \sect_cnt_reg_n_0_[26] ;
  wire \sect_cnt_reg_n_0_[27] ;
  wire \sect_cnt_reg_n_0_[28] ;
  wire \sect_cnt_reg_n_0_[29] ;
  wire \sect_cnt_reg_n_0_[2] ;
  wire \sect_cnt_reg_n_0_[30] ;
  wire \sect_cnt_reg_n_0_[31] ;
  wire \sect_cnt_reg_n_0_[32] ;
  wire \sect_cnt_reg_n_0_[33] ;
  wire \sect_cnt_reg_n_0_[34] ;
  wire \sect_cnt_reg_n_0_[35] ;
  wire \sect_cnt_reg_n_0_[36] ;
  wire \sect_cnt_reg_n_0_[37] ;
  wire \sect_cnt_reg_n_0_[38] ;
  wire \sect_cnt_reg_n_0_[39] ;
  wire \sect_cnt_reg_n_0_[3] ;
  wire \sect_cnt_reg_n_0_[40] ;
  wire \sect_cnt_reg_n_0_[41] ;
  wire \sect_cnt_reg_n_0_[42] ;
  wire \sect_cnt_reg_n_0_[43] ;
  wire \sect_cnt_reg_n_0_[44] ;
  wire \sect_cnt_reg_n_0_[45] ;
  wire \sect_cnt_reg_n_0_[46] ;
  wire \sect_cnt_reg_n_0_[47] ;
  wire \sect_cnt_reg_n_0_[48] ;
  wire \sect_cnt_reg_n_0_[49] ;
  wire \sect_cnt_reg_n_0_[4] ;
  wire \sect_cnt_reg_n_0_[50] ;
  wire \sect_cnt_reg_n_0_[51] ;
  wire \sect_cnt_reg_n_0_[5] ;
  wire \sect_cnt_reg_n_0_[6] ;
  wire \sect_cnt_reg_n_0_[7] ;
  wire \sect_cnt_reg_n_0_[8] ;
  wire \sect_cnt_reg_n_0_[9] ;
  wire \sect_len_buf[0]_i_1_n_0 ;
  wire \sect_len_buf[1]_i_1_n_0 ;
  wire \sect_len_buf[2]_i_1_n_0 ;
  wire \sect_len_buf[3]_i_1_n_0 ;
  wire \sect_len_buf[4]_i_1_n_0 ;
  wire \sect_len_buf[5]_i_1_n_0 ;
  wire \sect_len_buf[6]_i_1_n_0 ;
  wire \sect_len_buf[7]_i_1_n_0 ;
  wire \sect_len_buf[8]_i_1_n_0 ;
  wire \sect_len_buf[9]_i_2_n_0 ;
  wire \sect_len_buf_reg_n_0_[0] ;
  wire \sect_len_buf_reg_n_0_[1] ;
  wire \sect_len_buf_reg_n_0_[2] ;
  wire \sect_len_buf_reg_n_0_[3] ;
  wire \sect_len_buf_reg_n_0_[4] ;
  wire \sect_len_buf_reg_n_0_[5] ;
  wire \sect_len_buf_reg_n_0_[6] ;
  wire \sect_len_buf_reg_n_0_[7] ;
  wire \sect_len_buf_reg_n_0_[8] ;
  wire \sect_len_buf_reg_n_0_[9] ;
  wire \start_addr_reg_n_0_[10] ;
  wire \start_addr_reg_n_0_[11] ;
  wire \start_addr_reg_n_0_[2] ;
  wire \start_addr_reg_n_0_[3] ;
  wire \start_addr_reg_n_0_[4] ;
  wire \start_addr_reg_n_0_[5] ;
  wire \start_addr_reg_n_0_[6] ;
  wire \start_addr_reg_n_0_[7] ;
  wire \start_addr_reg_n_0_[8] ;
  wire \start_addr_reg_n_0_[9] ;
  wire ursp_ready;
  wire wreq_handling_reg_n_0;
  wire wreq_valid;
  wire wrsp_type;
  wire [0:0]\NLW_could_multi_bursts.awaddr_buf_reg[4]_i_2_O_UNCONNECTED ;
  wire [3:2]\NLW_could_multi_bursts.awaddr_buf_reg[63]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_could_multi_bursts.awaddr_buf_reg[63]_i_3_O_UNCONNECTED ;
  wire [3:0]NLW_first_sect_carry_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_first_sect_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_first_sect_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__2_O_UNCONNECTED;
  wire [3:2]NLW_last_sect_carry__3_CO_UNCONNECTED;
  wire [3:0]NLW_last_sect_carry__3_O_UNCONNECTED;
  wire [3:2]NLW_sect_cnt0_carry__11_CO_UNCONNECTED;
  wire [3:3]NLW_sect_cnt0_carry__11_O_UNCONNECTED;

  FDRE WLAST_Dummy_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_burst_n_11),
        .Q(WLAST_Dummy_reg_n_0),
        .R(SR));
  FDRE WVALID_Dummy_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_burst_n_9),
        .Q(WVALID_Dummy_reg_0),
        .R(SR));
  FDRE \beat_len_reg[0] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[2]),
        .Q(beat_len[0]),
        .R(SR));
  FDRE \beat_len_reg[1] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[3]),
        .Q(beat_len[1]),
        .R(SR));
  FDRE \beat_len_reg[2] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[4]),
        .Q(beat_len[2]),
        .R(SR));
  FDRE \beat_len_reg[3] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[5]),
        .Q(beat_len[3]),
        .R(SR));
  FDRE \beat_len_reg[4] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[6]),
        .Q(beat_len[4]),
        .R(SR));
  FDRE \beat_len_reg[5] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[7]),
        .Q(beat_len[5]),
        .R(SR));
  FDRE \beat_len_reg[6] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[8]),
        .Q(beat_len[6]),
        .R(SR));
  FDRE \beat_len_reg[7] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[9]),
        .Q(beat_len[7]),
        .R(SR));
  FDRE \beat_len_reg[8] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[10]),
        .Q(beat_len[8]),
        .R(SR));
  FDRE \beat_len_reg[9] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(p_1_in[11]),
        .Q(beat_len[9]),
        .R(SR));
  FDRE \could_multi_bursts.AWVALID_Dummy_reg 
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_resp_n_3),
        .Q(\could_multi_bursts.AWVALID_Dummy_reg_n_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[10]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[10] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[10]),
        .O(awaddr_tmp[10]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[11]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[11] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[11]),
        .O(awaddr_tmp[11]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[12]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[12] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[12]),
        .O(awaddr_tmp[12]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[13]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[13] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[13]),
        .O(awaddr_tmp[13]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[14]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[14] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[14]),
        .O(awaddr_tmp[14]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[15]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[15] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[15]),
        .O(awaddr_tmp[15]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[16]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[16] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[16]),
        .O(awaddr_tmp[16]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[17]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[17] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[17]),
        .O(awaddr_tmp[17]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[18]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[18] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[18]),
        .O(awaddr_tmp[18]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[19]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[19] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[19]),
        .O(awaddr_tmp[19]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[20]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[20] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[20]),
        .O(awaddr_tmp[20]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[21]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[21] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[21]),
        .O(awaddr_tmp[21]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[22]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[22] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[22]),
        .O(awaddr_tmp[22]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[23]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[23] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[23]),
        .O(awaddr_tmp[23]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[24]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[24] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[24]),
        .O(awaddr_tmp[24]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[25]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[25] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[25]),
        .O(awaddr_tmp[25]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[26]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[26] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[26]),
        .O(awaddr_tmp[26]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[27]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[27] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[27]),
        .O(awaddr_tmp[27]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[28]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[28] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[28]),
        .O(awaddr_tmp[28]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[29]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[29] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[29]),
        .O(awaddr_tmp[29]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[2]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[2] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[2]),
        .O(awaddr_tmp[2]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[30]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[30] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[30]),
        .O(awaddr_tmp[30]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[31]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[31] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[31]),
        .O(awaddr_tmp[31]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[32]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[32] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[32]),
        .O(awaddr_tmp[32]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[33]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[33] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[33]),
        .O(awaddr_tmp[33]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[34]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[34] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[34]),
        .O(awaddr_tmp[34]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[35]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[35] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[35]),
        .O(awaddr_tmp[35]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[36]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[36] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[36]),
        .O(awaddr_tmp[36]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[37]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[37] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[37]),
        .O(awaddr_tmp[37]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[38]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[38] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[38]),
        .O(awaddr_tmp[38]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[39]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[39] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[39]),
        .O(awaddr_tmp[39]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[3]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[3] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[3]),
        .O(awaddr_tmp[3]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[40]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[40] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[40]),
        .O(awaddr_tmp[40]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[41]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[41] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[41]),
        .O(awaddr_tmp[41]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[42]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[42] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[42]),
        .O(awaddr_tmp[42]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[43]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[43] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[43]),
        .O(awaddr_tmp[43]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[44]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[44] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[44]),
        .O(awaddr_tmp[44]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[45]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[45] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[45]),
        .O(awaddr_tmp[45]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[46]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[46] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[46]),
        .O(awaddr_tmp[46]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[47]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[47] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[47]),
        .O(awaddr_tmp[47]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[48]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[48] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[48]),
        .O(awaddr_tmp[48]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[49]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[49] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[49]),
        .O(awaddr_tmp[49]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[4]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[4] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[4]),
        .O(awaddr_tmp[4]));
  LUT4 #(
    .INIT(16'h9666)) 
    \could_multi_bursts.awaddr_buf[4]_i_3 
       (.I0(\could_multi_bursts.awaddr_buf [4]),
        .I1(\could_multi_bursts.awlen_buf [2]),
        .I2(\could_multi_bursts.awlen_buf [1]),
        .I3(\could_multi_bursts.awlen_buf [0]),
        .O(\could_multi_bursts.awaddr_buf[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \could_multi_bursts.awaddr_buf[4]_i_4 
       (.I0(\could_multi_bursts.awaddr_buf [3]),
        .I1(\could_multi_bursts.awlen_buf [1]),
        .I2(\could_multi_bursts.awlen_buf [0]),
        .O(\could_multi_bursts.awaddr_buf[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \could_multi_bursts.awaddr_buf[4]_i_5 
       (.I0(\could_multi_bursts.awaddr_buf [2]),
        .I1(\could_multi_bursts.awlen_buf [0]),
        .O(\could_multi_bursts.awaddr_buf[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[50]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[50] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[50]),
        .O(awaddr_tmp[50]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[51]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[51] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[51]),
        .O(awaddr_tmp[51]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[52]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[52] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[52]),
        .O(awaddr_tmp[52]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[53]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[53] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[53]),
        .O(awaddr_tmp[53]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[54]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[54] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[54]),
        .O(awaddr_tmp[54]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[55]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[55] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[55]),
        .O(awaddr_tmp[55]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[56]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[56] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[56]),
        .O(awaddr_tmp[56]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[57]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[57] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[57]),
        .O(awaddr_tmp[57]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[58]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[58] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[58]),
        .O(awaddr_tmp[58]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[59]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[59] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[59]),
        .O(awaddr_tmp[59]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[5]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[5] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[5]),
        .O(awaddr_tmp[5]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[60]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[60] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[60]),
        .O(awaddr_tmp[60]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[61]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[61] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[61]),
        .O(awaddr_tmp[61]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[62]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[62] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[62]),
        .O(awaddr_tmp[62]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[63]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[63] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[63]),
        .O(awaddr_tmp[63]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \could_multi_bursts.awaddr_buf[63]_i_2 
       (.I0(\could_multi_bursts.loop_cnt_reg [2]),
        .I1(\could_multi_bursts.loop_cnt_reg [3]),
        .I2(\could_multi_bursts.loop_cnt_reg [0]),
        .I3(\could_multi_bursts.loop_cnt_reg [1]),
        .I4(\could_multi_bursts.loop_cnt_reg [5]),
        .I5(\could_multi_bursts.loop_cnt_reg [4]),
        .O(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[6]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[6] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[6]),
        .O(awaddr_tmp[6]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[7]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[7] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[7]),
        .O(awaddr_tmp[7]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[8]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[8] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[8]),
        .O(awaddr_tmp[8]));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \could_multi_bursts.awaddr_buf[8]_i_3 
       (.I0(\could_multi_bursts.awaddr_buf [6]),
        .I1(\could_multi_bursts.awlen_buf [2]),
        .I2(\could_multi_bursts.awlen_buf [0]),
        .I3(\could_multi_bursts.awlen_buf [1]),
        .I4(\could_multi_bursts.awlen_buf [3]),
        .O(\could_multi_bursts.awaddr_buf[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h96666666)) 
    \could_multi_bursts.awaddr_buf[8]_i_4 
       (.I0(\could_multi_bursts.awaddr_buf [5]),
        .I1(\could_multi_bursts.awlen_buf [3]),
        .I2(\could_multi_bursts.awlen_buf [2]),
        .I3(\could_multi_bursts.awlen_buf [0]),
        .I4(\could_multi_bursts.awlen_buf [1]),
        .O(\could_multi_bursts.awaddr_buf[8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \could_multi_bursts.awaddr_buf[9]_i_1 
       (.I0(\sect_addr_buf_reg_n_0_[9] ),
        .I1(\could_multi_bursts.awaddr_buf[63]_i_2_n_0 ),
        .I2(data1[9]),
        .O(awaddr_tmp[9]));
  FDRE \could_multi_bursts.awaddr_buf_reg[10] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[10]),
        .Q(\could_multi_bursts.awaddr_buf [10]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[11] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[11]),
        .Q(\could_multi_bursts.awaddr_buf [11]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[12] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[12]),
        .Q(\could_multi_bursts.awaddr_buf [12]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[12]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[8]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[12]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[12]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[12]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\could_multi_bursts.awaddr_buf [10:9]}),
        .O(data1[12:9]),
        .S(\could_multi_bursts.awaddr_buf [12:9]));
  FDRE \could_multi_bursts.awaddr_buf_reg[13] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[13]),
        .Q(\could_multi_bursts.awaddr_buf [13]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[14] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[14]),
        .Q(\could_multi_bursts.awaddr_buf [14]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[15] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[15]),
        .Q(\could_multi_bursts.awaddr_buf [15]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[16] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[16]),
        .Q(\could_multi_bursts.awaddr_buf [16]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[16]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[12]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[16]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[16]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[16]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[16:13]),
        .S(\could_multi_bursts.awaddr_buf [16:13]));
  FDRE \could_multi_bursts.awaddr_buf_reg[17] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[17]),
        .Q(\could_multi_bursts.awaddr_buf [17]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[18] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[18]),
        .Q(\could_multi_bursts.awaddr_buf [18]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[19] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[19]),
        .Q(\could_multi_bursts.awaddr_buf [19]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[20] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[20]),
        .Q(\could_multi_bursts.awaddr_buf [20]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[20]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[16]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[20]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[20]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[20]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[20:17]),
        .S(\could_multi_bursts.awaddr_buf [20:17]));
  FDRE \could_multi_bursts.awaddr_buf_reg[21] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[21]),
        .Q(\could_multi_bursts.awaddr_buf [21]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[22] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[22]),
        .Q(\could_multi_bursts.awaddr_buf [22]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[23] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[23]),
        .Q(\could_multi_bursts.awaddr_buf [23]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[24] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[24]),
        .Q(\could_multi_bursts.awaddr_buf [24]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[24]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[20]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[24]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[24]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[24]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[24:21]),
        .S(\could_multi_bursts.awaddr_buf [24:21]));
  FDRE \could_multi_bursts.awaddr_buf_reg[25] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[25]),
        .Q(\could_multi_bursts.awaddr_buf [25]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[26] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[26]),
        .Q(\could_multi_bursts.awaddr_buf [26]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[27] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[27]),
        .Q(\could_multi_bursts.awaddr_buf [27]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[28] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[28]),
        .Q(\could_multi_bursts.awaddr_buf [28]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[28]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[24]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[28]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[28]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[28]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[28:25]),
        .S(\could_multi_bursts.awaddr_buf [28:25]));
  FDRE \could_multi_bursts.awaddr_buf_reg[29] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[29]),
        .Q(\could_multi_bursts.awaddr_buf [29]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[2] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[2]),
        .Q(\could_multi_bursts.awaddr_buf [2]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[30] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[30]),
        .Q(\could_multi_bursts.awaddr_buf [30]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[31] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[31]),
        .Q(\could_multi_bursts.awaddr_buf [31]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[32] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[32]),
        .Q(\could_multi_bursts.awaddr_buf [32]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[32]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[28]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[32]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[32]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[32]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[32]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[32:29]),
        .S(\could_multi_bursts.awaddr_buf [32:29]));
  FDRE \could_multi_bursts.awaddr_buf_reg[33] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[33]),
        .Q(\could_multi_bursts.awaddr_buf [33]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[34] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[34]),
        .Q(\could_multi_bursts.awaddr_buf [34]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[35] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[35]),
        .Q(\could_multi_bursts.awaddr_buf [35]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[36] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[36]),
        .Q(\could_multi_bursts.awaddr_buf [36]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[36]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[32]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[36]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[36]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[36]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[36]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[36:33]),
        .S(\could_multi_bursts.awaddr_buf [36:33]));
  FDRE \could_multi_bursts.awaddr_buf_reg[37] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[37]),
        .Q(\could_multi_bursts.awaddr_buf [37]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[38] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[38]),
        .Q(\could_multi_bursts.awaddr_buf [38]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[39] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[39]),
        .Q(\could_multi_bursts.awaddr_buf [39]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[3] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[3]),
        .Q(\could_multi_bursts.awaddr_buf [3]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[40] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[40]),
        .Q(\could_multi_bursts.awaddr_buf [40]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[40]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[36]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[40]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[40]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[40]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[40]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[40:37]),
        .S(\could_multi_bursts.awaddr_buf [40:37]));
  FDRE \could_multi_bursts.awaddr_buf_reg[41] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[41]),
        .Q(\could_multi_bursts.awaddr_buf [41]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[42] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[42]),
        .Q(\could_multi_bursts.awaddr_buf [42]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[43] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[43]),
        .Q(\could_multi_bursts.awaddr_buf [43]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[44] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[44]),
        .Q(\could_multi_bursts.awaddr_buf [44]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[44]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[40]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[44]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[44]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[44]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[44]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[44:41]),
        .S(\could_multi_bursts.awaddr_buf [44:41]));
  FDRE \could_multi_bursts.awaddr_buf_reg[45] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[45]),
        .Q(\could_multi_bursts.awaddr_buf [45]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[46] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[46]),
        .Q(\could_multi_bursts.awaddr_buf [46]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[47] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[47]),
        .Q(\could_multi_bursts.awaddr_buf [47]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[48] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[48]),
        .Q(\could_multi_bursts.awaddr_buf [48]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[48]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[44]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[48]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[48]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[48]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[48]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[48:45]),
        .S(\could_multi_bursts.awaddr_buf [48:45]));
  FDRE \could_multi_bursts.awaddr_buf_reg[49] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[49]),
        .Q(\could_multi_bursts.awaddr_buf [49]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[4] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[4]),
        .Q(\could_multi_bursts.awaddr_buf [4]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\could_multi_bursts.awaddr_buf_reg[4]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[4]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[4]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[4]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\could_multi_bursts.awaddr_buf [4:2],1'b0}),
        .O({data1[4:2],\NLW_could_multi_bursts.awaddr_buf_reg[4]_i_2_O_UNCONNECTED [0]}),
        .S({\could_multi_bursts.awaddr_buf[4]_i_3_n_0 ,\could_multi_bursts.awaddr_buf[4]_i_4_n_0 ,\could_multi_bursts.awaddr_buf[4]_i_5_n_0 ,1'b0}));
  FDRE \could_multi_bursts.awaddr_buf_reg[50] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[50]),
        .Q(\could_multi_bursts.awaddr_buf [50]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[51] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[51]),
        .Q(\could_multi_bursts.awaddr_buf [51]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[52] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[52]),
        .Q(\could_multi_bursts.awaddr_buf [52]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[52]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[48]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[52]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[52]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[52]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[52]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[52:49]),
        .S(\could_multi_bursts.awaddr_buf [52:49]));
  FDRE \could_multi_bursts.awaddr_buf_reg[53] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[53]),
        .Q(\could_multi_bursts.awaddr_buf [53]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[54] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[54]),
        .Q(\could_multi_bursts.awaddr_buf [54]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[55] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[55]),
        .Q(\could_multi_bursts.awaddr_buf [55]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[56] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[56]),
        .Q(\could_multi_bursts.awaddr_buf [56]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[56]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[52]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[56]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[56]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[56]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[56]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[56:53]),
        .S(\could_multi_bursts.awaddr_buf [56:53]));
  FDRE \could_multi_bursts.awaddr_buf_reg[57] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[57]),
        .Q(\could_multi_bursts.awaddr_buf [57]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[58] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[58]),
        .Q(\could_multi_bursts.awaddr_buf [58]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[59] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[59]),
        .Q(\could_multi_bursts.awaddr_buf [59]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[5] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[5]),
        .Q(\could_multi_bursts.awaddr_buf [5]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[60] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[60]),
        .Q(\could_multi_bursts.awaddr_buf [60]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[60]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[56]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[60]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[60]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[60]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[60]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data1[60:57]),
        .S(\could_multi_bursts.awaddr_buf [60:57]));
  FDRE \could_multi_bursts.awaddr_buf_reg[61] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[61]),
        .Q(\could_multi_bursts.awaddr_buf [61]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[62] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[62]),
        .Q(\could_multi_bursts.awaddr_buf [62]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[63] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[63]),
        .Q(\could_multi_bursts.awaddr_buf [63]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[63]_i_3 
       (.CI(\could_multi_bursts.awaddr_buf_reg[60]_i_2_n_0 ),
        .CO({\NLW_could_multi_bursts.awaddr_buf_reg[63]_i_3_CO_UNCONNECTED [3:2],\could_multi_bursts.awaddr_buf_reg[63]_i_3_n_2 ,\could_multi_bursts.awaddr_buf_reg[63]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_could_multi_bursts.awaddr_buf_reg[63]_i_3_O_UNCONNECTED [3],data1[63:61]}),
        .S({1'b0,\could_multi_bursts.awaddr_buf [63:61]}));
  FDRE \could_multi_bursts.awaddr_buf_reg[6] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[6]),
        .Q(\could_multi_bursts.awaddr_buf [6]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[7] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[7]),
        .Q(\could_multi_bursts.awaddr_buf [7]),
        .R(SR));
  FDRE \could_multi_bursts.awaddr_buf_reg[8] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[8]),
        .Q(\could_multi_bursts.awaddr_buf [8]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \could_multi_bursts.awaddr_buf_reg[8]_i_2 
       (.CI(\could_multi_bursts.awaddr_buf_reg[4]_i_2_n_0 ),
        .CO({\could_multi_bursts.awaddr_buf_reg[8]_i_2_n_0 ,\could_multi_bursts.awaddr_buf_reg[8]_i_2_n_1 ,\could_multi_bursts.awaddr_buf_reg[8]_i_2_n_2 ,\could_multi_bursts.awaddr_buf_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(\could_multi_bursts.awaddr_buf [8:5]),
        .O(data1[8:5]),
        .S({\could_multi_bursts.awaddr_buf [8:7],\could_multi_bursts.awaddr_buf[8]_i_3_n_0 ,\could_multi_bursts.awaddr_buf[8]_i_4_n_0 }));
  FDRE \could_multi_bursts.awaddr_buf_reg[9] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awaddr_tmp[9]),
        .Q(\could_multi_bursts.awaddr_buf [9]),
        .R(SR));
  FDRE \could_multi_bursts.awlen_buf_reg[0] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awlen_tmp[0]),
        .Q(\could_multi_bursts.awlen_buf [0]),
        .R(SR));
  FDRE \could_multi_bursts.awlen_buf_reg[1] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awlen_tmp[1]),
        .Q(\could_multi_bursts.awlen_buf [1]),
        .R(SR));
  FDRE \could_multi_bursts.awlen_buf_reg[2] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awlen_tmp[2]),
        .Q(\could_multi_bursts.awlen_buf [2]),
        .R(SR));
  FDRE \could_multi_bursts.awlen_buf_reg[3] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(awlen_tmp[3]),
        .Q(\could_multi_bursts.awlen_buf [3]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \could_multi_bursts.loop_cnt[0]_i_1 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \could_multi_bursts.loop_cnt[1]_i_1 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \could_multi_bursts.loop_cnt[2]_i_1 
       (.I0(\could_multi_bursts.loop_cnt_reg [0]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .I2(\could_multi_bursts.loop_cnt_reg [2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \could_multi_bursts.loop_cnt[3]_i_1 
       (.I0(\could_multi_bursts.loop_cnt_reg [1]),
        .I1(\could_multi_bursts.loop_cnt_reg [0]),
        .I2(\could_multi_bursts.loop_cnt_reg [2]),
        .I3(\could_multi_bursts.loop_cnt_reg [3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \could_multi_bursts.loop_cnt[4]_i_1 
       (.I0(\could_multi_bursts.loop_cnt_reg [2]),
        .I1(\could_multi_bursts.loop_cnt_reg [0]),
        .I2(\could_multi_bursts.loop_cnt_reg [1]),
        .I3(\could_multi_bursts.loop_cnt_reg [3]),
        .I4(\could_multi_bursts.loop_cnt_reg [4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \could_multi_bursts.loop_cnt[5]_i_2 
       (.I0(\could_multi_bursts.loop_cnt_reg [3]),
        .I1(\could_multi_bursts.loop_cnt_reg [1]),
        .I2(\could_multi_bursts.loop_cnt_reg [0]),
        .I3(\could_multi_bursts.loop_cnt_reg [2]),
        .I4(\could_multi_bursts.loop_cnt_reg [4]),
        .I5(\could_multi_bursts.loop_cnt_reg [5]),
        .O(p_0_in[5]));
  FDRE \could_multi_bursts.loop_cnt_reg[0] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[0]),
        .Q(\could_multi_bursts.loop_cnt_reg [0]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.loop_cnt_reg[1] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[1]),
        .Q(\could_multi_bursts.loop_cnt_reg [1]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.loop_cnt_reg[2] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[2]),
        .Q(\could_multi_bursts.loop_cnt_reg [2]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.loop_cnt_reg[3] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[3]),
        .Q(\could_multi_bursts.loop_cnt_reg [3]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.loop_cnt_reg[4] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[4]),
        .Q(\could_multi_bursts.loop_cnt_reg [4]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.loop_cnt_reg[5] 
       (.C(ap_clk),
        .CE(\could_multi_bursts.next_loop ),
        .D(p_0_in[5]),
        .Q(\could_multi_bursts.loop_cnt_reg [5]),
        .R(fifo_burst_n_15));
  FDRE \could_multi_bursts.sect_handling_reg 
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_burst_n_21),
        .Q(\could_multi_bursts.sect_handling_reg_n_0 ),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_2 
       (.I0(rs_wreq_n_134),
        .I1(rs_wreq_n_72),
        .O(\end_addr[13]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_3 
       (.I0(rs_wreq_n_135),
        .I1(rs_wreq_n_73),
        .O(\end_addr[13]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_4 
       (.I0(rs_wreq_n_136),
        .I1(p_1_in[11]),
        .O(\end_addr[13]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[13]_i_5 
       (.I0(rs_wreq_n_137),
        .I1(p_1_in[10]),
        .O(\end_addr[13]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_2 
       (.I0(rs_wreq_n_130),
        .I1(rs_wreq_n_68),
        .O(\end_addr[17]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_3 
       (.I0(rs_wreq_n_131),
        .I1(rs_wreq_n_69),
        .O(\end_addr[17]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_4 
       (.I0(rs_wreq_n_132),
        .I1(rs_wreq_n_70),
        .O(\end_addr[17]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[17]_i_5 
       (.I0(rs_wreq_n_133),
        .I1(rs_wreq_n_71),
        .O(\end_addr[17]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_2 
       (.I0(rs_wreq_n_126),
        .I1(rs_wreq_n_64),
        .O(\end_addr[21]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_3 
       (.I0(rs_wreq_n_127),
        .I1(rs_wreq_n_65),
        .O(\end_addr[21]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_4 
       (.I0(rs_wreq_n_128),
        .I1(rs_wreq_n_66),
        .O(\end_addr[21]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[21]_i_5 
       (.I0(rs_wreq_n_129),
        .I1(rs_wreq_n_67),
        .O(\end_addr[21]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_2 
       (.I0(rs_wreq_n_122),
        .I1(rs_wreq_n_60),
        .O(\end_addr[25]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_3 
       (.I0(rs_wreq_n_123),
        .I1(rs_wreq_n_61),
        .O(\end_addr[25]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_4 
       (.I0(rs_wreq_n_124),
        .I1(rs_wreq_n_62),
        .O(\end_addr[25]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[25]_i_5 
       (.I0(rs_wreq_n_125),
        .I1(rs_wreq_n_63),
        .O(\end_addr[25]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_2 
       (.I0(rs_wreq_n_118),
        .I1(rs_wreq_n_56),
        .O(\end_addr[29]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_3 
       (.I0(rs_wreq_n_119),
        .I1(rs_wreq_n_57),
        .O(\end_addr[29]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_4 
       (.I0(rs_wreq_n_120),
        .I1(rs_wreq_n_58),
        .O(\end_addr[29]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[29]_i_5 
       (.I0(rs_wreq_n_121),
        .I1(rs_wreq_n_59),
        .O(\end_addr[29]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[33]_i_2 
       (.I0(rs_wreq_n_116),
        .I1(rs_wreq_n_54),
        .O(\end_addr[33]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[33]_i_3 
       (.I0(rs_wreq_n_117),
        .I1(rs_wreq_n_55),
        .O(\end_addr[33]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_2 
       (.I0(rs_wreq_n_142),
        .I1(p_1_in[5]),
        .O(\end_addr[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_3 
       (.I0(rs_wreq_n_143),
        .I1(p_1_in[4]),
        .O(\end_addr[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_4 
       (.I0(rs_wreq_n_144),
        .I1(p_1_in[3]),
        .O(\end_addr[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[5]_i_5 
       (.I0(rs_wreq_n_145),
        .I1(p_1_in[2]),
        .O(\end_addr[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_2 
       (.I0(rs_wreq_n_138),
        .I1(p_1_in[9]),
        .O(\end_addr[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_3 
       (.I0(rs_wreq_n_139),
        .I1(p_1_in[8]),
        .O(\end_addr[9]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_4 
       (.I0(rs_wreq_n_140),
        .I1(p_1_in[7]),
        .O(\end_addr[9]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \end_addr[9]_i_5 
       (.I0(rs_wreq_n_141),
        .I1(p_1_in[6]),
        .O(\end_addr[9]_i_5_n_0 ));
  FDRE \end_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_201),
        .Q(\end_addr_reg_n_0_[10] ),
        .R(SR));
  FDRE \end_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_200),
        .Q(\end_addr_reg_n_0_[11] ),
        .R(SR));
  FDRE \end_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_199),
        .Q(p_0_in0_in[0]),
        .R(SR));
  FDRE \end_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_198),
        .Q(p_0_in0_in[1]),
        .R(SR));
  FDRE \end_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_197),
        .Q(p_0_in0_in[2]),
        .R(SR));
  FDRE \end_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_196),
        .Q(p_0_in0_in[3]),
        .R(SR));
  FDRE \end_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_195),
        .Q(p_0_in0_in[4]),
        .R(SR));
  FDRE \end_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_194),
        .Q(p_0_in0_in[5]),
        .R(SR));
  FDRE \end_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_193),
        .Q(p_0_in0_in[6]),
        .R(SR));
  FDRE \end_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_192),
        .Q(p_0_in0_in[7]),
        .R(SR));
  FDRE \end_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_191),
        .Q(p_0_in0_in[8]),
        .R(SR));
  FDRE \end_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_190),
        .Q(p_0_in0_in[9]),
        .R(SR));
  FDRE \end_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_189),
        .Q(p_0_in0_in[10]),
        .R(SR));
  FDRE \end_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_188),
        .Q(p_0_in0_in[11]),
        .R(SR));
  FDRE \end_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_187),
        .Q(p_0_in0_in[12]),
        .R(SR));
  FDRE \end_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_186),
        .Q(p_0_in0_in[13]),
        .R(SR));
  FDRE \end_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_185),
        .Q(p_0_in0_in[14]),
        .R(SR));
  FDRE \end_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_184),
        .Q(p_0_in0_in[15]),
        .R(SR));
  FDRE \end_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_183),
        .Q(p_0_in0_in[16]),
        .R(SR));
  FDRE \end_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_182),
        .Q(p_0_in0_in[17]),
        .R(SR));
  FDRE \end_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_209),
        .Q(\end_addr_reg_n_0_[2] ),
        .R(SR));
  FDRE \end_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_181),
        .Q(p_0_in0_in[18]),
        .R(SR));
  FDRE \end_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_180),
        .Q(p_0_in0_in[19]),
        .R(SR));
  FDRE \end_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_179),
        .Q(p_0_in0_in[20]),
        .R(SR));
  FDRE \end_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_178),
        .Q(p_0_in0_in[21]),
        .R(SR));
  FDRE \end_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_177),
        .Q(p_0_in0_in[22]),
        .R(SR));
  FDRE \end_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_176),
        .Q(p_0_in0_in[23]),
        .R(SR));
  FDRE \end_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_175),
        .Q(p_0_in0_in[24]),
        .R(SR));
  FDRE \end_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_174),
        .Q(p_0_in0_in[25]),
        .R(SR));
  FDRE \end_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_173),
        .Q(p_0_in0_in[26]),
        .R(SR));
  FDRE \end_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_172),
        .Q(p_0_in0_in[27]),
        .R(SR));
  FDRE \end_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_208),
        .Q(\end_addr_reg_n_0_[3] ),
        .R(SR));
  FDRE \end_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_171),
        .Q(p_0_in0_in[28]),
        .R(SR));
  FDRE \end_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_170),
        .Q(p_0_in0_in[29]),
        .R(SR));
  FDRE \end_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_169),
        .Q(p_0_in0_in[30]),
        .R(SR));
  FDRE \end_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_168),
        .Q(p_0_in0_in[31]),
        .R(SR));
  FDRE \end_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_167),
        .Q(p_0_in0_in[32]),
        .R(SR));
  FDRE \end_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_166),
        .Q(p_0_in0_in[33]),
        .R(SR));
  FDRE \end_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_165),
        .Q(p_0_in0_in[34]),
        .R(SR));
  FDRE \end_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_164),
        .Q(p_0_in0_in[35]),
        .R(SR));
  FDRE \end_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_163),
        .Q(p_0_in0_in[36]),
        .R(SR));
  FDRE \end_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_162),
        .Q(p_0_in0_in[37]),
        .R(SR));
  FDRE \end_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_207),
        .Q(\end_addr_reg_n_0_[4] ),
        .R(SR));
  FDRE \end_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_161),
        .Q(p_0_in0_in[38]),
        .R(SR));
  FDRE \end_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_160),
        .Q(p_0_in0_in[39]),
        .R(SR));
  FDRE \end_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_159),
        .Q(p_0_in0_in[40]),
        .R(SR));
  FDRE \end_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_158),
        .Q(p_0_in0_in[41]),
        .R(SR));
  FDRE \end_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_157),
        .Q(p_0_in0_in[42]),
        .R(SR));
  FDRE \end_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_156),
        .Q(p_0_in0_in[43]),
        .R(SR));
  FDRE \end_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_155),
        .Q(p_0_in0_in[44]),
        .R(SR));
  FDRE \end_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_154),
        .Q(p_0_in0_in[45]),
        .R(SR));
  FDRE \end_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_153),
        .Q(p_0_in0_in[46]),
        .R(SR));
  FDRE \end_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_152),
        .Q(p_0_in0_in[47]),
        .R(SR));
  FDRE \end_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_206),
        .Q(\end_addr_reg_n_0_[5] ),
        .R(SR));
  FDRE \end_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_151),
        .Q(p_0_in0_in[48]),
        .R(SR));
  FDRE \end_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_150),
        .Q(p_0_in0_in[49]),
        .R(SR));
  FDRE \end_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_149),
        .Q(p_0_in0_in[50]),
        .R(SR));
  FDRE \end_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_148),
        .Q(p_0_in0_in[51]),
        .R(SR));
  FDRE \end_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_205),
        .Q(\end_addr_reg_n_0_[6] ),
        .R(SR));
  FDRE \end_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_204),
        .Q(\end_addr_reg_n_0_[7] ),
        .R(SR));
  FDRE \end_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_203),
        .Q(\end_addr_reg_n_0_[8] ),
        .R(SR));
  FDRE \end_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_202),
        .Q(\end_addr_reg_n_0_[9] ),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized4 fifo_burst
       (.AWREADY_Dummy_0(AWREADY_Dummy_0),
        .CO(last_sect),
        .E(fifo_burst_n_4),
        .Q(len_cnt_reg),
        .SR(SR),
        .WLAST_Dummy_reg(WVALID_Dummy_reg_0),
        .WLAST_Dummy_reg_0(WREADY_Dummy),
        .WLAST_Dummy_reg_1(WLAST_Dummy_reg_n_0),
        .WVALID_Dummy(WVALID_Dummy),
        .WVALID_Dummy_reg(fifo_burst_n_11),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .ap_rst_n_0(ap_rst_n_0),
        .ap_rst_n_1(fifo_burst_n_14),
        .ap_rst_n_2(fifo_burst_n_15),
        .ap_rst_n_3(fifo_burst_n_16),
        .\could_multi_bursts.awlen_buf_reg[0] ({\sect_len_buf_reg_n_0_[9] ,\sect_len_buf_reg_n_0_[8] ,\sect_len_buf_reg_n_0_[7] ,\sect_len_buf_reg_n_0_[6] ,\sect_len_buf_reg_n_0_[5] ,\sect_len_buf_reg_n_0_[4] ,\sect_len_buf_reg_n_0_[3] ,\sect_len_buf_reg_n_0_[2] ,\sect_len_buf_reg_n_0_[1] ,\sect_len_buf_reg_n_0_[0] }),
        .\could_multi_bursts.awlen_buf_reg[0]_0 (\could_multi_bursts.loop_cnt_reg ),
        .\could_multi_bursts.next_loop (\could_multi_bursts.next_loop ),
        .\could_multi_bursts.sect_handling_reg (fifo_burst_n_21),
        .dout_vld_reg_0(burst_valid),
        .dout_vld_reg_1(fifo_burst_n_9),
        .dout_vld_reg_2(dout_vld_reg),
        .fifo_burst_ready(fifo_burst_ready),
        .fifo_resp_ready(fifo_resp_ready),
        .in(awlen_tmp),
        .\mOutPtr_reg[0]_0 (\could_multi_bursts.AWVALID_Dummy_reg_n_0 ),
        .\mOutPtr_reg[0]_1 (\could_multi_bursts.sect_handling_reg_n_0 ),
        .next_wreq(next_wreq),
        .p_14_in(p_14_in),
        .pop(pop),
        .\raddr_reg_reg[3] (dout_vld_reg_0),
        .\sect_addr_buf_reg[2] (first_sect),
        .\sect_len_buf_reg[5] (fifo_burst_n_8),
        .\sect_len_buf_reg[8] (fifo_burst_n_7),
        .sel(push),
        .wreq_handling_reg(fifo_burst_n_10),
        .wreq_handling_reg_0(wreq_handling_reg_n_0),
        .wreq_handling_reg_1(wreq_valid));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_fifo__parameterized1_12 fifo_resp
       (.AWREADY_Dummy_0(AWREADY_Dummy_0),
        .Q(Q),
        .SR(SR),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\could_multi_bursts.AWVALID_Dummy_reg (fifo_resp_n_3),
        .\could_multi_bursts.AWVALID_Dummy_reg_0 (\could_multi_bursts.AWVALID_Dummy_reg_n_0 ),
        .\could_multi_bursts.AWVALID_Dummy_reg_1 (\could_multi_bursts.sect_handling_reg_n_0 ),
        .\could_multi_bursts.next_loop (\could_multi_bursts.next_loop ),
        .\dout_reg[0] (fifo_burst_n_7),
        .\dout_reg[0]_0 (fifo_burst_n_8),
        .\dout_reg[0]_1 (last_sect_buf_reg_n_0),
        .dout_vld_reg_0(need_wrsp),
        .fifo_burst_ready(fifo_burst_ready),
        .fifo_resp_ready(fifo_resp_ready),
        .last_resp(last_resp),
        .resp_ready__1(resp_ready__1),
        .sel(push),
        .ursp_ready(ursp_ready),
        .wrsp_type(wrsp_type));
  CARRY4 first_sect_carry
       (.CI(1'b0),
        .CO({first_sect_carry_n_0,first_sect_carry_n_1,first_sect_carry_n_2,first_sect_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry_O_UNCONNECTED[3:0]),
        .S({first_sect_carry_i_1_n_0,first_sect_carry_i_2_n_0,first_sect_carry_i_3_n_0,first_sect_carry_i_4_n_0}));
  CARRY4 first_sect_carry__0
       (.CI(first_sect_carry_n_0),
        .CO({first_sect_carry__0_n_0,first_sect_carry__0_n_1,first_sect_carry__0_n_2,first_sect_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__0_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__0_i_1_n_0,first_sect_carry__0_i_2_n_0,first_sect_carry__0_i_3_n_0,first_sect_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_1
       (.I0(\sect_cnt_reg_n_0_[22] ),
        .I1(p_0_in_1[22]),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .I3(p_0_in_1[21]),
        .I4(p_0_in_1[23]),
        .I5(\sect_cnt_reg_n_0_[23] ),
        .O(first_sect_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_2
       (.I0(\sect_cnt_reg_n_0_[19] ),
        .I1(p_0_in_1[19]),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .I3(p_0_in_1[18]),
        .I4(p_0_in_1[20]),
        .I5(\sect_cnt_reg_n_0_[20] ),
        .O(first_sect_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_3
       (.I0(\sect_cnt_reg_n_0_[16] ),
        .I1(p_0_in_1[16]),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .I3(p_0_in_1[15]),
        .I4(p_0_in_1[17]),
        .I5(\sect_cnt_reg_n_0_[17] ),
        .O(first_sect_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__0_i_4
       (.I0(\sect_cnt_reg_n_0_[13] ),
        .I1(p_0_in_1[13]),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .I3(p_0_in_1[12]),
        .I4(p_0_in_1[14]),
        .I5(\sect_cnt_reg_n_0_[14] ),
        .O(first_sect_carry__0_i_4_n_0));
  CARRY4 first_sect_carry__1
       (.CI(first_sect_carry__0_n_0),
        .CO({first_sect_carry__1_n_0,first_sect_carry__1_n_1,first_sect_carry__1_n_2,first_sect_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__1_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__1_i_1_n_0,first_sect_carry__1_i_2_n_0,first_sect_carry__1_i_3_n_0,first_sect_carry__1_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_1
       (.I0(\sect_cnt_reg_n_0_[34] ),
        .I1(p_0_in_1[34]),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .I3(p_0_in_1[33]),
        .I4(p_0_in_1[35]),
        .I5(\sect_cnt_reg_n_0_[35] ),
        .O(first_sect_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_2
       (.I0(\sect_cnt_reg_n_0_[31] ),
        .I1(p_0_in_1[31]),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .I3(p_0_in_1[30]),
        .I4(p_0_in_1[32]),
        .I5(\sect_cnt_reg_n_0_[32] ),
        .O(first_sect_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_3
       (.I0(\sect_cnt_reg_n_0_[28] ),
        .I1(p_0_in_1[28]),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .I3(p_0_in_1[27]),
        .I4(p_0_in_1[29]),
        .I5(\sect_cnt_reg_n_0_[29] ),
        .O(first_sect_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__1_i_4
       (.I0(\sect_cnt_reg_n_0_[25] ),
        .I1(p_0_in_1[25]),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .I3(p_0_in_1[24]),
        .I4(p_0_in_1[26]),
        .I5(\sect_cnt_reg_n_0_[26] ),
        .O(first_sect_carry__1_i_4_n_0));
  CARRY4 first_sect_carry__2
       (.CI(first_sect_carry__1_n_0),
        .CO({first_sect_carry__2_n_0,first_sect_carry__2_n_1,first_sect_carry__2_n_2,first_sect_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__2_O_UNCONNECTED[3:0]),
        .S({first_sect_carry__2_i_1_n_0,first_sect_carry__2_i_2_n_0,first_sect_carry__2_i_3_n_0,first_sect_carry__2_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_1
       (.I0(\sect_cnt_reg_n_0_[46] ),
        .I1(p_0_in_1[46]),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .I3(p_0_in_1[45]),
        .I4(p_0_in_1[47]),
        .I5(\sect_cnt_reg_n_0_[47] ),
        .O(first_sect_carry__2_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_2
       (.I0(\sect_cnt_reg_n_0_[43] ),
        .I1(p_0_in_1[43]),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .I3(p_0_in_1[42]),
        .I4(p_0_in_1[44]),
        .I5(\sect_cnt_reg_n_0_[44] ),
        .O(first_sect_carry__2_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_3
       (.I0(\sect_cnt_reg_n_0_[40] ),
        .I1(p_0_in_1[40]),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .I3(p_0_in_1[39]),
        .I4(p_0_in_1[41]),
        .I5(\sect_cnt_reg_n_0_[41] ),
        .O(first_sect_carry__2_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__2_i_4
       (.I0(\sect_cnt_reg_n_0_[37] ),
        .I1(p_0_in_1[37]),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .I3(p_0_in_1[36]),
        .I4(p_0_in_1[38]),
        .I5(\sect_cnt_reg_n_0_[38] ),
        .O(first_sect_carry__2_i_4_n_0));
  CARRY4 first_sect_carry__3
       (.CI(first_sect_carry__2_n_0),
        .CO({NLW_first_sect_carry__3_CO_UNCONNECTED[3:2],first_sect,first_sect_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_first_sect_carry__3_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,first_sect_carry__3_i_1_n_0,first_sect_carry__3_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    first_sect_carry__3_i_1
       (.I0(p_0_in_1[51]),
        .I1(\sect_cnt_reg_n_0_[51] ),
        .O(first_sect_carry__3_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry__3_i_2
       (.I0(\sect_cnt_reg_n_0_[49] ),
        .I1(p_0_in_1[49]),
        .I2(\sect_cnt_reg_n_0_[48] ),
        .I3(p_0_in_1[48]),
        .I4(p_0_in_1[50]),
        .I5(\sect_cnt_reg_n_0_[50] ),
        .O(first_sect_carry__3_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_1
       (.I0(\sect_cnt_reg_n_0_[10] ),
        .I1(p_0_in_1[10]),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .I3(p_0_in_1[9]),
        .I4(p_0_in_1[11]),
        .I5(\sect_cnt_reg_n_0_[11] ),
        .O(first_sect_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_2
       (.I0(\sect_cnt_reg_n_0_[7] ),
        .I1(p_0_in_1[7]),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .I3(p_0_in_1[6]),
        .I4(p_0_in_1[8]),
        .I5(\sect_cnt_reg_n_0_[8] ),
        .O(first_sect_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_3
       (.I0(\sect_cnt_reg_n_0_[4] ),
        .I1(p_0_in_1[4]),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .I3(p_0_in_1[3]),
        .I4(p_0_in_1[5]),
        .I5(\sect_cnt_reg_n_0_[5] ),
        .O(first_sect_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    first_sect_carry_i_4
       (.I0(\sect_cnt_reg_n_0_[1] ),
        .I1(p_0_in_1[1]),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .I3(p_0_in_1[0]),
        .I4(p_0_in_1[2]),
        .I5(\sect_cnt_reg_n_0_[2] ),
        .O(first_sect_carry_i_4_n_0));
  FDRE last_sect_buf_reg
       (.C(ap_clk),
        .CE(p_14_in),
        .D(last_sect),
        .Q(last_sect_buf_reg_n_0),
        .R(SR));
  CARRY4 last_sect_carry
       (.CI(1'b0),
        .CO({last_sect_carry_n_0,last_sect_carry_n_1,last_sect_carry_n_2,last_sect_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry_O_UNCONNECTED[3:0]),
        .S({last_sect_carry_i_1_n_0,last_sect_carry_i_2_n_0,last_sect_carry_i_3_n_0,last_sect_carry_i_4_n_0}));
  CARRY4 last_sect_carry__0
       (.CI(last_sect_carry_n_0),
        .CO({last_sect_carry__0_n_0,last_sect_carry__0_n_1,last_sect_carry__0_n_2,last_sect_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__0_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__0_i_1_n_0,last_sect_carry__0_i_2_n_0,last_sect_carry__0_i_3_n_0,last_sect_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_1
       (.I0(\sect_cnt_reg_n_0_[22] ),
        .I1(p_0_in0_in[22]),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .I3(p_0_in0_in[21]),
        .I4(\sect_cnt_reg_n_0_[23] ),
        .I5(p_0_in0_in[23]),
        .O(last_sect_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_2
       (.I0(\sect_cnt_reg_n_0_[19] ),
        .I1(p_0_in0_in[19]),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .I3(p_0_in0_in[18]),
        .I4(\sect_cnt_reg_n_0_[20] ),
        .I5(p_0_in0_in[20]),
        .O(last_sect_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_3
       (.I0(\sect_cnt_reg_n_0_[16] ),
        .I1(p_0_in0_in[16]),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .I3(p_0_in0_in[15]),
        .I4(\sect_cnt_reg_n_0_[17] ),
        .I5(p_0_in0_in[17]),
        .O(last_sect_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__0_i_4
       (.I0(\sect_cnt_reg_n_0_[13] ),
        .I1(p_0_in0_in[13]),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .I3(p_0_in0_in[12]),
        .I4(\sect_cnt_reg_n_0_[14] ),
        .I5(p_0_in0_in[14]),
        .O(last_sect_carry__0_i_4_n_0));
  CARRY4 last_sect_carry__1
       (.CI(last_sect_carry__0_n_0),
        .CO({last_sect_carry__1_n_0,last_sect_carry__1_n_1,last_sect_carry__1_n_2,last_sect_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__1_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__1_i_1_n_0,last_sect_carry__1_i_2_n_0,last_sect_carry__1_i_3_n_0,last_sect_carry__1_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_1
       (.I0(\sect_cnt_reg_n_0_[34] ),
        .I1(p_0_in0_in[34]),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .I3(p_0_in0_in[33]),
        .I4(\sect_cnt_reg_n_0_[35] ),
        .I5(p_0_in0_in[35]),
        .O(last_sect_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_2
       (.I0(\sect_cnt_reg_n_0_[31] ),
        .I1(p_0_in0_in[31]),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .I3(p_0_in0_in[30]),
        .I4(\sect_cnt_reg_n_0_[32] ),
        .I5(p_0_in0_in[32]),
        .O(last_sect_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_3
       (.I0(\sect_cnt_reg_n_0_[28] ),
        .I1(p_0_in0_in[28]),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .I3(p_0_in0_in[27]),
        .I4(\sect_cnt_reg_n_0_[29] ),
        .I5(p_0_in0_in[29]),
        .O(last_sect_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__1_i_4
       (.I0(\sect_cnt_reg_n_0_[25] ),
        .I1(p_0_in0_in[25]),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .I3(p_0_in0_in[24]),
        .I4(\sect_cnt_reg_n_0_[26] ),
        .I5(p_0_in0_in[26]),
        .O(last_sect_carry__1_i_4_n_0));
  CARRY4 last_sect_carry__2
       (.CI(last_sect_carry__1_n_0),
        .CO({last_sect_carry__2_n_0,last_sect_carry__2_n_1,last_sect_carry__2_n_2,last_sect_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__2_O_UNCONNECTED[3:0]),
        .S({last_sect_carry__2_i_1_n_0,last_sect_carry__2_i_2_n_0,last_sect_carry__2_i_3_n_0,last_sect_carry__2_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_1
       (.I0(\sect_cnt_reg_n_0_[46] ),
        .I1(p_0_in0_in[46]),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .I3(p_0_in0_in[45]),
        .I4(\sect_cnt_reg_n_0_[47] ),
        .I5(p_0_in0_in[47]),
        .O(last_sect_carry__2_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_2
       (.I0(\sect_cnt_reg_n_0_[43] ),
        .I1(p_0_in0_in[43]),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .I3(p_0_in0_in[42]),
        .I4(\sect_cnt_reg_n_0_[44] ),
        .I5(p_0_in0_in[44]),
        .O(last_sect_carry__2_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_3
       (.I0(\sect_cnt_reg_n_0_[40] ),
        .I1(p_0_in0_in[40]),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .I3(p_0_in0_in[39]),
        .I4(\sect_cnt_reg_n_0_[41] ),
        .I5(p_0_in0_in[41]),
        .O(last_sect_carry__2_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry__2_i_4
       (.I0(\sect_cnt_reg_n_0_[37] ),
        .I1(p_0_in0_in[37]),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .I3(p_0_in0_in[36]),
        .I4(\sect_cnt_reg_n_0_[38] ),
        .I5(p_0_in0_in[38]),
        .O(last_sect_carry__2_i_4_n_0));
  CARRY4 last_sect_carry__3
       (.CI(last_sect_carry__2_n_0),
        .CO({NLW_last_sect_carry__3_CO_UNCONNECTED[3:2],last_sect,last_sect_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_last_sect_carry__3_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,rs_wreq_n_146,rs_wreq_n_147}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_1
       (.I0(\sect_cnt_reg_n_0_[10] ),
        .I1(p_0_in0_in[10]),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .I3(p_0_in0_in[9]),
        .I4(\sect_cnt_reg_n_0_[11] ),
        .I5(p_0_in0_in[11]),
        .O(last_sect_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_2
       (.I0(\sect_cnt_reg_n_0_[7] ),
        .I1(p_0_in0_in[7]),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .I3(p_0_in0_in[6]),
        .I4(\sect_cnt_reg_n_0_[8] ),
        .I5(p_0_in0_in[8]),
        .O(last_sect_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_3
       (.I0(\sect_cnt_reg_n_0_[4] ),
        .I1(p_0_in0_in[4]),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .I3(p_0_in0_in[3]),
        .I4(\sect_cnt_reg_n_0_[5] ),
        .I5(p_0_in0_in[5]),
        .O(last_sect_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    last_sect_carry_i_4
       (.I0(\sect_cnt_reg_n_0_[1] ),
        .I1(p_0_in0_in[1]),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .I3(p_0_in0_in[0]),
        .I4(\sect_cnt_reg_n_0_[2] ),
        .I5(p_0_in0_in[2]),
        .O(last_sect_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \len_cnt[0]_i_1 
       (.I0(len_cnt_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \len_cnt[1]_i_1 
       (.I0(len_cnt_reg[0]),
        .I1(len_cnt_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \len_cnt[2]_i_1 
       (.I0(len_cnt_reg[0]),
        .I1(len_cnt_reg[1]),
        .I2(len_cnt_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \len_cnt[3]_i_1 
       (.I0(len_cnt_reg[1]),
        .I1(len_cnt_reg[0]),
        .I2(len_cnt_reg[2]),
        .I3(len_cnt_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \len_cnt[4]_i_1 
       (.I0(len_cnt_reg[2]),
        .I1(len_cnt_reg[0]),
        .I2(len_cnt_reg[1]),
        .I3(len_cnt_reg[3]),
        .I4(len_cnt_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \len_cnt[5]_i_1 
       (.I0(len_cnt_reg[3]),
        .I1(len_cnt_reg[1]),
        .I2(len_cnt_reg[0]),
        .I3(len_cnt_reg[2]),
        .I4(len_cnt_reg[4]),
        .I5(len_cnt_reg[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \len_cnt[6]_i_1 
       (.I0(\len_cnt[7]_i_4_n_0 ),
        .I1(len_cnt_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \len_cnt[7]_i_3 
       (.I0(\len_cnt[7]_i_4_n_0 ),
        .I1(len_cnt_reg[6]),
        .I2(len_cnt_reg[7]),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \len_cnt[7]_i_4 
       (.I0(len_cnt_reg[5]),
        .I1(len_cnt_reg[3]),
        .I2(len_cnt_reg[1]),
        .I3(len_cnt_reg[0]),
        .I4(len_cnt_reg[2]),
        .I5(len_cnt_reg[4]),
        .O(\len_cnt[7]_i_4_n_0 ));
  FDRE \len_cnt_reg[0] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[0]),
        .Q(len_cnt_reg[0]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[1] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[1]),
        .Q(len_cnt_reg[1]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[2] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[2]),
        .Q(len_cnt_reg[2]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[3] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[3]),
        .Q(len_cnt_reg[3]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[4] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[4]),
        .Q(len_cnt_reg[4]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[5] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[5]),
        .Q(len_cnt_reg[5]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[6] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[6]),
        .Q(len_cnt_reg[6]),
        .R(fifo_burst_n_14));
  FDRE \len_cnt_reg[7] 
       (.C(ap_clk),
        .CE(p_18_in),
        .D(p_0_in__0[7]),
        .Q(len_cnt_reg[7]),
        .R(fifo_burst_n_14));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice__parameterized1 rs_resp
       (.Q(Q),
        .SR(SR),
        .ap_clk(ap_clk),
        .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
        .resp_ready__1(resp_ready__1),
        .s_ready_t_reg_0(s_ready_t_reg));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_reg_slice rs_wreq
       (.AWVALID_Dummy(AWVALID_Dummy),
        .D({rs_wreq_n_2,rs_wreq_n_3,rs_wreq_n_4,rs_wreq_n_5,rs_wreq_n_6,rs_wreq_n_7,rs_wreq_n_8,rs_wreq_n_9,rs_wreq_n_10,rs_wreq_n_11,rs_wreq_n_12,rs_wreq_n_13,rs_wreq_n_14,rs_wreq_n_15,rs_wreq_n_16,rs_wreq_n_17,rs_wreq_n_18,rs_wreq_n_19,rs_wreq_n_20,rs_wreq_n_21,rs_wreq_n_22,rs_wreq_n_23,rs_wreq_n_24,rs_wreq_n_25,rs_wreq_n_26,rs_wreq_n_27,rs_wreq_n_28,rs_wreq_n_29,rs_wreq_n_30,rs_wreq_n_31,rs_wreq_n_32,rs_wreq_n_33,rs_wreq_n_34,rs_wreq_n_35,rs_wreq_n_36,rs_wreq_n_37,rs_wreq_n_38,rs_wreq_n_39,rs_wreq_n_40,rs_wreq_n_41,rs_wreq_n_42,rs_wreq_n_43,rs_wreq_n_44,rs_wreq_n_45,rs_wreq_n_46,rs_wreq_n_47,rs_wreq_n_48,rs_wreq_n_49,rs_wreq_n_50,rs_wreq_n_51,rs_wreq_n_52,rs_wreq_n_53}),
        .E(E),
        .Q(wreq_valid),
        .S({rs_wreq_n_146,rs_wreq_n_147}),
        .SR(SR),
        .ap_clk(ap_clk),
        .\data_p1_reg[63]_0 ({rs_wreq_n_148,rs_wreq_n_149,rs_wreq_n_150,rs_wreq_n_151,rs_wreq_n_152,rs_wreq_n_153,rs_wreq_n_154,rs_wreq_n_155,rs_wreq_n_156,rs_wreq_n_157,rs_wreq_n_158,rs_wreq_n_159,rs_wreq_n_160,rs_wreq_n_161,rs_wreq_n_162,rs_wreq_n_163,rs_wreq_n_164,rs_wreq_n_165,rs_wreq_n_166,rs_wreq_n_167,rs_wreq_n_168,rs_wreq_n_169,rs_wreq_n_170,rs_wreq_n_171,rs_wreq_n_172,rs_wreq_n_173,rs_wreq_n_174,rs_wreq_n_175,rs_wreq_n_176,rs_wreq_n_177,rs_wreq_n_178,rs_wreq_n_179,rs_wreq_n_180,rs_wreq_n_181,rs_wreq_n_182,rs_wreq_n_183,rs_wreq_n_184,rs_wreq_n_185,rs_wreq_n_186,rs_wreq_n_187,rs_wreq_n_188,rs_wreq_n_189,rs_wreq_n_190,rs_wreq_n_191,rs_wreq_n_192,rs_wreq_n_193,rs_wreq_n_194,rs_wreq_n_195,rs_wreq_n_196,rs_wreq_n_197,rs_wreq_n_198,rs_wreq_n_199,rs_wreq_n_200,rs_wreq_n_201,rs_wreq_n_202,rs_wreq_n_203,rs_wreq_n_204,rs_wreq_n_205,rs_wreq_n_206,rs_wreq_n_207,rs_wreq_n_208,rs_wreq_n_209}),
        .\data_p1_reg[95]_0 ({rs_wreq_n_54,rs_wreq_n_55,rs_wreq_n_56,rs_wreq_n_57,rs_wreq_n_58,rs_wreq_n_59,rs_wreq_n_60,rs_wreq_n_61,rs_wreq_n_62,rs_wreq_n_63,rs_wreq_n_64,rs_wreq_n_65,rs_wreq_n_66,rs_wreq_n_67,rs_wreq_n_68,rs_wreq_n_69,rs_wreq_n_70,rs_wreq_n_71,rs_wreq_n_72,rs_wreq_n_73,p_1_in,rs_wreq_n_84,rs_wreq_n_85,rs_wreq_n_86,rs_wreq_n_87,rs_wreq_n_88,rs_wreq_n_89,rs_wreq_n_90,rs_wreq_n_91,rs_wreq_n_92,rs_wreq_n_93,rs_wreq_n_94,rs_wreq_n_95,rs_wreq_n_96,rs_wreq_n_97,rs_wreq_n_98,rs_wreq_n_99,rs_wreq_n_100,rs_wreq_n_101,rs_wreq_n_102,rs_wreq_n_103,rs_wreq_n_104,rs_wreq_n_105,rs_wreq_n_106,rs_wreq_n_107,rs_wreq_n_108,rs_wreq_n_109,rs_wreq_n_110,rs_wreq_n_111,rs_wreq_n_112,rs_wreq_n_113,rs_wreq_n_114,rs_wreq_n_115,rs_wreq_n_116,rs_wreq_n_117,rs_wreq_n_118,rs_wreq_n_119,rs_wreq_n_120,rs_wreq_n_121,rs_wreq_n_122,rs_wreq_n_123,rs_wreq_n_124,rs_wreq_n_125,rs_wreq_n_126,rs_wreq_n_127,rs_wreq_n_128,rs_wreq_n_129,rs_wreq_n_130,rs_wreq_n_131,rs_wreq_n_132,rs_wreq_n_133,rs_wreq_n_134,rs_wreq_n_135,rs_wreq_n_136,rs_wreq_n_137,rs_wreq_n_138,rs_wreq_n_139,rs_wreq_n_140,rs_wreq_n_141,rs_wreq_n_142,rs_wreq_n_143,rs_wreq_n_144,rs_wreq_n_145}),
        .\data_p2_reg[95]_0 (D),
        .\end_addr_reg[13] ({\end_addr[13]_i_2_n_0 ,\end_addr[13]_i_3_n_0 ,\end_addr[13]_i_4_n_0 ,\end_addr[13]_i_5_n_0 }),
        .\end_addr_reg[17] ({\end_addr[17]_i_2_n_0 ,\end_addr[17]_i_3_n_0 ,\end_addr[17]_i_4_n_0 ,\end_addr[17]_i_5_n_0 }),
        .\end_addr_reg[21] ({\end_addr[21]_i_2_n_0 ,\end_addr[21]_i_3_n_0 ,\end_addr[21]_i_4_n_0 ,\end_addr[21]_i_5_n_0 }),
        .\end_addr_reg[25] ({\end_addr[25]_i_2_n_0 ,\end_addr[25]_i_3_n_0 ,\end_addr[25]_i_4_n_0 ,\end_addr[25]_i_5_n_0 }),
        .\end_addr_reg[29] ({\end_addr[29]_i_2_n_0 ,\end_addr[29]_i_3_n_0 ,\end_addr[29]_i_4_n_0 ,\end_addr[29]_i_5_n_0 }),
        .\end_addr_reg[33] ({\end_addr[33]_i_2_n_0 ,\end_addr[33]_i_3_n_0 }),
        .\end_addr_reg[5] ({\end_addr[5]_i_2_n_0 ,\end_addr[5]_i_3_n_0 ,\end_addr[5]_i_4_n_0 ,\end_addr[5]_i_5_n_0 }),
        .\end_addr_reg[9] ({\end_addr[9]_i_2_n_0 ,\end_addr[9]_i_3_n_0 ,\end_addr[9]_i_4_n_0 ,\end_addr[9]_i_5_n_0 }),
        .last_sect_buf_reg({\sect_cnt_reg_n_0_[51] ,\sect_cnt_reg_n_0_[50] ,\sect_cnt_reg_n_0_[49] ,\sect_cnt_reg_n_0_[48] ,\sect_cnt_reg_n_0_[0] }),
        .last_sect_buf_reg_0(p_0_in0_in[51:48]),
        .next_wreq(next_wreq),
        .s_ready_t_reg_0(AWREADY_Dummy),
        .sect_cnt0(sect_cnt0));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[10]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[10] ),
        .O(sect_addr[10]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[11]_i_2 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[11] ),
        .O(sect_addr[11]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[12]_i_1 
       (.I0(p_0_in_1[0]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[0] ),
        .O(sect_addr[12]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[13]_i_1 
       (.I0(p_0_in_1[1]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[1] ),
        .O(sect_addr[13]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[14]_i_1 
       (.I0(p_0_in_1[2]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[2] ),
        .O(sect_addr[14]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[15]_i_1 
       (.I0(p_0_in_1[3]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[3] ),
        .O(sect_addr[15]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[16]_i_1 
       (.I0(p_0_in_1[4]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[4] ),
        .O(sect_addr[16]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[17]_i_1 
       (.I0(p_0_in_1[5]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[5] ),
        .O(sect_addr[17]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[18]_i_1 
       (.I0(p_0_in_1[6]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[6] ),
        .O(sect_addr[18]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[19]_i_1 
       (.I0(p_0_in_1[7]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[7] ),
        .O(sect_addr[19]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[20]_i_1 
       (.I0(p_0_in_1[8]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[8] ),
        .O(sect_addr[20]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[21]_i_1 
       (.I0(p_0_in_1[9]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[9] ),
        .O(sect_addr[21]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[22]_i_1 
       (.I0(p_0_in_1[10]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[10] ),
        .O(sect_addr[22]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[23]_i_1 
       (.I0(p_0_in_1[11]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[11] ),
        .O(sect_addr[23]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[24]_i_1 
       (.I0(p_0_in_1[12]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[12] ),
        .O(sect_addr[24]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[25]_i_1 
       (.I0(p_0_in_1[13]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[13] ),
        .O(sect_addr[25]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[26]_i_1 
       (.I0(p_0_in_1[14]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[14] ),
        .O(sect_addr[26]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[27]_i_1 
       (.I0(p_0_in_1[15]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[15] ),
        .O(sect_addr[27]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[28]_i_1 
       (.I0(p_0_in_1[16]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[16] ),
        .O(sect_addr[28]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[29]_i_1 
       (.I0(p_0_in_1[17]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[17] ),
        .O(sect_addr[29]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[2]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[2] ),
        .O(sect_addr[2]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[30]_i_1 
       (.I0(p_0_in_1[18]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[18] ),
        .O(sect_addr[30]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[31]_i_1 
       (.I0(p_0_in_1[19]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[19] ),
        .O(sect_addr[31]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[32]_i_1 
       (.I0(p_0_in_1[20]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[20] ),
        .O(sect_addr[32]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[33]_i_1 
       (.I0(p_0_in_1[21]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[21] ),
        .O(sect_addr[33]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[34]_i_1 
       (.I0(p_0_in_1[22]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[22] ),
        .O(sect_addr[34]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[35]_i_1 
       (.I0(p_0_in_1[23]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[23] ),
        .O(sect_addr[35]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[36]_i_1 
       (.I0(p_0_in_1[24]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[24] ),
        .O(sect_addr[36]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[37]_i_1 
       (.I0(p_0_in_1[25]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[25] ),
        .O(sect_addr[37]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[38]_i_1 
       (.I0(p_0_in_1[26]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[26] ),
        .O(sect_addr[38]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[39]_i_1 
       (.I0(p_0_in_1[27]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[27] ),
        .O(sect_addr[39]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[3]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[3] ),
        .O(sect_addr[3]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[40]_i_1 
       (.I0(p_0_in_1[28]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[28] ),
        .O(sect_addr[40]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[41]_i_1 
       (.I0(p_0_in_1[29]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[29] ),
        .O(sect_addr[41]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[42]_i_1 
       (.I0(p_0_in_1[30]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[30] ),
        .O(sect_addr[42]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[43]_i_1 
       (.I0(p_0_in_1[31]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[31] ),
        .O(sect_addr[43]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[44]_i_1 
       (.I0(p_0_in_1[32]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[32] ),
        .O(sect_addr[44]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[45]_i_1 
       (.I0(p_0_in_1[33]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[33] ),
        .O(sect_addr[45]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[46]_i_1 
       (.I0(p_0_in_1[34]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[34] ),
        .O(sect_addr[46]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[47]_i_1 
       (.I0(p_0_in_1[35]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[35] ),
        .O(sect_addr[47]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[48]_i_1 
       (.I0(p_0_in_1[36]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[36] ),
        .O(sect_addr[48]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[49]_i_1 
       (.I0(p_0_in_1[37]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[37] ),
        .O(sect_addr[49]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[4]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[4] ),
        .O(sect_addr[4]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[50]_i_1 
       (.I0(p_0_in_1[38]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[38] ),
        .O(sect_addr[50]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[51]_i_1 
       (.I0(p_0_in_1[39]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[39] ),
        .O(sect_addr[51]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[52]_i_1 
       (.I0(p_0_in_1[40]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[40] ),
        .O(sect_addr[52]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[53]_i_1 
       (.I0(p_0_in_1[41]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[41] ),
        .O(sect_addr[53]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[54]_i_1 
       (.I0(p_0_in_1[42]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[42] ),
        .O(sect_addr[54]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[55]_i_1 
       (.I0(p_0_in_1[43]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[43] ),
        .O(sect_addr[55]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[56]_i_1 
       (.I0(p_0_in_1[44]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[44] ),
        .O(sect_addr[56]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[57]_i_1 
       (.I0(p_0_in_1[45]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[45] ),
        .O(sect_addr[57]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[58]_i_1 
       (.I0(p_0_in_1[46]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[46] ),
        .O(sect_addr[58]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[59]_i_1 
       (.I0(p_0_in_1[47]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[47] ),
        .O(sect_addr[59]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[5]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[5] ),
        .O(sect_addr[5]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[60]_i_1 
       (.I0(p_0_in_1[48]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[48] ),
        .O(sect_addr[60]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[61]_i_1 
       (.I0(p_0_in_1[49]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[49] ),
        .O(sect_addr[61]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[62]_i_1 
       (.I0(p_0_in_1[50]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[50] ),
        .O(sect_addr[62]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \sect_addr_buf[63]_i_1 
       (.I0(p_0_in_1[51]),
        .I1(first_sect),
        .I2(\sect_cnt_reg_n_0_[51] ),
        .O(sect_addr[63]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[6]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[6] ),
        .O(sect_addr[6]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[7]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[7] ),
        .O(sect_addr[7]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[8]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[8] ),
        .O(sect_addr[8]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sect_addr_buf[9]_i_1 
       (.I0(first_sect),
        .I1(\start_addr_reg_n_0_[9] ),
        .O(sect_addr[9]));
  FDRE \sect_addr_buf_reg[10] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[10]),
        .Q(\sect_addr_buf_reg_n_0_[10] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[11] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[11]),
        .Q(\sect_addr_buf_reg_n_0_[11] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[12] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[12]),
        .Q(\sect_addr_buf_reg_n_0_[12] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[13] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[13]),
        .Q(\sect_addr_buf_reg_n_0_[13] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[14] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[14]),
        .Q(\sect_addr_buf_reg_n_0_[14] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[15] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[15]),
        .Q(\sect_addr_buf_reg_n_0_[15] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[16] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[16]),
        .Q(\sect_addr_buf_reg_n_0_[16] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[17] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[17]),
        .Q(\sect_addr_buf_reg_n_0_[17] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[18] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[18]),
        .Q(\sect_addr_buf_reg_n_0_[18] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[19] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[19]),
        .Q(\sect_addr_buf_reg_n_0_[19] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[20] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[20]),
        .Q(\sect_addr_buf_reg_n_0_[20] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[21] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[21]),
        .Q(\sect_addr_buf_reg_n_0_[21] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[22] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[22]),
        .Q(\sect_addr_buf_reg_n_0_[22] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[23] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[23]),
        .Q(\sect_addr_buf_reg_n_0_[23] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[24] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[24]),
        .Q(\sect_addr_buf_reg_n_0_[24] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[25] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[25]),
        .Q(\sect_addr_buf_reg_n_0_[25] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[26] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[26]),
        .Q(\sect_addr_buf_reg_n_0_[26] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[27] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[27]),
        .Q(\sect_addr_buf_reg_n_0_[27] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[28] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[28]),
        .Q(\sect_addr_buf_reg_n_0_[28] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[29] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[29]),
        .Q(\sect_addr_buf_reg_n_0_[29] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[2] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[2]),
        .Q(\sect_addr_buf_reg_n_0_[2] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[30] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[30]),
        .Q(\sect_addr_buf_reg_n_0_[30] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[31] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[31]),
        .Q(\sect_addr_buf_reg_n_0_[31] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[32] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[32]),
        .Q(\sect_addr_buf_reg_n_0_[32] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[33] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[33]),
        .Q(\sect_addr_buf_reg_n_0_[33] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[34] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[34]),
        .Q(\sect_addr_buf_reg_n_0_[34] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[35] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[35]),
        .Q(\sect_addr_buf_reg_n_0_[35] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[36] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[36]),
        .Q(\sect_addr_buf_reg_n_0_[36] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[37] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[37]),
        .Q(\sect_addr_buf_reg_n_0_[37] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[38] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[38]),
        .Q(\sect_addr_buf_reg_n_0_[38] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[39] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[39]),
        .Q(\sect_addr_buf_reg_n_0_[39] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[3] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[3]),
        .Q(\sect_addr_buf_reg_n_0_[3] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[40] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[40]),
        .Q(\sect_addr_buf_reg_n_0_[40] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[41] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[41]),
        .Q(\sect_addr_buf_reg_n_0_[41] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[42] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[42]),
        .Q(\sect_addr_buf_reg_n_0_[42] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[43] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[43]),
        .Q(\sect_addr_buf_reg_n_0_[43] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[44] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[44]),
        .Q(\sect_addr_buf_reg_n_0_[44] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[45] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[45]),
        .Q(\sect_addr_buf_reg_n_0_[45] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[46] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[46]),
        .Q(\sect_addr_buf_reg_n_0_[46] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[47] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[47]),
        .Q(\sect_addr_buf_reg_n_0_[47] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[48] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[48]),
        .Q(\sect_addr_buf_reg_n_0_[48] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[49] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[49]),
        .Q(\sect_addr_buf_reg_n_0_[49] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[4] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[4]),
        .Q(\sect_addr_buf_reg_n_0_[4] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[50] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[50]),
        .Q(\sect_addr_buf_reg_n_0_[50] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[51] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[51]),
        .Q(\sect_addr_buf_reg_n_0_[51] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[52] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[52]),
        .Q(\sect_addr_buf_reg_n_0_[52] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[53] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[53]),
        .Q(\sect_addr_buf_reg_n_0_[53] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[54] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[54]),
        .Q(\sect_addr_buf_reg_n_0_[54] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[55] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[55]),
        .Q(\sect_addr_buf_reg_n_0_[55] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[56] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[56]),
        .Q(\sect_addr_buf_reg_n_0_[56] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[57] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[57]),
        .Q(\sect_addr_buf_reg_n_0_[57] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[58] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[58]),
        .Q(\sect_addr_buf_reg_n_0_[58] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[59] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[59]),
        .Q(\sect_addr_buf_reg_n_0_[59] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[5] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[5]),
        .Q(\sect_addr_buf_reg_n_0_[5] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[60] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[60]),
        .Q(\sect_addr_buf_reg_n_0_[60] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[61] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[61]),
        .Q(\sect_addr_buf_reg_n_0_[61] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[62] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[62]),
        .Q(\sect_addr_buf_reg_n_0_[62] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[63] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[63]),
        .Q(\sect_addr_buf_reg_n_0_[63] ),
        .R(SR));
  FDRE \sect_addr_buf_reg[6] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[6]),
        .Q(\sect_addr_buf_reg_n_0_[6] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[7] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[7]),
        .Q(\sect_addr_buf_reg_n_0_[7] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[8] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[8]),
        .Q(\sect_addr_buf_reg_n_0_[8] ),
        .R(fifo_burst_n_16));
  FDRE \sect_addr_buf_reg[9] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(sect_addr[9]),
        .Q(\sect_addr_buf_reg_n_0_[9] ),
        .R(fifo_burst_n_16));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry
       (.CI(1'b0),
        .CO({sect_cnt0_carry_n_0,sect_cnt0_carry_n_1,sect_cnt0_carry_n_2,sect_cnt0_carry_n_3}),
        .CYINIT(\sect_cnt_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[4:1]),
        .S({\sect_cnt_reg_n_0_[4] ,\sect_cnt_reg_n_0_[3] ,\sect_cnt_reg_n_0_[2] ,\sect_cnt_reg_n_0_[1] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__0
       (.CI(sect_cnt0_carry_n_0),
        .CO({sect_cnt0_carry__0_n_0,sect_cnt0_carry__0_n_1,sect_cnt0_carry__0_n_2,sect_cnt0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[8:5]),
        .S({\sect_cnt_reg_n_0_[8] ,\sect_cnt_reg_n_0_[7] ,\sect_cnt_reg_n_0_[6] ,\sect_cnt_reg_n_0_[5] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__1
       (.CI(sect_cnt0_carry__0_n_0),
        .CO({sect_cnt0_carry__1_n_0,sect_cnt0_carry__1_n_1,sect_cnt0_carry__1_n_2,sect_cnt0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[12:9]),
        .S({\sect_cnt_reg_n_0_[12] ,\sect_cnt_reg_n_0_[11] ,\sect_cnt_reg_n_0_[10] ,\sect_cnt_reg_n_0_[9] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__10
       (.CI(sect_cnt0_carry__9_n_0),
        .CO({sect_cnt0_carry__10_n_0,sect_cnt0_carry__10_n_1,sect_cnt0_carry__10_n_2,sect_cnt0_carry__10_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[48:45]),
        .S({\sect_cnt_reg_n_0_[48] ,\sect_cnt_reg_n_0_[47] ,\sect_cnt_reg_n_0_[46] ,\sect_cnt_reg_n_0_[45] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__11
       (.CI(sect_cnt0_carry__10_n_0),
        .CO({NLW_sect_cnt0_carry__11_CO_UNCONNECTED[3:2],sect_cnt0_carry__11_n_2,sect_cnt0_carry__11_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sect_cnt0_carry__11_O_UNCONNECTED[3],sect_cnt0[51:49]}),
        .S({1'b0,\sect_cnt_reg_n_0_[51] ,\sect_cnt_reg_n_0_[50] ,\sect_cnt_reg_n_0_[49] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__2
       (.CI(sect_cnt0_carry__1_n_0),
        .CO({sect_cnt0_carry__2_n_0,sect_cnt0_carry__2_n_1,sect_cnt0_carry__2_n_2,sect_cnt0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[16:13]),
        .S({\sect_cnt_reg_n_0_[16] ,\sect_cnt_reg_n_0_[15] ,\sect_cnt_reg_n_0_[14] ,\sect_cnt_reg_n_0_[13] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__3
       (.CI(sect_cnt0_carry__2_n_0),
        .CO({sect_cnt0_carry__3_n_0,sect_cnt0_carry__3_n_1,sect_cnt0_carry__3_n_2,sect_cnt0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[20:17]),
        .S({\sect_cnt_reg_n_0_[20] ,\sect_cnt_reg_n_0_[19] ,\sect_cnt_reg_n_0_[18] ,\sect_cnt_reg_n_0_[17] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__4
       (.CI(sect_cnt0_carry__3_n_0),
        .CO({sect_cnt0_carry__4_n_0,sect_cnt0_carry__4_n_1,sect_cnt0_carry__4_n_2,sect_cnt0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[24:21]),
        .S({\sect_cnt_reg_n_0_[24] ,\sect_cnt_reg_n_0_[23] ,\sect_cnt_reg_n_0_[22] ,\sect_cnt_reg_n_0_[21] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__5
       (.CI(sect_cnt0_carry__4_n_0),
        .CO({sect_cnt0_carry__5_n_0,sect_cnt0_carry__5_n_1,sect_cnt0_carry__5_n_2,sect_cnt0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[28:25]),
        .S({\sect_cnt_reg_n_0_[28] ,\sect_cnt_reg_n_0_[27] ,\sect_cnt_reg_n_0_[26] ,\sect_cnt_reg_n_0_[25] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__6
       (.CI(sect_cnt0_carry__5_n_0),
        .CO({sect_cnt0_carry__6_n_0,sect_cnt0_carry__6_n_1,sect_cnt0_carry__6_n_2,sect_cnt0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[32:29]),
        .S({\sect_cnt_reg_n_0_[32] ,\sect_cnt_reg_n_0_[31] ,\sect_cnt_reg_n_0_[30] ,\sect_cnt_reg_n_0_[29] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__7
       (.CI(sect_cnt0_carry__6_n_0),
        .CO({sect_cnt0_carry__7_n_0,sect_cnt0_carry__7_n_1,sect_cnt0_carry__7_n_2,sect_cnt0_carry__7_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[36:33]),
        .S({\sect_cnt_reg_n_0_[36] ,\sect_cnt_reg_n_0_[35] ,\sect_cnt_reg_n_0_[34] ,\sect_cnt_reg_n_0_[33] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__8
       (.CI(sect_cnt0_carry__7_n_0),
        .CO({sect_cnt0_carry__8_n_0,sect_cnt0_carry__8_n_1,sect_cnt0_carry__8_n_2,sect_cnt0_carry__8_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[40:37]),
        .S({\sect_cnt_reg_n_0_[40] ,\sect_cnt_reg_n_0_[39] ,\sect_cnt_reg_n_0_[38] ,\sect_cnt_reg_n_0_[37] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 sect_cnt0_carry__9
       (.CI(sect_cnt0_carry__8_n_0),
        .CO({sect_cnt0_carry__9_n_0,sect_cnt0_carry__9_n_1,sect_cnt0_carry__9_n_2,sect_cnt0_carry__9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(sect_cnt0[44:41]),
        .S({\sect_cnt_reg_n_0_[44] ,\sect_cnt_reg_n_0_[43] ,\sect_cnt_reg_n_0_[42] ,\sect_cnt_reg_n_0_[41] }));
  FDRE \sect_cnt_reg[0] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_53),
        .Q(\sect_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \sect_cnt_reg[10] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_43),
        .Q(\sect_cnt_reg_n_0_[10] ),
        .R(SR));
  FDRE \sect_cnt_reg[11] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_42),
        .Q(\sect_cnt_reg_n_0_[11] ),
        .R(SR));
  FDRE \sect_cnt_reg[12] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_41),
        .Q(\sect_cnt_reg_n_0_[12] ),
        .R(SR));
  FDRE \sect_cnt_reg[13] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_40),
        .Q(\sect_cnt_reg_n_0_[13] ),
        .R(SR));
  FDRE \sect_cnt_reg[14] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_39),
        .Q(\sect_cnt_reg_n_0_[14] ),
        .R(SR));
  FDRE \sect_cnt_reg[15] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_38),
        .Q(\sect_cnt_reg_n_0_[15] ),
        .R(SR));
  FDRE \sect_cnt_reg[16] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_37),
        .Q(\sect_cnt_reg_n_0_[16] ),
        .R(SR));
  FDRE \sect_cnt_reg[17] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_36),
        .Q(\sect_cnt_reg_n_0_[17] ),
        .R(SR));
  FDRE \sect_cnt_reg[18] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_35),
        .Q(\sect_cnt_reg_n_0_[18] ),
        .R(SR));
  FDRE \sect_cnt_reg[19] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_34),
        .Q(\sect_cnt_reg_n_0_[19] ),
        .R(SR));
  FDRE \sect_cnt_reg[1] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_52),
        .Q(\sect_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \sect_cnt_reg[20] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_33),
        .Q(\sect_cnt_reg_n_0_[20] ),
        .R(SR));
  FDRE \sect_cnt_reg[21] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_32),
        .Q(\sect_cnt_reg_n_0_[21] ),
        .R(SR));
  FDRE \sect_cnt_reg[22] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_31),
        .Q(\sect_cnt_reg_n_0_[22] ),
        .R(SR));
  FDRE \sect_cnt_reg[23] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_30),
        .Q(\sect_cnt_reg_n_0_[23] ),
        .R(SR));
  FDRE \sect_cnt_reg[24] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_29),
        .Q(\sect_cnt_reg_n_0_[24] ),
        .R(SR));
  FDRE \sect_cnt_reg[25] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_28),
        .Q(\sect_cnt_reg_n_0_[25] ),
        .R(SR));
  FDRE \sect_cnt_reg[26] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_27),
        .Q(\sect_cnt_reg_n_0_[26] ),
        .R(SR));
  FDRE \sect_cnt_reg[27] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_26),
        .Q(\sect_cnt_reg_n_0_[27] ),
        .R(SR));
  FDRE \sect_cnt_reg[28] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_25),
        .Q(\sect_cnt_reg_n_0_[28] ),
        .R(SR));
  FDRE \sect_cnt_reg[29] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_24),
        .Q(\sect_cnt_reg_n_0_[29] ),
        .R(SR));
  FDRE \sect_cnt_reg[2] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_51),
        .Q(\sect_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \sect_cnt_reg[30] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_23),
        .Q(\sect_cnt_reg_n_0_[30] ),
        .R(SR));
  FDRE \sect_cnt_reg[31] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_22),
        .Q(\sect_cnt_reg_n_0_[31] ),
        .R(SR));
  FDRE \sect_cnt_reg[32] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_21),
        .Q(\sect_cnt_reg_n_0_[32] ),
        .R(SR));
  FDRE \sect_cnt_reg[33] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_20),
        .Q(\sect_cnt_reg_n_0_[33] ),
        .R(SR));
  FDRE \sect_cnt_reg[34] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_19),
        .Q(\sect_cnt_reg_n_0_[34] ),
        .R(SR));
  FDRE \sect_cnt_reg[35] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_18),
        .Q(\sect_cnt_reg_n_0_[35] ),
        .R(SR));
  FDRE \sect_cnt_reg[36] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_17),
        .Q(\sect_cnt_reg_n_0_[36] ),
        .R(SR));
  FDRE \sect_cnt_reg[37] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_16),
        .Q(\sect_cnt_reg_n_0_[37] ),
        .R(SR));
  FDRE \sect_cnt_reg[38] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_15),
        .Q(\sect_cnt_reg_n_0_[38] ),
        .R(SR));
  FDRE \sect_cnt_reg[39] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_14),
        .Q(\sect_cnt_reg_n_0_[39] ),
        .R(SR));
  FDRE \sect_cnt_reg[3] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_50),
        .Q(\sect_cnt_reg_n_0_[3] ),
        .R(SR));
  FDRE \sect_cnt_reg[40] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_13),
        .Q(\sect_cnt_reg_n_0_[40] ),
        .R(SR));
  FDRE \sect_cnt_reg[41] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_12),
        .Q(\sect_cnt_reg_n_0_[41] ),
        .R(SR));
  FDRE \sect_cnt_reg[42] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_11),
        .Q(\sect_cnt_reg_n_0_[42] ),
        .R(SR));
  FDRE \sect_cnt_reg[43] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_10),
        .Q(\sect_cnt_reg_n_0_[43] ),
        .R(SR));
  FDRE \sect_cnt_reg[44] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_9),
        .Q(\sect_cnt_reg_n_0_[44] ),
        .R(SR));
  FDRE \sect_cnt_reg[45] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_8),
        .Q(\sect_cnt_reg_n_0_[45] ),
        .R(SR));
  FDRE \sect_cnt_reg[46] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_7),
        .Q(\sect_cnt_reg_n_0_[46] ),
        .R(SR));
  FDRE \sect_cnt_reg[47] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_6),
        .Q(\sect_cnt_reg_n_0_[47] ),
        .R(SR));
  FDRE \sect_cnt_reg[48] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_5),
        .Q(\sect_cnt_reg_n_0_[48] ),
        .R(SR));
  FDRE \sect_cnt_reg[49] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_4),
        .Q(\sect_cnt_reg_n_0_[49] ),
        .R(SR));
  FDRE \sect_cnt_reg[4] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_49),
        .Q(\sect_cnt_reg_n_0_[4] ),
        .R(SR));
  FDRE \sect_cnt_reg[50] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_3),
        .Q(\sect_cnt_reg_n_0_[50] ),
        .R(SR));
  FDRE \sect_cnt_reg[51] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_2),
        .Q(\sect_cnt_reg_n_0_[51] ),
        .R(SR));
  FDRE \sect_cnt_reg[5] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_48),
        .Q(\sect_cnt_reg_n_0_[5] ),
        .R(SR));
  FDRE \sect_cnt_reg[6] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_47),
        .Q(\sect_cnt_reg_n_0_[6] ),
        .R(SR));
  FDRE \sect_cnt_reg[7] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_46),
        .Q(\sect_cnt_reg_n_0_[7] ),
        .R(SR));
  FDRE \sect_cnt_reg[8] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_45),
        .Q(\sect_cnt_reg_n_0_[8] ),
        .R(SR));
  FDRE \sect_cnt_reg[9] 
       (.C(ap_clk),
        .CE(fifo_burst_n_4),
        .D(rs_wreq_n_44),
        .Q(\sect_cnt_reg_n_0_[9] ),
        .R(SR));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[0]_i_1 
       (.I0(beat_len[0]),
        .I1(\start_addr_reg_n_0_[2] ),
        .I2(\end_addr_reg_n_0_[2] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[1]_i_1 
       (.I0(beat_len[1]),
        .I1(\start_addr_reg_n_0_[3] ),
        .I2(\end_addr_reg_n_0_[3] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[2]_i_1 
       (.I0(beat_len[2]),
        .I1(\start_addr_reg_n_0_[4] ),
        .I2(\end_addr_reg_n_0_[4] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[3]_i_1 
       (.I0(beat_len[3]),
        .I1(\start_addr_reg_n_0_[5] ),
        .I2(\end_addr_reg_n_0_[5] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[4]_i_1 
       (.I0(beat_len[4]),
        .I1(\start_addr_reg_n_0_[6] ),
        .I2(\end_addr_reg_n_0_[6] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[5]_i_1 
       (.I0(beat_len[5]),
        .I1(\start_addr_reg_n_0_[7] ),
        .I2(\end_addr_reg_n_0_[7] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[6]_i_1 
       (.I0(beat_len[6]),
        .I1(\start_addr_reg_n_0_[8] ),
        .I2(\end_addr_reg_n_0_[8] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[7]_i_1 
       (.I0(beat_len[7]),
        .I1(\start_addr_reg_n_0_[9] ),
        .I2(\end_addr_reg_n_0_[9] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[8]_i_1 
       (.I0(beat_len[8]),
        .I1(\start_addr_reg_n_0_[10] ),
        .I2(\end_addr_reg_n_0_[10] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAA33F0FF)) 
    \sect_len_buf[9]_i_2 
       (.I0(beat_len[9]),
        .I1(\start_addr_reg_n_0_[11] ),
        .I2(\end_addr_reg_n_0_[11] ),
        .I3(last_sect),
        .I4(first_sect),
        .O(\sect_len_buf[9]_i_2_n_0 ));
  FDRE \sect_len_buf_reg[0] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[0]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[0] ),
        .R(SR));
  FDRE \sect_len_buf_reg[1] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[1]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[1] ),
        .R(SR));
  FDRE \sect_len_buf_reg[2] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[2]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[2] ),
        .R(SR));
  FDRE \sect_len_buf_reg[3] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[3]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[3] ),
        .R(SR));
  FDRE \sect_len_buf_reg[4] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[4]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[4] ),
        .R(SR));
  FDRE \sect_len_buf_reg[5] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[5]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[5] ),
        .R(SR));
  FDRE \sect_len_buf_reg[6] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[6]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[6] ),
        .R(SR));
  FDRE \sect_len_buf_reg[7] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[7]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[7] ),
        .R(SR));
  FDRE \sect_len_buf_reg[8] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[8]_i_1_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[8] ),
        .R(SR));
  FDRE \sect_len_buf_reg[9] 
       (.C(ap_clk),
        .CE(p_14_in),
        .D(\sect_len_buf[9]_i_2_n_0 ),
        .Q(\sect_len_buf_reg_n_0_[9] ),
        .R(SR));
  FDRE \start_addr_reg[10] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_137),
        .Q(\start_addr_reg_n_0_[10] ),
        .R(SR));
  FDRE \start_addr_reg[11] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_136),
        .Q(\start_addr_reg_n_0_[11] ),
        .R(SR));
  FDRE \start_addr_reg[12] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_135),
        .Q(p_0_in_1[0]),
        .R(SR));
  FDRE \start_addr_reg[13] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_134),
        .Q(p_0_in_1[1]),
        .R(SR));
  FDRE \start_addr_reg[14] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_133),
        .Q(p_0_in_1[2]),
        .R(SR));
  FDRE \start_addr_reg[15] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_132),
        .Q(p_0_in_1[3]),
        .R(SR));
  FDRE \start_addr_reg[16] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_131),
        .Q(p_0_in_1[4]),
        .R(SR));
  FDRE \start_addr_reg[17] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_130),
        .Q(p_0_in_1[5]),
        .R(SR));
  FDRE \start_addr_reg[18] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_129),
        .Q(p_0_in_1[6]),
        .R(SR));
  FDRE \start_addr_reg[19] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_128),
        .Q(p_0_in_1[7]),
        .R(SR));
  FDRE \start_addr_reg[20] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_127),
        .Q(p_0_in_1[8]),
        .R(SR));
  FDRE \start_addr_reg[21] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_126),
        .Q(p_0_in_1[9]),
        .R(SR));
  FDRE \start_addr_reg[22] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_125),
        .Q(p_0_in_1[10]),
        .R(SR));
  FDRE \start_addr_reg[23] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_124),
        .Q(p_0_in_1[11]),
        .R(SR));
  FDRE \start_addr_reg[24] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_123),
        .Q(p_0_in_1[12]),
        .R(SR));
  FDRE \start_addr_reg[25] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_122),
        .Q(p_0_in_1[13]),
        .R(SR));
  FDRE \start_addr_reg[26] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_121),
        .Q(p_0_in_1[14]),
        .R(SR));
  FDRE \start_addr_reg[27] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_120),
        .Q(p_0_in_1[15]),
        .R(SR));
  FDRE \start_addr_reg[28] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_119),
        .Q(p_0_in_1[16]),
        .R(SR));
  FDRE \start_addr_reg[29] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_118),
        .Q(p_0_in_1[17]),
        .R(SR));
  FDRE \start_addr_reg[2] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_145),
        .Q(\start_addr_reg_n_0_[2] ),
        .R(SR));
  FDRE \start_addr_reg[30] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_117),
        .Q(p_0_in_1[18]),
        .R(SR));
  FDRE \start_addr_reg[31] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_116),
        .Q(p_0_in_1[19]),
        .R(SR));
  FDRE \start_addr_reg[32] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_115),
        .Q(p_0_in_1[20]),
        .R(SR));
  FDRE \start_addr_reg[33] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_114),
        .Q(p_0_in_1[21]),
        .R(SR));
  FDRE \start_addr_reg[34] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_113),
        .Q(p_0_in_1[22]),
        .R(SR));
  FDRE \start_addr_reg[35] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_112),
        .Q(p_0_in_1[23]),
        .R(SR));
  FDRE \start_addr_reg[36] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_111),
        .Q(p_0_in_1[24]),
        .R(SR));
  FDRE \start_addr_reg[37] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_110),
        .Q(p_0_in_1[25]),
        .R(SR));
  FDRE \start_addr_reg[38] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_109),
        .Q(p_0_in_1[26]),
        .R(SR));
  FDRE \start_addr_reg[39] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_108),
        .Q(p_0_in_1[27]),
        .R(SR));
  FDRE \start_addr_reg[3] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_144),
        .Q(\start_addr_reg_n_0_[3] ),
        .R(SR));
  FDRE \start_addr_reg[40] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_107),
        .Q(p_0_in_1[28]),
        .R(SR));
  FDRE \start_addr_reg[41] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_106),
        .Q(p_0_in_1[29]),
        .R(SR));
  FDRE \start_addr_reg[42] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_105),
        .Q(p_0_in_1[30]),
        .R(SR));
  FDRE \start_addr_reg[43] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_104),
        .Q(p_0_in_1[31]),
        .R(SR));
  FDRE \start_addr_reg[44] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_103),
        .Q(p_0_in_1[32]),
        .R(SR));
  FDRE \start_addr_reg[45] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_102),
        .Q(p_0_in_1[33]),
        .R(SR));
  FDRE \start_addr_reg[46] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_101),
        .Q(p_0_in_1[34]),
        .R(SR));
  FDRE \start_addr_reg[47] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_100),
        .Q(p_0_in_1[35]),
        .R(SR));
  FDRE \start_addr_reg[48] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_99),
        .Q(p_0_in_1[36]),
        .R(SR));
  FDRE \start_addr_reg[49] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_98),
        .Q(p_0_in_1[37]),
        .R(SR));
  FDRE \start_addr_reg[4] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_143),
        .Q(\start_addr_reg_n_0_[4] ),
        .R(SR));
  FDRE \start_addr_reg[50] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_97),
        .Q(p_0_in_1[38]),
        .R(SR));
  FDRE \start_addr_reg[51] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_96),
        .Q(p_0_in_1[39]),
        .R(SR));
  FDRE \start_addr_reg[52] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_95),
        .Q(p_0_in_1[40]),
        .R(SR));
  FDRE \start_addr_reg[53] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_94),
        .Q(p_0_in_1[41]),
        .R(SR));
  FDRE \start_addr_reg[54] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_93),
        .Q(p_0_in_1[42]),
        .R(SR));
  FDRE \start_addr_reg[55] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_92),
        .Q(p_0_in_1[43]),
        .R(SR));
  FDRE \start_addr_reg[56] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_91),
        .Q(p_0_in_1[44]),
        .R(SR));
  FDRE \start_addr_reg[57] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_90),
        .Q(p_0_in_1[45]),
        .R(SR));
  FDRE \start_addr_reg[58] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_89),
        .Q(p_0_in_1[46]),
        .R(SR));
  FDRE \start_addr_reg[59] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_88),
        .Q(p_0_in_1[47]),
        .R(SR));
  FDRE \start_addr_reg[5] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_142),
        .Q(\start_addr_reg_n_0_[5] ),
        .R(SR));
  FDRE \start_addr_reg[60] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_87),
        .Q(p_0_in_1[48]),
        .R(SR));
  FDRE \start_addr_reg[61] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_86),
        .Q(p_0_in_1[49]),
        .R(SR));
  FDRE \start_addr_reg[62] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_85),
        .Q(p_0_in_1[50]),
        .R(SR));
  FDRE \start_addr_reg[63] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_84),
        .Q(p_0_in_1[51]),
        .R(SR));
  FDRE \start_addr_reg[6] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_141),
        .Q(\start_addr_reg_n_0_[6] ),
        .R(SR));
  FDRE \start_addr_reg[7] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_140),
        .Q(\start_addr_reg_n_0_[7] ),
        .R(SR));
  FDRE \start_addr_reg[8] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_139),
        .Q(\start_addr_reg_n_0_[8] ),
        .R(SR));
  FDRE \start_addr_reg[9] 
       (.C(ap_clk),
        .CE(next_wreq),
        .D(rs_wreq_n_138),
        .Q(\start_addr_reg_n_0_[9] ),
        .R(SR));
  FDRE wreq_handling_reg
       (.C(ap_clk),
        .CE(1'b1),
        .D(fifo_burst_n_10),
        .Q(wreq_handling_reg_n_0),
        .R(SR));
  design_1_fir_n11_maxi_0_0_fir_n11_maxi_gmem_m_axi_throttle wreq_throttle
       (.AWREADY_Dummy_0(AWREADY_Dummy_0),
        .E(p_18_in),
        .SR(SR),
        .WVALID_Dummy(WVALID_Dummy),
        .ap_clk(ap_clk),
        .ap_rst_n(ap_rst_n),
        .\data_p1_reg[67] (\data_p1_reg[67] ),
        .dout(dout),
        .\dout_reg[0] (\could_multi_bursts.sect_handling_reg_n_0 ),
        .\dout_reg[36] (\dout_reg[36] ),
        .\dout_reg[36]_0 (WLAST_Dummy_reg_n_0),
        .dout_vld_reg(burst_valid),
        .dout_vld_reg_0(dout_vld_reg_0),
        .empty_n_reg(empty_n_reg),
        .empty_n_reg_0(empty_n_reg_0),
        .fifo_burst_ready(fifo_burst_ready),
        .fifo_resp_ready(fifo_resp_ready),
        .full_n_reg(WREADY_Dummy),
        .in({\could_multi_bursts.awlen_buf ,\could_multi_bursts.awaddr_buf }),
        .\last_cnt_reg[1]_0 (WVALID_Dummy_reg_0),
        .\mOutPtr_reg[1] (\could_multi_bursts.AWVALID_Dummy_reg_n_0 ),
        .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
        .m_axi_gmem_AWVALID(m_axi_gmem_AWVALID),
        .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
        .m_axi_gmem_WVALID(m_axi_gmem_WVALID),
        .sel(push));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1
   (an32ShiftReg_00,
    D,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0,
    ap_enable_reg_pp0_iter2,
    tmp_product_0,
    gmem_WREADY,
    tmp_product_1,
    gmem_RVALID);
  output an32ShiftReg_00;
  output [31:0]D;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;
  input ap_enable_reg_pp0_iter2;
  input tmp_product_0;
  input gmem_WREADY;
  input tmp_product_1;
  input gmem_RVALID;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_00;
  wire ap_clk;
  wire ap_enable_reg_pp0_iter2;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire \mul_ln28_8_reg_634[19]_i_2_n_0 ;
  wire \mul_ln28_8_reg_634[19]_i_3_n_0 ;
  wire \mul_ln28_8_reg_634[19]_i_4_n_0 ;
  wire \mul_ln28_8_reg_634[23]_i_2_n_0 ;
  wire \mul_ln28_8_reg_634[23]_i_3_n_0 ;
  wire \mul_ln28_8_reg_634[23]_i_4_n_0 ;
  wire \mul_ln28_8_reg_634[23]_i_5_n_0 ;
  wire \mul_ln28_8_reg_634[27]_i_2_n_0 ;
  wire \mul_ln28_8_reg_634[27]_i_3_n_0 ;
  wire \mul_ln28_8_reg_634[27]_i_4_n_0 ;
  wire \mul_ln28_8_reg_634[27]_i_5_n_0 ;
  wire \mul_ln28_8_reg_634[31]_i_2_n_0 ;
  wire \mul_ln28_8_reg_634[31]_i_3_n_0 ;
  wire \mul_ln28_8_reg_634[31]_i_4_n_0 ;
  wire \mul_ln28_8_reg_634[31]_i_5_n_0 ;
  wire \mul_ln28_8_reg_634_reg[19]_i_1_n_0 ;
  wire \mul_ln28_8_reg_634_reg[19]_i_1_n_1 ;
  wire \mul_ln28_8_reg_634_reg[19]_i_1_n_2 ;
  wire \mul_ln28_8_reg_634_reg[19]_i_1_n_3 ;
  wire \mul_ln28_8_reg_634_reg[23]_i_1_n_0 ;
  wire \mul_ln28_8_reg_634_reg[23]_i_1_n_1 ;
  wire \mul_ln28_8_reg_634_reg[23]_i_1_n_2 ;
  wire \mul_ln28_8_reg_634_reg[23]_i_1_n_3 ;
  wire \mul_ln28_8_reg_634_reg[27]_i_1_n_0 ;
  wire \mul_ln28_8_reg_634_reg[27]_i_1_n_1 ;
  wire \mul_ln28_8_reg_634_reg[27]_i_1_n_2 ;
  wire \mul_ln28_8_reg_634_reg[27]_i_1_n_3 ;
  wire \mul_ln28_8_reg_634_reg[31]_i_1_n_1 ;
  wire \mul_ln28_8_reg_634_reg[31]_i_1_n_2 ;
  wire \mul_ln28_8_reg_634_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product_0;
  wire tmp_product_1;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_8_reg_634_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  LUT5 #(
    .INIT(32'hA2A200A2)) 
    \an32ShiftReg_0[31]_i_1 
       (.I0(ap_enable_reg_pp0_iter2),
        .I1(tmp_product_0),
        .I2(gmem_WREADY),
        .I3(tmp_product_1),
        .I4(gmem_RVALID),
        .O(an32ShiftReg_00));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_00),
        .CEB2(an32ShiftReg_00),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_8_reg_634[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_8_reg_634[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_8_reg_634[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_8_reg_634[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_8_reg_634[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_8_reg_634[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_8_reg_634[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_8_reg_634[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_8_reg_634[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_8_reg_634[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_8_reg_634[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_8_reg_634[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_8_reg_634[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_8_reg_634[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_8_reg_634[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_8_reg_634[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_8_reg_634_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_8_reg_634_reg[19]_i_1_n_0 ,\mul_ln28_8_reg_634_reg[19]_i_1_n_1 ,\mul_ln28_8_reg_634_reg[19]_i_1_n_2 ,\mul_ln28_8_reg_634_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_8_reg_634[19]_i_2_n_0 ,\mul_ln28_8_reg_634[19]_i_3_n_0 ,\mul_ln28_8_reg_634[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_8_reg_634_reg[23]_i_1 
       (.CI(\mul_ln28_8_reg_634_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_8_reg_634_reg[23]_i_1_n_0 ,\mul_ln28_8_reg_634_reg[23]_i_1_n_1 ,\mul_ln28_8_reg_634_reg[23]_i_1_n_2 ,\mul_ln28_8_reg_634_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_8_reg_634[23]_i_2_n_0 ,\mul_ln28_8_reg_634[23]_i_3_n_0 ,\mul_ln28_8_reg_634[23]_i_4_n_0 ,\mul_ln28_8_reg_634[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_8_reg_634_reg[27]_i_1 
       (.CI(\mul_ln28_8_reg_634_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_8_reg_634_reg[27]_i_1_n_0 ,\mul_ln28_8_reg_634_reg[27]_i_1_n_1 ,\mul_ln28_8_reg_634_reg[27]_i_1_n_2 ,\mul_ln28_8_reg_634_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_8_reg_634[27]_i_2_n_0 ,\mul_ln28_8_reg_634[27]_i_3_n_0 ,\mul_ln28_8_reg_634[27]_i_4_n_0 ,\mul_ln28_8_reg_634[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_8_reg_634_reg[31]_i_1 
       (.CI(\mul_ln28_8_reg_634_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_8_reg_634_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_8_reg_634_reg[31]_i_1_n_1 ,\mul_ln28_8_reg_634_reg[31]_i_1_n_2 ,\mul_ln28_8_reg_634_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_8_reg_634[31]_i_2_n_0 ,\mul_ln28_8_reg_634[31]_i_3_n_0 ,\mul_ln28_8_reg_634[31]_i_4_n_0 ,\mul_ln28_8_reg_634[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_00),
        .CEA2(an32ShiftReg_00),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_00),
        .CEB2(an32ShiftReg_00),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_0
   (ap_block_pp0_stage0_subdone,
    D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0,
    tmp_product_0,
    gmem_WREADY,
    tmp_product_1,
    gmem_RVALID);
  output ap_block_pp0_stage0_subdone;
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;
  input tmp_product_0;
  input gmem_WREADY;
  input tmp_product_1;
  input gmem_RVALID;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_block_pp0_stage0_subdone;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire \mul_ln28_6_reg_679[19]_i_2_n_0 ;
  wire \mul_ln28_6_reg_679[19]_i_3_n_0 ;
  wire \mul_ln28_6_reg_679[19]_i_4_n_0 ;
  wire \mul_ln28_6_reg_679[23]_i_2_n_0 ;
  wire \mul_ln28_6_reg_679[23]_i_3_n_0 ;
  wire \mul_ln28_6_reg_679[23]_i_4_n_0 ;
  wire \mul_ln28_6_reg_679[23]_i_5_n_0 ;
  wire \mul_ln28_6_reg_679[27]_i_2_n_0 ;
  wire \mul_ln28_6_reg_679[27]_i_3_n_0 ;
  wire \mul_ln28_6_reg_679[27]_i_4_n_0 ;
  wire \mul_ln28_6_reg_679[27]_i_5_n_0 ;
  wire \mul_ln28_6_reg_679[31]_i_2_n_0 ;
  wire \mul_ln28_6_reg_679[31]_i_3_n_0 ;
  wire \mul_ln28_6_reg_679[31]_i_4_n_0 ;
  wire \mul_ln28_6_reg_679[31]_i_5_n_0 ;
  wire \mul_ln28_6_reg_679_reg[19]_i_1_n_0 ;
  wire \mul_ln28_6_reg_679_reg[19]_i_1_n_1 ;
  wire \mul_ln28_6_reg_679_reg[19]_i_1_n_2 ;
  wire \mul_ln28_6_reg_679_reg[19]_i_1_n_3 ;
  wire \mul_ln28_6_reg_679_reg[23]_i_1_n_0 ;
  wire \mul_ln28_6_reg_679_reg[23]_i_1_n_1 ;
  wire \mul_ln28_6_reg_679_reg[23]_i_1_n_2 ;
  wire \mul_ln28_6_reg_679_reg[23]_i_1_n_3 ;
  wire \mul_ln28_6_reg_679_reg[27]_i_1_n_0 ;
  wire \mul_ln28_6_reg_679_reg[27]_i_1_n_1 ;
  wire \mul_ln28_6_reg_679_reg[27]_i_1_n_2 ;
  wire \mul_ln28_6_reg_679_reg[27]_i_1_n_3 ;
  wire \mul_ln28_6_reg_679_reg[31]_i_1_n_1 ;
  wire \mul_ln28_6_reg_679_reg[31]_i_1_n_2 ;
  wire \mul_ln28_6_reg_679_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product_0;
  wire tmp_product_1;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_6_reg_679_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  LUT4 #(
    .INIT(16'hDD0D)) 
    ap_enable_reg_pp0_iter2_i_1
       (.I0(tmp_product_0),
        .I1(gmem_WREADY),
        .I2(tmp_product_1),
        .I3(gmem_RVALID),
        .O(ap_block_pp0_stage0_subdone));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(ap_block_pp0_stage0_subdone),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_6_reg_679[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_6_reg_679[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_6_reg_679[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_6_reg_679[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_6_reg_679[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_6_reg_679[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_6_reg_679[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_6_reg_679[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_6_reg_679[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_6_reg_679[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_6_reg_679[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_6_reg_679[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_6_reg_679[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_6_reg_679[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_6_reg_679[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_6_reg_679[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_6_reg_679_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_6_reg_679_reg[19]_i_1_n_0 ,\mul_ln28_6_reg_679_reg[19]_i_1_n_1 ,\mul_ln28_6_reg_679_reg[19]_i_1_n_2 ,\mul_ln28_6_reg_679_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_6_reg_679[19]_i_2_n_0 ,\mul_ln28_6_reg_679[19]_i_3_n_0 ,\mul_ln28_6_reg_679[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_6_reg_679_reg[23]_i_1 
       (.CI(\mul_ln28_6_reg_679_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_6_reg_679_reg[23]_i_1_n_0 ,\mul_ln28_6_reg_679_reg[23]_i_1_n_1 ,\mul_ln28_6_reg_679_reg[23]_i_1_n_2 ,\mul_ln28_6_reg_679_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_6_reg_679[23]_i_2_n_0 ,\mul_ln28_6_reg_679[23]_i_3_n_0 ,\mul_ln28_6_reg_679[23]_i_4_n_0 ,\mul_ln28_6_reg_679[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_6_reg_679_reg[27]_i_1 
       (.CI(\mul_ln28_6_reg_679_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_6_reg_679_reg[27]_i_1_n_0 ,\mul_ln28_6_reg_679_reg[27]_i_1_n_1 ,\mul_ln28_6_reg_679_reg[27]_i_1_n_2 ,\mul_ln28_6_reg_679_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_6_reg_679[27]_i_2_n_0 ,\mul_ln28_6_reg_679[27]_i_3_n_0 ,\mul_ln28_6_reg_679[27]_i_4_n_0 ,\mul_ln28_6_reg_679[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_6_reg_679_reg[31]_i_1 
       (.CI(\mul_ln28_6_reg_679_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_6_reg_679_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_6_reg_679_reg[31]_i_1_n_1 ,\mul_ln28_6_reg_679_reg[31]_i_1_n_2 ,\mul_ln28_6_reg_679_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_6_reg_679[31]_i_2_n_0 ,\mul_ln28_6_reg_679[31]_i_3_n_0 ,\mul_ln28_6_reg_679[31]_i_4_n_0 ,\mul_ln28_6_reg_679[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(ap_block_pp0_stage0_subdone),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(ap_block_pp0_stage0_subdone),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_1
   (D,
    an32ShiftReg_00,
    ap_block_pp0_stage0_subdone,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_00;
  input ap_block_pp0_stage0_subdone;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_00;
  wire ap_block_pp0_stage0_subdone;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_7_reg_684[19]_i_2_n_0 ;
  wire \mul_ln28_7_reg_684[19]_i_3_n_0 ;
  wire \mul_ln28_7_reg_684[19]_i_4_n_0 ;
  wire \mul_ln28_7_reg_684[23]_i_2_n_0 ;
  wire \mul_ln28_7_reg_684[23]_i_3_n_0 ;
  wire \mul_ln28_7_reg_684[23]_i_4_n_0 ;
  wire \mul_ln28_7_reg_684[23]_i_5_n_0 ;
  wire \mul_ln28_7_reg_684[27]_i_2_n_0 ;
  wire \mul_ln28_7_reg_684[27]_i_3_n_0 ;
  wire \mul_ln28_7_reg_684[27]_i_4_n_0 ;
  wire \mul_ln28_7_reg_684[27]_i_5_n_0 ;
  wire \mul_ln28_7_reg_684[31]_i_2_n_0 ;
  wire \mul_ln28_7_reg_684[31]_i_3_n_0 ;
  wire \mul_ln28_7_reg_684[31]_i_4_n_0 ;
  wire \mul_ln28_7_reg_684[31]_i_5_n_0 ;
  wire \mul_ln28_7_reg_684_reg[19]_i_1_n_0 ;
  wire \mul_ln28_7_reg_684_reg[19]_i_1_n_1 ;
  wire \mul_ln28_7_reg_684_reg[19]_i_1_n_2 ;
  wire \mul_ln28_7_reg_684_reg[19]_i_1_n_3 ;
  wire \mul_ln28_7_reg_684_reg[23]_i_1_n_0 ;
  wire \mul_ln28_7_reg_684_reg[23]_i_1_n_1 ;
  wire \mul_ln28_7_reg_684_reg[23]_i_1_n_2 ;
  wire \mul_ln28_7_reg_684_reg[23]_i_1_n_3 ;
  wire \mul_ln28_7_reg_684_reg[27]_i_1_n_0 ;
  wire \mul_ln28_7_reg_684_reg[27]_i_1_n_1 ;
  wire \mul_ln28_7_reg_684_reg[27]_i_1_n_2 ;
  wire \mul_ln28_7_reg_684_reg[27]_i_1_n_3 ;
  wire \mul_ln28_7_reg_684_reg[31]_i_1_n_1 ;
  wire \mul_ln28_7_reg_684_reg[31]_i_1_n_2 ;
  wire \mul_ln28_7_reg_684_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_7_reg_684_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_00),
        .CEB2(ap_block_pp0_stage0_subdone),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_7_reg_684[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_7_reg_684[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_7_reg_684[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_7_reg_684[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_7_reg_684[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_7_reg_684[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_7_reg_684[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_7_reg_684[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_7_reg_684[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_7_reg_684[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_7_reg_684[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_7_reg_684[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_7_reg_684[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_7_reg_684[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_7_reg_684[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_7_reg_684[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_7_reg_684_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_7_reg_684_reg[19]_i_1_n_0 ,\mul_ln28_7_reg_684_reg[19]_i_1_n_1 ,\mul_ln28_7_reg_684_reg[19]_i_1_n_2 ,\mul_ln28_7_reg_684_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_7_reg_684[19]_i_2_n_0 ,\mul_ln28_7_reg_684[19]_i_3_n_0 ,\mul_ln28_7_reg_684[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_7_reg_684_reg[23]_i_1 
       (.CI(\mul_ln28_7_reg_684_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_7_reg_684_reg[23]_i_1_n_0 ,\mul_ln28_7_reg_684_reg[23]_i_1_n_1 ,\mul_ln28_7_reg_684_reg[23]_i_1_n_2 ,\mul_ln28_7_reg_684_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_7_reg_684[23]_i_2_n_0 ,\mul_ln28_7_reg_684[23]_i_3_n_0 ,\mul_ln28_7_reg_684[23]_i_4_n_0 ,\mul_ln28_7_reg_684[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_7_reg_684_reg[27]_i_1 
       (.CI(\mul_ln28_7_reg_684_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_7_reg_684_reg[27]_i_1_n_0 ,\mul_ln28_7_reg_684_reg[27]_i_1_n_1 ,\mul_ln28_7_reg_684_reg[27]_i_1_n_2 ,\mul_ln28_7_reg_684_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_7_reg_684[27]_i_2_n_0 ,\mul_ln28_7_reg_684[27]_i_3_n_0 ,\mul_ln28_7_reg_684[27]_i_4_n_0 ,\mul_ln28_7_reg_684[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_7_reg_684_reg[31]_i_1 
       (.CI(\mul_ln28_7_reg_684_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_7_reg_684_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_7_reg_684_reg[31]_i_1_n_1 ,\mul_ln28_7_reg_684_reg[31]_i_1_n_2 ,\mul_ln28_7_reg_684_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_7_reg_684[31]_i_2_n_0 ,\mul_ln28_7_reg_684[31]_i_3_n_0 ,\mul_ln28_7_reg_684[31]_i_4_n_0 ,\mul_ln28_7_reg_684[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_00),
        .CEA2(ap_block_pp0_stage0_subdone),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_00),
        .CEB2(ap_block_pp0_stage0_subdone),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_2
   (E,
    D,
    an32ShiftReg_00,
    an32Coef_ce0,
    Q,
    ap_clk,
    q00,
    dout,
    dout_reg_0,
    dout_reg_1,
    gmem_WREADY,
    dout_reg_2,
    gmem_RVALID);
  output [0:0]E;
  output [31:0]D;
  input an32ShiftReg_00;
  input an32Coef_ce0;
  input [0:0]Q;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout;
  input [0:0]dout_reg_0;
  input dout_reg_1;
  input gmem_WREADY;
  input dout_reg_2;
  input gmem_RVALID;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_00;
  wire ap_clk;
  wire [31:0]dout;
  wire \dout_reg[16]__0_n_0 ;
  wire [0:0]dout_reg_0;
  wire dout_reg_1;
  wire dout_reg_2;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire \mul_ln28_9_reg_639[19]_i_2_n_0 ;
  wire \mul_ln28_9_reg_639[19]_i_3_n_0 ;
  wire \mul_ln28_9_reg_639[19]_i_4_n_0 ;
  wire \mul_ln28_9_reg_639[23]_i_2_n_0 ;
  wire \mul_ln28_9_reg_639[23]_i_3_n_0 ;
  wire \mul_ln28_9_reg_639[23]_i_4_n_0 ;
  wire \mul_ln28_9_reg_639[23]_i_5_n_0 ;
  wire \mul_ln28_9_reg_639[27]_i_2_n_0 ;
  wire \mul_ln28_9_reg_639[27]_i_3_n_0 ;
  wire \mul_ln28_9_reg_639[27]_i_4_n_0 ;
  wire \mul_ln28_9_reg_639[27]_i_5_n_0 ;
  wire \mul_ln28_9_reg_639[31]_i_2_n_0 ;
  wire \mul_ln28_9_reg_639[31]_i_3_n_0 ;
  wire \mul_ln28_9_reg_639[31]_i_4_n_0 ;
  wire \mul_ln28_9_reg_639[31]_i_5_n_0 ;
  wire \mul_ln28_9_reg_639_reg[19]_i_1_n_0 ;
  wire \mul_ln28_9_reg_639_reg[19]_i_1_n_1 ;
  wire \mul_ln28_9_reg_639_reg[19]_i_1_n_2 ;
  wire \mul_ln28_9_reg_639_reg[19]_i_1_n_3 ;
  wire \mul_ln28_9_reg_639_reg[23]_i_1_n_0 ;
  wire \mul_ln28_9_reg_639_reg[23]_i_1_n_1 ;
  wire \mul_ln28_9_reg_639_reg[23]_i_1_n_2 ;
  wire \mul_ln28_9_reg_639_reg[23]_i_1_n_3 ;
  wire \mul_ln28_9_reg_639_reg[27]_i_1_n_0 ;
  wire \mul_ln28_9_reg_639_reg[27]_i_1_n_1 ;
  wire \mul_ln28_9_reg_639_reg[27]_i_1_n_2 ;
  wire \mul_ln28_9_reg_639_reg[27]_i_1_n_3 ;
  wire \mul_ln28_9_reg_639_reg[31]_i_1_n_1 ;
  wire \mul_ln28_9_reg_639_reg[31]_i_1_n_2 ;
  wire \mul_ln28_9_reg_639_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_9_reg_639_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout[31],dout[31],dout[31],dout[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(E),
        .CEB2(an32ShiftReg_00),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_9_reg_639[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_9_reg_639[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_9_reg_639[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_9_reg_639[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_9_reg_639[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_9_reg_639[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_9_reg_639[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_9_reg_639[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_9_reg_639[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_9_reg_639[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_9_reg_639[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_9_reg_639[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_9_reg_639[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_9_reg_639[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_9_reg_639[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_9_reg_639[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_9_reg_639_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_9_reg_639_reg[19]_i_1_n_0 ,\mul_ln28_9_reg_639_reg[19]_i_1_n_1 ,\mul_ln28_9_reg_639_reg[19]_i_1_n_2 ,\mul_ln28_9_reg_639_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_9_reg_639[19]_i_2_n_0 ,\mul_ln28_9_reg_639[19]_i_3_n_0 ,\mul_ln28_9_reg_639[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_9_reg_639_reg[23]_i_1 
       (.CI(\mul_ln28_9_reg_639_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_9_reg_639_reg[23]_i_1_n_0 ,\mul_ln28_9_reg_639_reg[23]_i_1_n_1 ,\mul_ln28_9_reg_639_reg[23]_i_1_n_2 ,\mul_ln28_9_reg_639_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_9_reg_639[23]_i_2_n_0 ,\mul_ln28_9_reg_639[23]_i_3_n_0 ,\mul_ln28_9_reg_639[23]_i_4_n_0 ,\mul_ln28_9_reg_639[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_9_reg_639_reg[27]_i_1 
       (.CI(\mul_ln28_9_reg_639_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_9_reg_639_reg[27]_i_1_n_0 ,\mul_ln28_9_reg_639_reg[27]_i_1_n_1 ,\mul_ln28_9_reg_639_reg[27]_i_1_n_2 ,\mul_ln28_9_reg_639_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_9_reg_639[27]_i_2_n_0 ,\mul_ln28_9_reg_639[27]_i_3_n_0 ,\mul_ln28_9_reg_639[27]_i_4_n_0 ,\mul_ln28_9_reg_639[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_9_reg_639_reg[31]_i_1 
       (.CI(\mul_ln28_9_reg_639_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_9_reg_639_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_9_reg_639_reg[31]_i_1_n_1 ,\mul_ln28_9_reg_639_reg[31]_i_1_n_2 ,\mul_ln28_9_reg_639_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_9_reg_639[31]_i_2_n_0 ,\mul_ln28_9_reg_639[31]_i_3_n_0 ,\mul_ln28_9_reg_639[31]_i_4_n_0 ,\mul_ln28_9_reg_639[31]_i_5_n_0 }));
  LUT5 #(
    .INIT(32'hA2A200A2)) 
    \n32Temp_reg_577[31]_i_1 
       (.I0(dout_reg_0),
        .I1(dout_reg_1),
        .I2(gmem_WREADY),
        .I3(dout_reg_2),
        .I4(gmem_RVALID),
        .O(E));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(E),
        .CEA2(an32ShiftReg_00),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(E),
        .CEB2(an32ShiftReg_00),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_3
   (D,
    E,
    an32Coef_ce0,
    Q,
    ap_clk,
    q00,
    dout);
  output [31:0]D;
  input [0:0]E;
  input an32Coef_ce0;
  input [0:0]Q;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire ap_clk;
  wire [31:0]dout;
  wire \dout_reg[16]__0_n_0 ;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_10_reg_644[19]_i_2_n_0 ;
  wire \mul_ln28_10_reg_644[19]_i_3_n_0 ;
  wire \mul_ln28_10_reg_644[19]_i_4_n_0 ;
  wire \mul_ln28_10_reg_644[23]_i_2_n_0 ;
  wire \mul_ln28_10_reg_644[23]_i_3_n_0 ;
  wire \mul_ln28_10_reg_644[23]_i_4_n_0 ;
  wire \mul_ln28_10_reg_644[23]_i_5_n_0 ;
  wire \mul_ln28_10_reg_644[27]_i_2_n_0 ;
  wire \mul_ln28_10_reg_644[27]_i_3_n_0 ;
  wire \mul_ln28_10_reg_644[27]_i_4_n_0 ;
  wire \mul_ln28_10_reg_644[27]_i_5_n_0 ;
  wire \mul_ln28_10_reg_644[31]_i_2_n_0 ;
  wire \mul_ln28_10_reg_644[31]_i_3_n_0 ;
  wire \mul_ln28_10_reg_644[31]_i_4_n_0 ;
  wire \mul_ln28_10_reg_644[31]_i_5_n_0 ;
  wire \mul_ln28_10_reg_644_reg[19]_i_1_n_0 ;
  wire \mul_ln28_10_reg_644_reg[19]_i_1_n_1 ;
  wire \mul_ln28_10_reg_644_reg[19]_i_1_n_2 ;
  wire \mul_ln28_10_reg_644_reg[19]_i_1_n_3 ;
  wire \mul_ln28_10_reg_644_reg[23]_i_1_n_0 ;
  wire \mul_ln28_10_reg_644_reg[23]_i_1_n_1 ;
  wire \mul_ln28_10_reg_644_reg[23]_i_1_n_2 ;
  wire \mul_ln28_10_reg_644_reg[23]_i_1_n_3 ;
  wire \mul_ln28_10_reg_644_reg[27]_i_1_n_0 ;
  wire \mul_ln28_10_reg_644_reg[27]_i_1_n_1 ;
  wire \mul_ln28_10_reg_644_reg[27]_i_1_n_2 ;
  wire \mul_ln28_10_reg_644_reg[27]_i_1_n_3 ;
  wire \mul_ln28_10_reg_644_reg[31]_i_1_n_1 ;
  wire \mul_ln28_10_reg_644_reg[31]_i_1_n_2 ;
  wire \mul_ln28_10_reg_644_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_10_reg_644_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout[31],dout[31],dout[31],dout[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(E),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_10_reg_644[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_10_reg_644[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_10_reg_644[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_10_reg_644[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_10_reg_644[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_10_reg_644[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_10_reg_644[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_10_reg_644[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_10_reg_644[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_10_reg_644[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_10_reg_644[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_10_reg_644[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_10_reg_644[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_10_reg_644[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_10_reg_644[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_10_reg_644[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_10_reg_644_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_10_reg_644_reg[19]_i_1_n_0 ,\mul_ln28_10_reg_644_reg[19]_i_1_n_1 ,\mul_ln28_10_reg_644_reg[19]_i_1_n_2 ,\mul_ln28_10_reg_644_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_10_reg_644[19]_i_2_n_0 ,\mul_ln28_10_reg_644[19]_i_3_n_0 ,\mul_ln28_10_reg_644[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_10_reg_644_reg[23]_i_1 
       (.CI(\mul_ln28_10_reg_644_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_10_reg_644_reg[23]_i_1_n_0 ,\mul_ln28_10_reg_644_reg[23]_i_1_n_1 ,\mul_ln28_10_reg_644_reg[23]_i_1_n_2 ,\mul_ln28_10_reg_644_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_10_reg_644[23]_i_2_n_0 ,\mul_ln28_10_reg_644[23]_i_3_n_0 ,\mul_ln28_10_reg_644[23]_i_4_n_0 ,\mul_ln28_10_reg_644[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_10_reg_644_reg[27]_i_1 
       (.CI(\mul_ln28_10_reg_644_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_10_reg_644_reg[27]_i_1_n_0 ,\mul_ln28_10_reg_644_reg[27]_i_1_n_1 ,\mul_ln28_10_reg_644_reg[27]_i_1_n_2 ,\mul_ln28_10_reg_644_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_10_reg_644[27]_i_2_n_0 ,\mul_ln28_10_reg_644[27]_i_3_n_0 ,\mul_ln28_10_reg_644[27]_i_4_n_0 ,\mul_ln28_10_reg_644[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_10_reg_644_reg[31]_i_1 
       (.CI(\mul_ln28_10_reg_644_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_10_reg_644_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_10_reg_644_reg[31]_i_1_n_1 ,\mul_ln28_10_reg_644_reg[31]_i_1_n_2 ,\mul_ln28_10_reg_644_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_10_reg_644[31]_i_2_n_0 ,\mul_ln28_10_reg_644[31]_i_3_n_0 ,\mul_ln28_10_reg_644[31]_i_4_n_0 ,\mul_ln28_10_reg_644[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(E),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(E),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_4
   (D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_reg_649[19]_i_2_n_0 ;
  wire \mul_ln28_reg_649[19]_i_3_n_0 ;
  wire \mul_ln28_reg_649[19]_i_4_n_0 ;
  wire \mul_ln28_reg_649[23]_i_2_n_0 ;
  wire \mul_ln28_reg_649[23]_i_3_n_0 ;
  wire \mul_ln28_reg_649[23]_i_4_n_0 ;
  wire \mul_ln28_reg_649[23]_i_5_n_0 ;
  wire \mul_ln28_reg_649[27]_i_2_n_0 ;
  wire \mul_ln28_reg_649[27]_i_3_n_0 ;
  wire \mul_ln28_reg_649[27]_i_4_n_0 ;
  wire \mul_ln28_reg_649[27]_i_5_n_0 ;
  wire \mul_ln28_reg_649[31]_i_2_n_0 ;
  wire \mul_ln28_reg_649[31]_i_3_n_0 ;
  wire \mul_ln28_reg_649[31]_i_4_n_0 ;
  wire \mul_ln28_reg_649[31]_i_5_n_0 ;
  wire \mul_ln28_reg_649_reg[19]_i_1_n_0 ;
  wire \mul_ln28_reg_649_reg[19]_i_1_n_1 ;
  wire \mul_ln28_reg_649_reg[19]_i_1_n_2 ;
  wire \mul_ln28_reg_649_reg[19]_i_1_n_3 ;
  wire \mul_ln28_reg_649_reg[23]_i_1_n_0 ;
  wire \mul_ln28_reg_649_reg[23]_i_1_n_1 ;
  wire \mul_ln28_reg_649_reg[23]_i_1_n_2 ;
  wire \mul_ln28_reg_649_reg[23]_i_1_n_3 ;
  wire \mul_ln28_reg_649_reg[27]_i_1_n_0 ;
  wire \mul_ln28_reg_649_reg[27]_i_1_n_1 ;
  wire \mul_ln28_reg_649_reg[27]_i_1_n_2 ;
  wire \mul_ln28_reg_649_reg[27]_i_1_n_3 ;
  wire \mul_ln28_reg_649_reg[31]_i_1_n_1 ;
  wire \mul_ln28_reg_649_reg[31]_i_1_n_2 ;
  wire \mul_ln28_reg_649_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_reg_649_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_reg_649[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_reg_649[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_reg_649[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_reg_649[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_reg_649[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_reg_649[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_reg_649[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_reg_649[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_reg_649[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_reg_649[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_reg_649[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_reg_649[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_reg_649[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_reg_649[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_reg_649[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_reg_649[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_reg_649_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_reg_649_reg[19]_i_1_n_0 ,\mul_ln28_reg_649_reg[19]_i_1_n_1 ,\mul_ln28_reg_649_reg[19]_i_1_n_2 ,\mul_ln28_reg_649_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_reg_649[19]_i_2_n_0 ,\mul_ln28_reg_649[19]_i_3_n_0 ,\mul_ln28_reg_649[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_reg_649_reg[23]_i_1 
       (.CI(\mul_ln28_reg_649_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_reg_649_reg[23]_i_1_n_0 ,\mul_ln28_reg_649_reg[23]_i_1_n_1 ,\mul_ln28_reg_649_reg[23]_i_1_n_2 ,\mul_ln28_reg_649_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_reg_649[23]_i_2_n_0 ,\mul_ln28_reg_649[23]_i_3_n_0 ,\mul_ln28_reg_649[23]_i_4_n_0 ,\mul_ln28_reg_649[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_reg_649_reg[27]_i_1 
       (.CI(\mul_ln28_reg_649_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_reg_649_reg[27]_i_1_n_0 ,\mul_ln28_reg_649_reg[27]_i_1_n_1 ,\mul_ln28_reg_649_reg[27]_i_1_n_2 ,\mul_ln28_reg_649_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_reg_649[27]_i_2_n_0 ,\mul_ln28_reg_649[27]_i_3_n_0 ,\mul_ln28_reg_649[27]_i_4_n_0 ,\mul_ln28_reg_649[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_reg_649_reg[31]_i_1 
       (.CI(\mul_ln28_reg_649_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_reg_649_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_reg_649_reg[31]_i_1_n_1 ,\mul_ln28_reg_649_reg[31]_i_1_n_2 ,\mul_ln28_reg_649_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_reg_649[31]_i_2_n_0 ,\mul_ln28_reg_649[31]_i_3_n_0 ,\mul_ln28_reg_649[31]_i_4_n_0 ,\mul_ln28_reg_649[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_5
   (D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_1_reg_654[19]_i_2_n_0 ;
  wire \mul_ln28_1_reg_654[19]_i_3_n_0 ;
  wire \mul_ln28_1_reg_654[19]_i_4_n_0 ;
  wire \mul_ln28_1_reg_654[23]_i_2_n_0 ;
  wire \mul_ln28_1_reg_654[23]_i_3_n_0 ;
  wire \mul_ln28_1_reg_654[23]_i_4_n_0 ;
  wire \mul_ln28_1_reg_654[23]_i_5_n_0 ;
  wire \mul_ln28_1_reg_654[27]_i_2_n_0 ;
  wire \mul_ln28_1_reg_654[27]_i_3_n_0 ;
  wire \mul_ln28_1_reg_654[27]_i_4_n_0 ;
  wire \mul_ln28_1_reg_654[27]_i_5_n_0 ;
  wire \mul_ln28_1_reg_654[31]_i_2_n_0 ;
  wire \mul_ln28_1_reg_654[31]_i_3_n_0 ;
  wire \mul_ln28_1_reg_654[31]_i_4_n_0 ;
  wire \mul_ln28_1_reg_654[31]_i_5_n_0 ;
  wire \mul_ln28_1_reg_654_reg[19]_i_1_n_0 ;
  wire \mul_ln28_1_reg_654_reg[19]_i_1_n_1 ;
  wire \mul_ln28_1_reg_654_reg[19]_i_1_n_2 ;
  wire \mul_ln28_1_reg_654_reg[19]_i_1_n_3 ;
  wire \mul_ln28_1_reg_654_reg[23]_i_1_n_0 ;
  wire \mul_ln28_1_reg_654_reg[23]_i_1_n_1 ;
  wire \mul_ln28_1_reg_654_reg[23]_i_1_n_2 ;
  wire \mul_ln28_1_reg_654_reg[23]_i_1_n_3 ;
  wire \mul_ln28_1_reg_654_reg[27]_i_1_n_0 ;
  wire \mul_ln28_1_reg_654_reg[27]_i_1_n_1 ;
  wire \mul_ln28_1_reg_654_reg[27]_i_1_n_2 ;
  wire \mul_ln28_1_reg_654_reg[27]_i_1_n_3 ;
  wire \mul_ln28_1_reg_654_reg[31]_i_1_n_1 ;
  wire \mul_ln28_1_reg_654_reg[31]_i_1_n_2 ;
  wire \mul_ln28_1_reg_654_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_1_reg_654_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_1_reg_654[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_1_reg_654[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_1_reg_654[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_1_reg_654[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_1_reg_654[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_1_reg_654[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_1_reg_654[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_1_reg_654[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_1_reg_654[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_1_reg_654[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_1_reg_654[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_1_reg_654[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_1_reg_654[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_1_reg_654[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_1_reg_654[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_1_reg_654[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_1_reg_654_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_1_reg_654_reg[19]_i_1_n_0 ,\mul_ln28_1_reg_654_reg[19]_i_1_n_1 ,\mul_ln28_1_reg_654_reg[19]_i_1_n_2 ,\mul_ln28_1_reg_654_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_1_reg_654[19]_i_2_n_0 ,\mul_ln28_1_reg_654[19]_i_3_n_0 ,\mul_ln28_1_reg_654[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_1_reg_654_reg[23]_i_1 
       (.CI(\mul_ln28_1_reg_654_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_1_reg_654_reg[23]_i_1_n_0 ,\mul_ln28_1_reg_654_reg[23]_i_1_n_1 ,\mul_ln28_1_reg_654_reg[23]_i_1_n_2 ,\mul_ln28_1_reg_654_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_1_reg_654[23]_i_2_n_0 ,\mul_ln28_1_reg_654[23]_i_3_n_0 ,\mul_ln28_1_reg_654[23]_i_4_n_0 ,\mul_ln28_1_reg_654[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_1_reg_654_reg[27]_i_1 
       (.CI(\mul_ln28_1_reg_654_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_1_reg_654_reg[27]_i_1_n_0 ,\mul_ln28_1_reg_654_reg[27]_i_1_n_1 ,\mul_ln28_1_reg_654_reg[27]_i_1_n_2 ,\mul_ln28_1_reg_654_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_1_reg_654[27]_i_2_n_0 ,\mul_ln28_1_reg_654[27]_i_3_n_0 ,\mul_ln28_1_reg_654[27]_i_4_n_0 ,\mul_ln28_1_reg_654[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_1_reg_654_reg[31]_i_1 
       (.CI(\mul_ln28_1_reg_654_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_1_reg_654_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_1_reg_654_reg[31]_i_1_n_1 ,\mul_ln28_1_reg_654_reg[31]_i_1_n_2 ,\mul_ln28_1_reg_654_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_1_reg_654[31]_i_2_n_0 ,\mul_ln28_1_reg_654[31]_i_3_n_0 ,\mul_ln28_1_reg_654[31]_i_4_n_0 ,\mul_ln28_1_reg_654[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_6
   (D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_2_reg_659[19]_i_2_n_0 ;
  wire \mul_ln28_2_reg_659[19]_i_3_n_0 ;
  wire \mul_ln28_2_reg_659[19]_i_4_n_0 ;
  wire \mul_ln28_2_reg_659[23]_i_2_n_0 ;
  wire \mul_ln28_2_reg_659[23]_i_3_n_0 ;
  wire \mul_ln28_2_reg_659[23]_i_4_n_0 ;
  wire \mul_ln28_2_reg_659[23]_i_5_n_0 ;
  wire \mul_ln28_2_reg_659[27]_i_2_n_0 ;
  wire \mul_ln28_2_reg_659[27]_i_3_n_0 ;
  wire \mul_ln28_2_reg_659[27]_i_4_n_0 ;
  wire \mul_ln28_2_reg_659[27]_i_5_n_0 ;
  wire \mul_ln28_2_reg_659[31]_i_2_n_0 ;
  wire \mul_ln28_2_reg_659[31]_i_3_n_0 ;
  wire \mul_ln28_2_reg_659[31]_i_4_n_0 ;
  wire \mul_ln28_2_reg_659[31]_i_5_n_0 ;
  wire \mul_ln28_2_reg_659_reg[19]_i_1_n_0 ;
  wire \mul_ln28_2_reg_659_reg[19]_i_1_n_1 ;
  wire \mul_ln28_2_reg_659_reg[19]_i_1_n_2 ;
  wire \mul_ln28_2_reg_659_reg[19]_i_1_n_3 ;
  wire \mul_ln28_2_reg_659_reg[23]_i_1_n_0 ;
  wire \mul_ln28_2_reg_659_reg[23]_i_1_n_1 ;
  wire \mul_ln28_2_reg_659_reg[23]_i_1_n_2 ;
  wire \mul_ln28_2_reg_659_reg[23]_i_1_n_3 ;
  wire \mul_ln28_2_reg_659_reg[27]_i_1_n_0 ;
  wire \mul_ln28_2_reg_659_reg[27]_i_1_n_1 ;
  wire \mul_ln28_2_reg_659_reg[27]_i_1_n_2 ;
  wire \mul_ln28_2_reg_659_reg[27]_i_1_n_3 ;
  wire \mul_ln28_2_reg_659_reg[31]_i_1_n_1 ;
  wire \mul_ln28_2_reg_659_reg[31]_i_1_n_2 ;
  wire \mul_ln28_2_reg_659_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_2_reg_659_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_2_reg_659[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_2_reg_659[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_2_reg_659[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_2_reg_659[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_2_reg_659[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_2_reg_659[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_2_reg_659[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_2_reg_659[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_2_reg_659[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_2_reg_659[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_2_reg_659[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_2_reg_659[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_2_reg_659[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_2_reg_659[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_2_reg_659[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_2_reg_659[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_2_reg_659_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_2_reg_659_reg[19]_i_1_n_0 ,\mul_ln28_2_reg_659_reg[19]_i_1_n_1 ,\mul_ln28_2_reg_659_reg[19]_i_1_n_2 ,\mul_ln28_2_reg_659_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_2_reg_659[19]_i_2_n_0 ,\mul_ln28_2_reg_659[19]_i_3_n_0 ,\mul_ln28_2_reg_659[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_2_reg_659_reg[23]_i_1 
       (.CI(\mul_ln28_2_reg_659_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_2_reg_659_reg[23]_i_1_n_0 ,\mul_ln28_2_reg_659_reg[23]_i_1_n_1 ,\mul_ln28_2_reg_659_reg[23]_i_1_n_2 ,\mul_ln28_2_reg_659_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_2_reg_659[23]_i_2_n_0 ,\mul_ln28_2_reg_659[23]_i_3_n_0 ,\mul_ln28_2_reg_659[23]_i_4_n_0 ,\mul_ln28_2_reg_659[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_2_reg_659_reg[27]_i_1 
       (.CI(\mul_ln28_2_reg_659_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_2_reg_659_reg[27]_i_1_n_0 ,\mul_ln28_2_reg_659_reg[27]_i_1_n_1 ,\mul_ln28_2_reg_659_reg[27]_i_1_n_2 ,\mul_ln28_2_reg_659_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_2_reg_659[27]_i_2_n_0 ,\mul_ln28_2_reg_659[27]_i_3_n_0 ,\mul_ln28_2_reg_659[27]_i_4_n_0 ,\mul_ln28_2_reg_659[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_2_reg_659_reg[31]_i_1 
       (.CI(\mul_ln28_2_reg_659_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_2_reg_659_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_2_reg_659_reg[31]_i_1_n_1 ,\mul_ln28_2_reg_659_reg[31]_i_1_n_2 ,\mul_ln28_2_reg_659_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_2_reg_659[31]_i_2_n_0 ,\mul_ln28_2_reg_659[31]_i_3_n_0 ,\mul_ln28_2_reg_659[31]_i_4_n_0 ,\mul_ln28_2_reg_659[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_7
   (D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_3_reg_664[19]_i_2_n_0 ;
  wire \mul_ln28_3_reg_664[19]_i_3_n_0 ;
  wire \mul_ln28_3_reg_664[19]_i_4_n_0 ;
  wire \mul_ln28_3_reg_664[23]_i_2_n_0 ;
  wire \mul_ln28_3_reg_664[23]_i_3_n_0 ;
  wire \mul_ln28_3_reg_664[23]_i_4_n_0 ;
  wire \mul_ln28_3_reg_664[23]_i_5_n_0 ;
  wire \mul_ln28_3_reg_664[27]_i_2_n_0 ;
  wire \mul_ln28_3_reg_664[27]_i_3_n_0 ;
  wire \mul_ln28_3_reg_664[27]_i_4_n_0 ;
  wire \mul_ln28_3_reg_664[27]_i_5_n_0 ;
  wire \mul_ln28_3_reg_664[31]_i_2_n_0 ;
  wire \mul_ln28_3_reg_664[31]_i_3_n_0 ;
  wire \mul_ln28_3_reg_664[31]_i_4_n_0 ;
  wire \mul_ln28_3_reg_664[31]_i_5_n_0 ;
  wire \mul_ln28_3_reg_664_reg[19]_i_1_n_0 ;
  wire \mul_ln28_3_reg_664_reg[19]_i_1_n_1 ;
  wire \mul_ln28_3_reg_664_reg[19]_i_1_n_2 ;
  wire \mul_ln28_3_reg_664_reg[19]_i_1_n_3 ;
  wire \mul_ln28_3_reg_664_reg[23]_i_1_n_0 ;
  wire \mul_ln28_3_reg_664_reg[23]_i_1_n_1 ;
  wire \mul_ln28_3_reg_664_reg[23]_i_1_n_2 ;
  wire \mul_ln28_3_reg_664_reg[23]_i_1_n_3 ;
  wire \mul_ln28_3_reg_664_reg[27]_i_1_n_0 ;
  wire \mul_ln28_3_reg_664_reg[27]_i_1_n_1 ;
  wire \mul_ln28_3_reg_664_reg[27]_i_1_n_2 ;
  wire \mul_ln28_3_reg_664_reg[27]_i_1_n_3 ;
  wire \mul_ln28_3_reg_664_reg[31]_i_1_n_1 ;
  wire \mul_ln28_3_reg_664_reg[31]_i_1_n_2 ;
  wire \mul_ln28_3_reg_664_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_3_reg_664_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_3_reg_664[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_3_reg_664[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_3_reg_664[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_3_reg_664[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_3_reg_664[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_3_reg_664[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_3_reg_664[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_3_reg_664[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_3_reg_664[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_3_reg_664[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_3_reg_664[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_3_reg_664[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_3_reg_664[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_3_reg_664[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_3_reg_664[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_3_reg_664[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_3_reg_664_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_3_reg_664_reg[19]_i_1_n_0 ,\mul_ln28_3_reg_664_reg[19]_i_1_n_1 ,\mul_ln28_3_reg_664_reg[19]_i_1_n_2 ,\mul_ln28_3_reg_664_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_3_reg_664[19]_i_2_n_0 ,\mul_ln28_3_reg_664[19]_i_3_n_0 ,\mul_ln28_3_reg_664[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_3_reg_664_reg[23]_i_1 
       (.CI(\mul_ln28_3_reg_664_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_3_reg_664_reg[23]_i_1_n_0 ,\mul_ln28_3_reg_664_reg[23]_i_1_n_1 ,\mul_ln28_3_reg_664_reg[23]_i_1_n_2 ,\mul_ln28_3_reg_664_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_3_reg_664[23]_i_2_n_0 ,\mul_ln28_3_reg_664[23]_i_3_n_0 ,\mul_ln28_3_reg_664[23]_i_4_n_0 ,\mul_ln28_3_reg_664[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_3_reg_664_reg[27]_i_1 
       (.CI(\mul_ln28_3_reg_664_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_3_reg_664_reg[27]_i_1_n_0 ,\mul_ln28_3_reg_664_reg[27]_i_1_n_1 ,\mul_ln28_3_reg_664_reg[27]_i_1_n_2 ,\mul_ln28_3_reg_664_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_3_reg_664[27]_i_2_n_0 ,\mul_ln28_3_reg_664[27]_i_3_n_0 ,\mul_ln28_3_reg_664[27]_i_4_n_0 ,\mul_ln28_3_reg_664[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_3_reg_664_reg[31]_i_1 
       (.CI(\mul_ln28_3_reg_664_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_3_reg_664_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_3_reg_664_reg[31]_i_1_n_1 ,\mul_ln28_3_reg_664_reg[31]_i_1_n_2 ,\mul_ln28_3_reg_664_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_3_reg_664[31]_i_2_n_0 ,\mul_ln28_3_reg_664[31]_i_3_n_0 ,\mul_ln28_3_reg_664[31]_i_4_n_0 ,\mul_ln28_3_reg_664[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_8
   (D,
    an32ShiftReg_30,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0);
  output [31:0]D;
  input an32ShiftReg_30;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire \mul_ln28_4_reg_669[19]_i_2_n_0 ;
  wire \mul_ln28_4_reg_669[19]_i_3_n_0 ;
  wire \mul_ln28_4_reg_669[19]_i_4_n_0 ;
  wire \mul_ln28_4_reg_669[23]_i_2_n_0 ;
  wire \mul_ln28_4_reg_669[23]_i_3_n_0 ;
  wire \mul_ln28_4_reg_669[23]_i_4_n_0 ;
  wire \mul_ln28_4_reg_669[23]_i_5_n_0 ;
  wire \mul_ln28_4_reg_669[27]_i_2_n_0 ;
  wire \mul_ln28_4_reg_669[27]_i_3_n_0 ;
  wire \mul_ln28_4_reg_669[27]_i_4_n_0 ;
  wire \mul_ln28_4_reg_669[27]_i_5_n_0 ;
  wire \mul_ln28_4_reg_669[31]_i_2_n_0 ;
  wire \mul_ln28_4_reg_669[31]_i_3_n_0 ;
  wire \mul_ln28_4_reg_669[31]_i_4_n_0 ;
  wire \mul_ln28_4_reg_669[31]_i_5_n_0 ;
  wire \mul_ln28_4_reg_669_reg[19]_i_1_n_0 ;
  wire \mul_ln28_4_reg_669_reg[19]_i_1_n_1 ;
  wire \mul_ln28_4_reg_669_reg[19]_i_1_n_2 ;
  wire \mul_ln28_4_reg_669_reg[19]_i_1_n_3 ;
  wire \mul_ln28_4_reg_669_reg[23]_i_1_n_0 ;
  wire \mul_ln28_4_reg_669_reg[23]_i_1_n_1 ;
  wire \mul_ln28_4_reg_669_reg[23]_i_1_n_2 ;
  wire \mul_ln28_4_reg_669_reg[23]_i_1_n_3 ;
  wire \mul_ln28_4_reg_669_reg[27]_i_1_n_0 ;
  wire \mul_ln28_4_reg_669_reg[27]_i_1_n_1 ;
  wire \mul_ln28_4_reg_669_reg[27]_i_1_n_2 ;
  wire \mul_ln28_4_reg_669_reg[27]_i_1_n_3 ;
  wire \mul_ln28_4_reg_669_reg[31]_i_1_n_1 ;
  wire \mul_ln28_4_reg_669_reg[31]_i_1_n_2 ;
  wire \mul_ln28_4_reg_669_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_4_reg_669_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_4_reg_669[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_4_reg_669[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_4_reg_669[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_4_reg_669[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_4_reg_669[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_4_reg_669[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_4_reg_669[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_4_reg_669[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_4_reg_669[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_4_reg_669[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_4_reg_669[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_4_reg_669[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_4_reg_669[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_4_reg_669[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_4_reg_669[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_4_reg_669[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_4_reg_669_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_4_reg_669_reg[19]_i_1_n_0 ,\mul_ln28_4_reg_669_reg[19]_i_1_n_1 ,\mul_ln28_4_reg_669_reg[19]_i_1_n_2 ,\mul_ln28_4_reg_669_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_4_reg_669[19]_i_2_n_0 ,\mul_ln28_4_reg_669[19]_i_3_n_0 ,\mul_ln28_4_reg_669[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_4_reg_669_reg[23]_i_1 
       (.CI(\mul_ln28_4_reg_669_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_4_reg_669_reg[23]_i_1_n_0 ,\mul_ln28_4_reg_669_reg[23]_i_1_n_1 ,\mul_ln28_4_reg_669_reg[23]_i_1_n_2 ,\mul_ln28_4_reg_669_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_4_reg_669[23]_i_2_n_0 ,\mul_ln28_4_reg_669[23]_i_3_n_0 ,\mul_ln28_4_reg_669[23]_i_4_n_0 ,\mul_ln28_4_reg_669[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_4_reg_669_reg[27]_i_1 
       (.CI(\mul_ln28_4_reg_669_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_4_reg_669_reg[27]_i_1_n_0 ,\mul_ln28_4_reg_669_reg[27]_i_1_n_1 ,\mul_ln28_4_reg_669_reg[27]_i_1_n_2 ,\mul_ln28_4_reg_669_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_4_reg_669[27]_i_2_n_0 ,\mul_ln28_4_reg_669[27]_i_3_n_0 ,\mul_ln28_4_reg_669[27]_i_4_n_0 ,\mul_ln28_4_reg_669[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_4_reg_669_reg[31]_i_1 
       (.CI(\mul_ln28_4_reg_669_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_4_reg_669_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_4_reg_669_reg[31]_i_1_n_1 ,\mul_ln28_4_reg_669_reg[31]_i_1_n_2 ,\mul_ln28_4_reg_669_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_4_reg_669[31]_i_2_n_0 ,\mul_ln28_4_reg_669[31]_i_3_n_0 ,\mul_ln28_4_reg_669[31]_i_4_n_0 ,\mul_ln28_4_reg_669[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "fir_n11_maxi_mul_32s_32s_32_2_1" *) 
module design_1_fir_n11_maxi_0_0_fir_n11_maxi_mul_32s_32s_32_2_1_9
   (an32ShiftReg_30,
    D,
    an32Coef_ce0,
    Q,
    E,
    ap_clk,
    q00,
    dout_reg_0,
    ap_enable_reg_pp0_iter3,
    tmp_product_0,
    gmem_WREADY,
    tmp_product_1,
    gmem_RVALID);
  output an32ShiftReg_30;
  output [31:0]D;
  input an32Coef_ce0;
  input [0:0]Q;
  input [0:0]E;
  input ap_clk;
  input [31:0]q00;
  input [31:0]dout_reg_0;
  input ap_enable_reg_pp0_iter3;
  input tmp_product_0;
  input gmem_WREADY;
  input tmp_product_1;
  input gmem_RVALID;

  wire [31:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire an32Coef_ce0;
  wire an32ShiftReg_30;
  wire ap_clk;
  wire ap_enable_reg_pp0_iter3;
  wire \dout_reg[16]__0_n_0 ;
  wire [31:0]dout_reg_0;
  wire dout_reg_n_100;
  wire dout_reg_n_101;
  wire dout_reg_n_102;
  wire dout_reg_n_103;
  wire dout_reg_n_104;
  wire dout_reg_n_105;
  wire dout_reg_n_58;
  wire dout_reg_n_59;
  wire dout_reg_n_60;
  wire dout_reg_n_61;
  wire dout_reg_n_62;
  wire dout_reg_n_63;
  wire dout_reg_n_64;
  wire dout_reg_n_65;
  wire dout_reg_n_66;
  wire dout_reg_n_67;
  wire dout_reg_n_68;
  wire dout_reg_n_69;
  wire dout_reg_n_70;
  wire dout_reg_n_71;
  wire dout_reg_n_72;
  wire dout_reg_n_73;
  wire dout_reg_n_74;
  wire dout_reg_n_75;
  wire dout_reg_n_76;
  wire dout_reg_n_77;
  wire dout_reg_n_78;
  wire dout_reg_n_79;
  wire dout_reg_n_80;
  wire dout_reg_n_81;
  wire dout_reg_n_82;
  wire dout_reg_n_83;
  wire dout_reg_n_84;
  wire dout_reg_n_85;
  wire dout_reg_n_86;
  wire dout_reg_n_87;
  wire dout_reg_n_88;
  wire dout_reg_n_89;
  wire dout_reg_n_90;
  wire dout_reg_n_91;
  wire dout_reg_n_92;
  wire dout_reg_n_93;
  wire dout_reg_n_94;
  wire dout_reg_n_95;
  wire dout_reg_n_96;
  wire dout_reg_n_97;
  wire dout_reg_n_98;
  wire dout_reg_n_99;
  wire gmem_RVALID;
  wire gmem_WREADY;
  wire \mul_ln28_5_reg_674[19]_i_2_n_0 ;
  wire \mul_ln28_5_reg_674[19]_i_3_n_0 ;
  wire \mul_ln28_5_reg_674[19]_i_4_n_0 ;
  wire \mul_ln28_5_reg_674[23]_i_2_n_0 ;
  wire \mul_ln28_5_reg_674[23]_i_3_n_0 ;
  wire \mul_ln28_5_reg_674[23]_i_4_n_0 ;
  wire \mul_ln28_5_reg_674[23]_i_5_n_0 ;
  wire \mul_ln28_5_reg_674[27]_i_2_n_0 ;
  wire \mul_ln28_5_reg_674[27]_i_3_n_0 ;
  wire \mul_ln28_5_reg_674[27]_i_4_n_0 ;
  wire \mul_ln28_5_reg_674[27]_i_5_n_0 ;
  wire \mul_ln28_5_reg_674[31]_i_2_n_0 ;
  wire \mul_ln28_5_reg_674[31]_i_3_n_0 ;
  wire \mul_ln28_5_reg_674[31]_i_4_n_0 ;
  wire \mul_ln28_5_reg_674[31]_i_5_n_0 ;
  wire \mul_ln28_5_reg_674_reg[19]_i_1_n_0 ;
  wire \mul_ln28_5_reg_674_reg[19]_i_1_n_1 ;
  wire \mul_ln28_5_reg_674_reg[19]_i_1_n_2 ;
  wire \mul_ln28_5_reg_674_reg[19]_i_1_n_3 ;
  wire \mul_ln28_5_reg_674_reg[23]_i_1_n_0 ;
  wire \mul_ln28_5_reg_674_reg[23]_i_1_n_1 ;
  wire \mul_ln28_5_reg_674_reg[23]_i_1_n_2 ;
  wire \mul_ln28_5_reg_674_reg[23]_i_1_n_3 ;
  wire \mul_ln28_5_reg_674_reg[27]_i_1_n_0 ;
  wire \mul_ln28_5_reg_674_reg[27]_i_1_n_1 ;
  wire \mul_ln28_5_reg_674_reg[27]_i_1_n_2 ;
  wire \mul_ln28_5_reg_674_reg[27]_i_1_n_3 ;
  wire \mul_ln28_5_reg_674_reg[31]_i_1_n_1 ;
  wire \mul_ln28_5_reg_674_reg[31]_i_1_n_2 ;
  wire \mul_ln28_5_reg_674_reg[31]_i_1_n_3 ;
  wire [31:0]q00;
  wire tmp_product_0;
  wire tmp_product_1;
  wire tmp_product__0_n_100;
  wire tmp_product__0_n_101;
  wire tmp_product__0_n_102;
  wire tmp_product__0_n_103;
  wire tmp_product__0_n_104;
  wire tmp_product__0_n_105;
  wire tmp_product__0_n_106;
  wire tmp_product__0_n_107;
  wire tmp_product__0_n_108;
  wire tmp_product__0_n_109;
  wire tmp_product__0_n_110;
  wire tmp_product__0_n_111;
  wire tmp_product__0_n_112;
  wire tmp_product__0_n_113;
  wire tmp_product__0_n_114;
  wire tmp_product__0_n_115;
  wire tmp_product__0_n_116;
  wire tmp_product__0_n_117;
  wire tmp_product__0_n_118;
  wire tmp_product__0_n_119;
  wire tmp_product__0_n_120;
  wire tmp_product__0_n_121;
  wire tmp_product__0_n_122;
  wire tmp_product__0_n_123;
  wire tmp_product__0_n_124;
  wire tmp_product__0_n_125;
  wire tmp_product__0_n_126;
  wire tmp_product__0_n_127;
  wire tmp_product__0_n_128;
  wire tmp_product__0_n_129;
  wire tmp_product__0_n_130;
  wire tmp_product__0_n_131;
  wire tmp_product__0_n_132;
  wire tmp_product__0_n_133;
  wire tmp_product__0_n_134;
  wire tmp_product__0_n_135;
  wire tmp_product__0_n_136;
  wire tmp_product__0_n_137;
  wire tmp_product__0_n_138;
  wire tmp_product__0_n_139;
  wire tmp_product__0_n_140;
  wire tmp_product__0_n_141;
  wire tmp_product__0_n_142;
  wire tmp_product__0_n_143;
  wire tmp_product__0_n_144;
  wire tmp_product__0_n_145;
  wire tmp_product__0_n_146;
  wire tmp_product__0_n_147;
  wire tmp_product__0_n_148;
  wire tmp_product__0_n_149;
  wire tmp_product__0_n_150;
  wire tmp_product__0_n_151;
  wire tmp_product__0_n_152;
  wire tmp_product__0_n_153;
  wire tmp_product__0_n_58;
  wire tmp_product__0_n_59;
  wire tmp_product__0_n_60;
  wire tmp_product__0_n_61;
  wire tmp_product__0_n_62;
  wire tmp_product__0_n_63;
  wire tmp_product__0_n_64;
  wire tmp_product__0_n_65;
  wire tmp_product__0_n_66;
  wire tmp_product__0_n_67;
  wire tmp_product__0_n_68;
  wire tmp_product__0_n_69;
  wire tmp_product__0_n_70;
  wire tmp_product__0_n_71;
  wire tmp_product__0_n_72;
  wire tmp_product__0_n_73;
  wire tmp_product__0_n_74;
  wire tmp_product__0_n_75;
  wire tmp_product__0_n_76;
  wire tmp_product__0_n_77;
  wire tmp_product__0_n_78;
  wire tmp_product__0_n_79;
  wire tmp_product__0_n_80;
  wire tmp_product__0_n_81;
  wire tmp_product__0_n_82;
  wire tmp_product__0_n_83;
  wire tmp_product__0_n_84;
  wire tmp_product__0_n_85;
  wire tmp_product__0_n_86;
  wire tmp_product__0_n_87;
  wire tmp_product__0_n_88;
  wire tmp_product__0_n_89;
  wire tmp_product__0_n_90;
  wire tmp_product__0_n_91;
  wire tmp_product__0_n_92;
  wire tmp_product__0_n_93;
  wire tmp_product__0_n_94;
  wire tmp_product__0_n_95;
  wire tmp_product__0_n_96;
  wire tmp_product__0_n_97;
  wire tmp_product__0_n_98;
  wire tmp_product__0_n_99;
  wire tmp_product_n_100;
  wire tmp_product_n_101;
  wire tmp_product_n_102;
  wire tmp_product_n_103;
  wire tmp_product_n_104;
  wire tmp_product_n_105;
  wire tmp_product_n_106;
  wire tmp_product_n_107;
  wire tmp_product_n_108;
  wire tmp_product_n_109;
  wire tmp_product_n_110;
  wire tmp_product_n_111;
  wire tmp_product_n_112;
  wire tmp_product_n_113;
  wire tmp_product_n_114;
  wire tmp_product_n_115;
  wire tmp_product_n_116;
  wire tmp_product_n_117;
  wire tmp_product_n_118;
  wire tmp_product_n_119;
  wire tmp_product_n_120;
  wire tmp_product_n_121;
  wire tmp_product_n_122;
  wire tmp_product_n_123;
  wire tmp_product_n_124;
  wire tmp_product_n_125;
  wire tmp_product_n_126;
  wire tmp_product_n_127;
  wire tmp_product_n_128;
  wire tmp_product_n_129;
  wire tmp_product_n_130;
  wire tmp_product_n_131;
  wire tmp_product_n_132;
  wire tmp_product_n_133;
  wire tmp_product_n_134;
  wire tmp_product_n_135;
  wire tmp_product_n_136;
  wire tmp_product_n_137;
  wire tmp_product_n_138;
  wire tmp_product_n_139;
  wire tmp_product_n_140;
  wire tmp_product_n_141;
  wire tmp_product_n_142;
  wire tmp_product_n_143;
  wire tmp_product_n_144;
  wire tmp_product_n_145;
  wire tmp_product_n_146;
  wire tmp_product_n_147;
  wire tmp_product_n_148;
  wire tmp_product_n_149;
  wire tmp_product_n_150;
  wire tmp_product_n_151;
  wire tmp_product_n_152;
  wire tmp_product_n_153;
  wire tmp_product_n_58;
  wire tmp_product_n_59;
  wire tmp_product_n_60;
  wire tmp_product_n_61;
  wire tmp_product_n_62;
  wire tmp_product_n_63;
  wire tmp_product_n_64;
  wire tmp_product_n_65;
  wire tmp_product_n_66;
  wire tmp_product_n_67;
  wire tmp_product_n_68;
  wire tmp_product_n_69;
  wire tmp_product_n_70;
  wire tmp_product_n_71;
  wire tmp_product_n_72;
  wire tmp_product_n_73;
  wire tmp_product_n_74;
  wire tmp_product_n_75;
  wire tmp_product_n_76;
  wire tmp_product_n_77;
  wire tmp_product_n_78;
  wire tmp_product_n_79;
  wire tmp_product_n_80;
  wire tmp_product_n_81;
  wire tmp_product_n_82;
  wire tmp_product_n_83;
  wire tmp_product_n_84;
  wire tmp_product_n_85;
  wire tmp_product_n_86;
  wire tmp_product_n_87;
  wire tmp_product_n_88;
  wire tmp_product_n_89;
  wire tmp_product_n_90;
  wire tmp_product_n_91;
  wire tmp_product_n_92;
  wire tmp_product_n_93;
  wire tmp_product_n_94;
  wire tmp_product_n_95;
  wire tmp_product_n_96;
  wire tmp_product_n_97;
  wire tmp_product_n_98;
  wire tmp_product_n_99;
  wire NLW_dout_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_dout_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_dout_reg_OVERFLOW_UNCONNECTED;
  wire NLW_dout_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_dout_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_dout_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_dout_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_dout_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_dout_reg_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_dout_reg_PCOUT_UNCONNECTED;
  wire [3:3]\NLW_mul_ln28_5_reg_674_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_tmp_product_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product_CARRYOUT_UNCONNECTED;
  wire NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_tmp_product__0_OVERFLOW_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_tmp_product__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_tmp_product__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_tmp_product__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_tmp_product__0_CARRYOUT_UNCONNECTED;

  LUT5 #(
    .INIT(32'hA2A200A2)) 
    \an32ShiftReg_3[31]_i_1 
       (.I0(ap_enable_reg_pp0_iter3),
        .I1(tmp_product_0),
        .I2(gmem_WREADY),
        .I3(tmp_product_1),
        .I4(gmem_RVALID),
        .O(an32ShiftReg_30));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    dout_reg
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_dout_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({dout_reg_0[31],dout_reg_0[31],dout_reg_0[31],dout_reg_0[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_dout_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_dout_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_dout_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_dout_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_dout_reg_OVERFLOW_UNCONNECTED),
        .P({dout_reg_n_58,dout_reg_n_59,dout_reg_n_60,dout_reg_n_61,dout_reg_n_62,dout_reg_n_63,dout_reg_n_64,dout_reg_n_65,dout_reg_n_66,dout_reg_n_67,dout_reg_n_68,dout_reg_n_69,dout_reg_n_70,dout_reg_n_71,dout_reg_n_72,dout_reg_n_73,dout_reg_n_74,dout_reg_n_75,dout_reg_n_76,dout_reg_n_77,dout_reg_n_78,dout_reg_n_79,dout_reg_n_80,dout_reg_n_81,dout_reg_n_82,dout_reg_n_83,dout_reg_n_84,dout_reg_n_85,dout_reg_n_86,dout_reg_n_87,dout_reg_n_88,dout_reg_n_89,dout_reg_n_90,dout_reg_n_91,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94,dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98,dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102,dout_reg_n_103,dout_reg_n_104,dout_reg_n_105}),
        .PATTERNBDETECT(NLW_dout_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_dout_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .PCOUT(NLW_dout_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_dout_reg_UNDERFLOW_UNCONNECTED));
  FDRE \dout_reg[0]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_105),
        .Q(D[0]),
        .R(1'b0));
  FDRE \dout_reg[10]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_95),
        .Q(D[10]),
        .R(1'b0));
  FDRE \dout_reg[11]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_94),
        .Q(D[11]),
        .R(1'b0));
  FDRE \dout_reg[12]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_93),
        .Q(D[12]),
        .R(1'b0));
  FDRE \dout_reg[13]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_92),
        .Q(D[13]),
        .R(1'b0));
  FDRE \dout_reg[14]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_91),
        .Q(D[14]),
        .R(1'b0));
  FDRE \dout_reg[15]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_90),
        .Q(D[15]),
        .R(1'b0));
  FDRE \dout_reg[16]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_89),
        .Q(\dout_reg[16]__0_n_0 ),
        .R(1'b0));
  FDRE \dout_reg[1]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_104),
        .Q(D[1]),
        .R(1'b0));
  FDRE \dout_reg[2]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_103),
        .Q(D[2]),
        .R(1'b0));
  FDRE \dout_reg[3]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_102),
        .Q(D[3]),
        .R(1'b0));
  FDRE \dout_reg[4]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_101),
        .Q(D[4]),
        .R(1'b0));
  FDRE \dout_reg[5]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_100),
        .Q(D[5]),
        .R(1'b0));
  FDRE \dout_reg[6]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_99),
        .Q(D[6]),
        .R(1'b0));
  FDRE \dout_reg[7]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_98),
        .Q(D[7]),
        .R(1'b0));
  FDRE \dout_reg[8]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_97),
        .Q(D[8]),
        .R(1'b0));
  FDRE \dout_reg[9]__0 
       (.C(ap_clk),
        .CE(E),
        .D(tmp_product__0_n_96),
        .Q(D[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[19]_i_2 
       (.I0(dout_reg_n_103),
        .I1(tmp_product_n_103),
        .O(\mul_ln28_5_reg_674[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[19]_i_3 
       (.I0(dout_reg_n_104),
        .I1(tmp_product_n_104),
        .O(\mul_ln28_5_reg_674[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[19]_i_4 
       (.I0(dout_reg_n_105),
        .I1(tmp_product_n_105),
        .O(\mul_ln28_5_reg_674[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[23]_i_2 
       (.I0(dout_reg_n_99),
        .I1(tmp_product_n_99),
        .O(\mul_ln28_5_reg_674[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[23]_i_3 
       (.I0(dout_reg_n_100),
        .I1(tmp_product_n_100),
        .O(\mul_ln28_5_reg_674[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[23]_i_4 
       (.I0(dout_reg_n_101),
        .I1(tmp_product_n_101),
        .O(\mul_ln28_5_reg_674[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[23]_i_5 
       (.I0(dout_reg_n_102),
        .I1(tmp_product_n_102),
        .O(\mul_ln28_5_reg_674[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[27]_i_2 
       (.I0(dout_reg_n_95),
        .I1(tmp_product_n_95),
        .O(\mul_ln28_5_reg_674[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[27]_i_3 
       (.I0(dout_reg_n_96),
        .I1(tmp_product_n_96),
        .O(\mul_ln28_5_reg_674[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[27]_i_4 
       (.I0(dout_reg_n_97),
        .I1(tmp_product_n_97),
        .O(\mul_ln28_5_reg_674[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[27]_i_5 
       (.I0(dout_reg_n_98),
        .I1(tmp_product_n_98),
        .O(\mul_ln28_5_reg_674[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[31]_i_2 
       (.I0(dout_reg_n_91),
        .I1(tmp_product_n_91),
        .O(\mul_ln28_5_reg_674[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[31]_i_3 
       (.I0(dout_reg_n_92),
        .I1(tmp_product_n_92),
        .O(\mul_ln28_5_reg_674[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[31]_i_4 
       (.I0(dout_reg_n_93),
        .I1(tmp_product_n_93),
        .O(\mul_ln28_5_reg_674[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mul_ln28_5_reg_674[31]_i_5 
       (.I0(dout_reg_n_94),
        .I1(tmp_product_n_94),
        .O(\mul_ln28_5_reg_674[31]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_5_reg_674_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mul_ln28_5_reg_674_reg[19]_i_1_n_0 ,\mul_ln28_5_reg_674_reg[19]_i_1_n_1 ,\mul_ln28_5_reg_674_reg[19]_i_1_n_2 ,\mul_ln28_5_reg_674_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_103,dout_reg_n_104,dout_reg_n_105,1'b0}),
        .O(D[19:16]),
        .S({\mul_ln28_5_reg_674[19]_i_2_n_0 ,\mul_ln28_5_reg_674[19]_i_3_n_0 ,\mul_ln28_5_reg_674[19]_i_4_n_0 ,\dout_reg[16]__0_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_5_reg_674_reg[23]_i_1 
       (.CI(\mul_ln28_5_reg_674_reg[19]_i_1_n_0 ),
        .CO({\mul_ln28_5_reg_674_reg[23]_i_1_n_0 ,\mul_ln28_5_reg_674_reg[23]_i_1_n_1 ,\mul_ln28_5_reg_674_reg[23]_i_1_n_2 ,\mul_ln28_5_reg_674_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_99,dout_reg_n_100,dout_reg_n_101,dout_reg_n_102}),
        .O(D[23:20]),
        .S({\mul_ln28_5_reg_674[23]_i_2_n_0 ,\mul_ln28_5_reg_674[23]_i_3_n_0 ,\mul_ln28_5_reg_674[23]_i_4_n_0 ,\mul_ln28_5_reg_674[23]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_5_reg_674_reg[27]_i_1 
       (.CI(\mul_ln28_5_reg_674_reg[23]_i_1_n_0 ),
        .CO({\mul_ln28_5_reg_674_reg[27]_i_1_n_0 ,\mul_ln28_5_reg_674_reg[27]_i_1_n_1 ,\mul_ln28_5_reg_674_reg[27]_i_1_n_2 ,\mul_ln28_5_reg_674_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({dout_reg_n_95,dout_reg_n_96,dout_reg_n_97,dout_reg_n_98}),
        .O(D[27:24]),
        .S({\mul_ln28_5_reg_674[27]_i_2_n_0 ,\mul_ln28_5_reg_674[27]_i_3_n_0 ,\mul_ln28_5_reg_674[27]_i_4_n_0 ,\mul_ln28_5_reg_674[27]_i_5_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 \mul_ln28_5_reg_674_reg[31]_i_1 
       (.CI(\mul_ln28_5_reg_674_reg[27]_i_1_n_0 ),
        .CO({\NLW_mul_ln28_5_reg_674_reg[31]_i_1_CO_UNCONNECTED [3],\mul_ln28_5_reg_674_reg[31]_i_1_n_1 ,\mul_ln28_5_reg_674_reg[31]_i_1_n_2 ,\mul_ln28_5_reg_674_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,dout_reg_n_92,dout_reg_n_93,dout_reg_n_94}),
        .O(D[31:28]),
        .S({\mul_ln28_5_reg_674[31]_i_2_n_0 ,\mul_ln28_5_reg_674[31]_i_3_n_0 ,\mul_ln28_5_reg_674[31]_i_4_n_0 ,\mul_ln28_5_reg_674[31]_i_5_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dout_reg_0[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({q00[31],q00[31],q00[31],q00[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32ShiftReg_30),
        .CEA2(an32ShiftReg_30),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32Coef_ce0),
        .CEB2(Q),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(E),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product_OVERFLOW_UNCONNECTED),
        .P({tmp_product_n_58,tmp_product_n_59,tmp_product_n_60,tmp_product_n_61,tmp_product_n_62,tmp_product_n_63,tmp_product_n_64,tmp_product_n_65,tmp_product_n_66,tmp_product_n_67,tmp_product_n_68,tmp_product_n_69,tmp_product_n_70,tmp_product_n_71,tmp_product_n_72,tmp_product_n_73,tmp_product_n_74,tmp_product_n_75,tmp_product_n_76,tmp_product_n_77,tmp_product_n_78,tmp_product_n_79,tmp_product_n_80,tmp_product_n_81,tmp_product_n_82,tmp_product_n_83,tmp_product_n_84,tmp_product_n_85,tmp_product_n_86,tmp_product_n_87,tmp_product_n_88,tmp_product_n_89,tmp_product_n_90,tmp_product_n_91,tmp_product_n_92,tmp_product_n_93,tmp_product_n_94,tmp_product_n_95,tmp_product_n_96,tmp_product_n_97,tmp_product_n_98,tmp_product_n_99,tmp_product_n_100,tmp_product_n_101,tmp_product_n_102,tmp_product_n_103,tmp_product_n_104,tmp_product_n_105}),
        .PATTERNBDETECT(NLW_tmp_product_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product_n_106,tmp_product_n_107,tmp_product_n_108,tmp_product_n_109,tmp_product_n_110,tmp_product_n_111,tmp_product_n_112,tmp_product_n_113,tmp_product_n_114,tmp_product_n_115,tmp_product_n_116,tmp_product_n_117,tmp_product_n_118,tmp_product_n_119,tmp_product_n_120,tmp_product_n_121,tmp_product_n_122,tmp_product_n_123,tmp_product_n_124,tmp_product_n_125,tmp_product_n_126,tmp_product_n_127,tmp_product_n_128,tmp_product_n_129,tmp_product_n_130,tmp_product_n_131,tmp_product_n_132,tmp_product_n_133,tmp_product_n_134,tmp_product_n_135,tmp_product_n_136,tmp_product_n_137,tmp_product_n_138,tmp_product_n_139,tmp_product_n_140,tmp_product_n_141,tmp_product_n_142,tmp_product_n_143,tmp_product_n_144,tmp_product_n_145,tmp_product_n_146,tmp_product_n_147,tmp_product_n_148,tmp_product_n_149,tmp_product_n_150,tmp_product_n_151,tmp_product_n_152,tmp_product_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(2),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(2),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(2),
    .BREG(2),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    tmp_product__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,q00[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_tmp_product__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,dout_reg_0[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_tmp_product__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_tmp_product__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_tmp_product__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(an32Coef_ce0),
        .CEA2(Q),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(an32ShiftReg_30),
        .CEB2(an32ShiftReg_30),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(ap_clk),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_tmp_product__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_tmp_product__0_OVERFLOW_UNCONNECTED),
        .P({tmp_product__0_n_58,tmp_product__0_n_59,tmp_product__0_n_60,tmp_product__0_n_61,tmp_product__0_n_62,tmp_product__0_n_63,tmp_product__0_n_64,tmp_product__0_n_65,tmp_product__0_n_66,tmp_product__0_n_67,tmp_product__0_n_68,tmp_product__0_n_69,tmp_product__0_n_70,tmp_product__0_n_71,tmp_product__0_n_72,tmp_product__0_n_73,tmp_product__0_n_74,tmp_product__0_n_75,tmp_product__0_n_76,tmp_product__0_n_77,tmp_product__0_n_78,tmp_product__0_n_79,tmp_product__0_n_80,tmp_product__0_n_81,tmp_product__0_n_82,tmp_product__0_n_83,tmp_product__0_n_84,tmp_product__0_n_85,tmp_product__0_n_86,tmp_product__0_n_87,tmp_product__0_n_88,tmp_product__0_n_89,tmp_product__0_n_90,tmp_product__0_n_91,tmp_product__0_n_92,tmp_product__0_n_93,tmp_product__0_n_94,tmp_product__0_n_95,tmp_product__0_n_96,tmp_product__0_n_97,tmp_product__0_n_98,tmp_product__0_n_99,tmp_product__0_n_100,tmp_product__0_n_101,tmp_product__0_n_102,tmp_product__0_n_103,tmp_product__0_n_104,tmp_product__0_n_105}),
        .PATTERNBDETECT(NLW_tmp_product__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_tmp_product__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({tmp_product__0_n_106,tmp_product__0_n_107,tmp_product__0_n_108,tmp_product__0_n_109,tmp_product__0_n_110,tmp_product__0_n_111,tmp_product__0_n_112,tmp_product__0_n_113,tmp_product__0_n_114,tmp_product__0_n_115,tmp_product__0_n_116,tmp_product__0_n_117,tmp_product__0_n_118,tmp_product__0_n_119,tmp_product__0_n_120,tmp_product__0_n_121,tmp_product__0_n_122,tmp_product__0_n_123,tmp_product__0_n_124,tmp_product__0_n_125,tmp_product__0_n_126,tmp_product__0_n_127,tmp_product__0_n_128,tmp_product__0_n_129,tmp_product__0_n_130,tmp_product__0_n_131,tmp_product__0_n_132,tmp_product__0_n_133,tmp_product__0_n_134,tmp_product__0_n_135,tmp_product__0_n_136,tmp_product__0_n_137,tmp_product__0_n_138,tmp_product__0_n_139,tmp_product__0_n_140,tmp_product__0_n_141,tmp_product__0_n_142,tmp_product__0_n_143,tmp_product__0_n_144,tmp_product__0_n_145,tmp_product__0_n_146,tmp_product__0_n_147,tmp_product__0_n_148,tmp_product__0_n_149,tmp_product__0_n_150,tmp_product__0_n_151,tmp_product__0_n_152,tmp_product__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_tmp_product__0_UNDERFLOW_UNCONNECTED));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
